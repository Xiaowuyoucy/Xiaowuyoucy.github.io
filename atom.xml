<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanChen</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaowuyoucy.github.io/"/>
  <updated>2020-02-24T02:04:20.976Z</updated>
  <id>https://xiaowuyoucy.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据库的相关概念</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/24/数据库的相关概念/</id>
    <published>2020-02-24T01:59:40.000Z</published>
    <updated>2020-02-24T02:04:20.976Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库的相关概念"><a class="markdownIt-Anchor" href="#数据库的相关概念"></a> 数据库的相关概念</h1><p><img src="/images/javawz/QQ%E6%88%AA%E5%9B%BE20200220173032.png" alt="QQ截图20200220173032"></p><br><br><br><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200220172652.png" alt="微信截图_20200220172652"></p><br><br><br><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200220172743.png" alt="微信截图_20200220172743"></p><br><br><br><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200220172851.png" alt="微信截图_20200220172851"></p><br><br><br><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200220172906.png" alt="微信截图_20200220172906"></p><br><br><br><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200220172926.png" alt="微信截图_20200220172926"></p><br><br><br><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200220173137.png" alt="微信截图_20200220173137"></p><br><br><br><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200220173234.png" alt="微信截图_20200220173234"></p><br><br><br><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200220173249.png" alt="微信截图_20200220173249"></p><br><br><br><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200220173304.png" alt="微信截图_20200220173304"></p><br><br><br><br><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数据库的相关概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据库的相关概念&quot;&gt;&lt;/a&gt; 数据库的相关概念&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/javawz/QQ%E6%88%AA%E5%9B%BE202002201
      
    
    </summary>
    
      <category term="MYSQL" scheme="https://xiaowuyoucy.github.io/categories/MYSQL/"/>
    
    
  </entry>
  
  <entry>
    <title>静态static关键字修饰成员方法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/19/java00067%E9%9D%99%E6%80%81static%E5%85%B3%E9%94%AE%E5%AD%97%E4%BF%AE%E9%A5%B0%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/19/java00067静态static关键字修饰成员方法/</id>
    <published>2020-02-18T23:57:16.000Z</published>
    <updated>2020-02-19T00:37:04.747Z</updated>
    
    <content type="html"><![CDATA[<h1 id="静态static关键字修饰成员方法"><a class="markdownIt-Anchor" href="#静态static关键字修饰成员方法"></a> 静态static关键字修饰成员方法</h1><p>1.一旦使用<code>static</code>修饰成员方法,那么这就成为了静态方法.</p><p>2.静态方法不属于对象,而是属于类的.</p><p>3.如果没有用<code>static</code>关键字,那么首先必须先创建对象,然后通过对象才能使用成员方法.</p><p>4.对于静态方法来说,可以通过对象名进行调用,也可以通过类名来调用.但推荐使用类名来调用.</p><p>5.如果是使用对象名来调用静态成员变量,在编译之后也会被<code>javac</code>翻译成为<code>类名.静态方法名</code></p><p>6.如果有了<code>static</code>关键字,那么不需要创建对象,直接就能通过类名称来使用它</p><p>7.无论是成员变量还是成员方法,如果有了<code>static</code>,都推荐使用<code>类名称</code>进行调用.</p><p>8.静态成员变量:<code>类名称.静态变量;</code></p><p>9.静态方法:<code>类名称.静态方法();</code></p><p>10.对于在本类当中的静态方法,可以省略类名称.</p><br><br><h5 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意:</h5><p>1.静态不能直接访问非静态.</p><p>原因:因为在内存当中,是先有的静态内容,后有的非静态内容.</p><br><p>2.静态方法不能使用this.</p><p>原因:this代表当前对象,通过谁调用的方法,谁就是对象.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main16</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student2 stu = <span class="keyword">new</span> Student2(<span class="string">"小明"</span>);</span><br><span class="line">        Student2.room = <span class="string">"101课室"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员方法</span></span><br><span class="line">        stu.showVar();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用静态成员方法</span></span><br><span class="line">        Student2.showStaticVar();</span><br><span class="line">        stu.showStaticVar();<span class="comment">//不推荐使用对象名调用静态成员方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个Student2类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student2</span></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line"><span class="comment">/*====================================================================*/</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String room;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student2</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">/*====================================================================*/</span></span><br><span class="line">    <span class="comment">//非静态成员方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showVar</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"名字: "</span> + <span class="keyword">this</span>.name);</span><br><span class="line">        System.out.println(<span class="string">"年龄: "</span> + Student2.room);</span><br><span class="line"></span><br><span class="line">        showStaticVar(); <span class="comment">//在本类中可以直接使用静态成员方法,不用加类名</span></span><br><span class="line">        Student2.showStaticVar(); <span class="comment">//加类名使用静态成员方法</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//静态成员方法</span></span><br><span class="line">    <span class="comment">//属于类,不属于对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showStaticVar</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"年龄: "</span> + Student2.room);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;静态static关键字修饰成员方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#静态static关键字修饰成员方法&quot;&gt;&lt;/a&gt; 静态static关键字修饰成员方法&lt;/h1&gt;
&lt;p&gt;1.一旦使用&lt;code&gt;static&lt;/code&gt;修饰
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>静态static关键字修饰成员变量</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/19/java00066%E9%9D%99%E6%80%81static%E5%85%B3%E9%94%AE%E5%AD%97%E4%BF%AE%E9%A5%B0%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/19/java00066静态static关键字修饰成员变量/</id>
    <published>2020-02-18T22:58:40.000Z</published>
    <updated>2020-02-19T00:52:12.961Z</updated>
    
    <content type="html"><![CDATA[<h1 id="静态static关键字修饰成员变量"><a class="markdownIt-Anchor" href="#静态static关键字修饰成员变量"></a> 静态static关键字修饰成员变量</h1><p>如果一个成员变量使用了<code>static</code>关键字,那么这个变量就不再属于对象自己,而是属于所在的类.多个对象共享同一份数据.</p><br><br><h4 id="格式"><a class="markdownIt-Anchor" href="#格式"></a> 格式:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> number;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">float</span> jiGe;</span><br></pre></td></tr></table></figure><br><br><h4 id="使用静态成员变量"><a class="markdownIt-Anchor" href="#使用静态成员变量"></a> 使用静态成员变量:</h4><p><code>类名.静态成员变量;</code></p><p><code>对象名.静态成员变量;</code></p><br><br><p>修改静态成员变量的值:</p><p><code>类名.静态成员变量 = 1;</code></p><p><code>对象名.静态成员变量 = 1;</code></p><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main15</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student one = <span class="keyword">new</span> Student(<span class="string">"张三丰"</span>,<span class="number">102</span>);</span><br><span class="line">        Student two = <span class="keyword">new</span> Student(<span class="string">"张无极"</span>,<span class="number">23</span>);</span><br><span class="line">        Student three = <span class="keyword">new</span> Student(<span class="string">"赵敏"</span>,<span class="number">18</span>);</span><br><span class="line">        Student four = <span class="keyword">new</span> Student(<span class="string">"周芷若"</span>,<span class="number">18</span>);</span><br><span class="line">        <span class="comment">//使用静态成员变量</span></span><br><span class="line">        Student.room = <span class="string">"101教师"</span>;</span><br><span class="line">        System.out.println(<span class="string">"名字:"</span> + one.getName() + <span class="string">"  年龄:"</span></span><br><span class="line">                + one.getAge() + <span class="string">"  课室"</span> + one.room</span><br><span class="line">                + <span class="string">"  学号:"</span> + one.getId() );</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"名字:"</span> + two.getName() + <span class="string">"  年龄:"</span></span><br><span class="line">                + two.getAge() + <span class="string">"  课室"</span> + two.room</span><br><span class="line">                + <span class="string">"  学号:"</span> + two.getId() );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"名字:"</span> + three.getName() + <span class="string">"  年龄:"</span></span><br><span class="line">                + three.getAge() + <span class="string">"  课室"</span> + three.room</span><br><span class="line">                + <span class="string">"  学号:"</span> + three.getId() );</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"名字:"</span> + four.getName() + <span class="string">"  年龄:"</span></span><br><span class="line">                + four.getAge() + <span class="string">"  课室"</span> + four.room</span><br><span class="line">                + <span class="string">"  学号:"</span> + four.getId() );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>    age;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String  room;<span class="comment">//公开的静态成员变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> countIdNumber;<span class="comment">//私有的静态成员变量</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        id = ++countIdNumber;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        id = ++countIdNumber;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><br><br><h3 id="快捷键"><a class="markdownIt-Anchor" href="#快捷键"></a> <code>快捷键:</code></h3><p>​<code>数字.fori</code>按下回车或tab键之后,会自动生成一个循环6次的for循环语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">6</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><br><p><code>数组名.fori</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; 数组名.lenght;i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><p><code>变量名.sout</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(变量名);</span><br></pre></td></tr></table></figure><br><p><br><code>对象.sout</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(对象名);</span><br></pre></td></tr></table></figure><br><p><br><code>对象名.成员变量.sout</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(对象名.成员变量);</span><br></pre></td></tr></table></figure><br><br><p><code>数组名[i].sout</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(数组名[i]);</span><br></pre></td></tr></table></figure><p><br><br><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;静态static关键字修饰成员变量&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#静态static关键字修饰成员变量&quot;&gt;&lt;/a&gt; 静态static关键字修饰成员变量&lt;/h1&gt;
&lt;p&gt;如果一个成员变量使用了&lt;code&gt;static&lt;/co
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>静态static关键字概述</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/19/java00065%E9%9D%99%E6%80%81static%E5%85%B3%E9%94%AE%E5%AD%97%E6%A6%82%E8%BF%B0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/19/java00065静态static关键字概述/</id>
    <published>2020-02-18T22:52:09.000Z</published>
    <updated>2020-02-18T23:08:07.752Z</updated>
    
    <content type="html"><![CDATA[<h1 id="静态static关键字概述"><a class="markdownIt-Anchor" href="#静态static关键字概述"></a> 静态static关键字概述</h1><p><code>static</code>关键字表示多个对象共用一个静态成员变量</p><p>这个成员变量属于类.</p><img src="/images/javawz/1582066345955-1582066358483.png" width="1350">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;静态static关键字概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#静态static关键字概述&quot;&gt;&lt;/a&gt; 静态static关键字概述&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt;关键字表示多个对象共用一个静态成员变量&lt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>按指定格式拼接字符练习</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/19/java00064%E6%8C%89%E6%8C%87%E5%AE%9A%E6%A0%BC%E5%BC%8F%E6%8B%BC%E6%8E%A5%E5%AD%97%E7%AC%A6-%E7%BB%83%E4%B9%A0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/19/java00064按指定格式拼接字符-练习/</id>
    <published>2020-02-18T21:26:59.000Z</published>
    <updated>2020-02-18T21:31:44.331Z</updated>
    
    <content type="html"><![CDATA[<h1 id="按指定格式拼接字符练习"><a class="markdownIt-Anchor" href="#按指定格式拼接字符练习"></a> 按指定格式拼接字符练习</h1><img src="/images/javawz/1582061235278-1582061253044.png" width="900px"><br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo13</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] intArray = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        String str = pingJieZiFuChuan(intArray);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">pingJieZiFuChuan</span><span class="params">(<span class="keyword">int</span>[] intArray)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String str = <span class="string">"["</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; intArray.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i == intArray.length - <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                str += <span class="string">"word"</span> + intArray[i] + <span class="string">"]"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                str += <span class="string">"word"</span> + intArray[i] +<span class="string">"#"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;按指定格式拼接字符练习&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#按指定格式拼接字符练习&quot;&gt;&lt;/a&gt; 按指定格式拼接字符练习&lt;/h1&gt;
&lt;img src=&quot;/images/javawz/1582061235278-158206125
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>统计输入的字符串中的各种字符次数</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/19/java00063%E7%BB%9F%E8%AE%A1%E8%BE%93%E5%85%A5%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%90%84%E7%A7%8D%E5%AD%97%E7%AC%A6%E6%AC%A1%E6%95%B0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/19/java00063统计输入的字符串中的各种字符次数/</id>
    <published>2020-02-18T21:02:24.000Z</published>
    <updated>2020-02-18T21:09:27.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="统计输入的字符串中的各种字符次数"><a class="markdownIt-Anchor" href="#统计输入的字符串中的各种字符次数"></a> 统计输入的字符串中的各种字符次数</h1><img src="/images/javawz/1582059879441-1582059886295.png" width="900px"><br><br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class demo14&#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String str ;</span><br><span class="line">        int countNumber = 0;</span><br><span class="line">        int countOther = 0;</span><br><span class="line">        int countLower = 0;</span><br><span class="line">        int countUpper = 0;</span><br><span class="line"></span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        System.out.println(&quot;请输入字符串:&quot;);</span><br><span class="line">        str = sc.next();</span><br><span class="line">        char[] chs = str.toCharArray();</span><br><span class="line"></span><br><span class="line">        for (int i = 0; i &lt; chs.length; i++) &#123;</span><br><span class="line">            char ch = chs[i];</span><br><span class="line"></span><br><span class="line">            if(ch &gt;= &apos;a&apos; &amp;&amp; ch &lt;= &apos;z&apos;)</span><br><span class="line">            &#123;</span><br><span class="line">                countLower++;</span><br><span class="line">            &#125;else if(ch &gt;= &apos;A&apos; &amp;&amp; ch &lt;= &apos;Z&apos; )</span><br><span class="line">            &#123;</span><br><span class="line">                countUpper++;</span><br><span class="line">            &#125;else if(ch &gt;= &apos;0&apos; &amp;&amp; ch &lt;= &apos;9&apos; )&#123;</span><br><span class="line">                countNumber++;</span><br><span class="line">            &#125;else</span><br><span class="line">            &#123;</span><br><span class="line">                countOther++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(&quot;大写字母个数:&quot; + countUpper);</span><br><span class="line">        System.out.println(&quot;小写字母个数:&quot; + countLower);</span><br><span class="line">        System.out.println(&quot;数字个数:&quot; + countNumber);</span><br><span class="line">        System.out.println(&quot;其他字符个数:&quot; + countOther);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;统计输入的字符串中的各种字符次数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#统计输入的字符串中的各种字符次数&quot;&gt;&lt;/a&gt; 统计输入的字符串中的各种字符次数&lt;/h1&gt;
&lt;img src=&quot;/images/javawz/15820598
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串的分割方法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/19/java00059%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%86%E5%89%B2%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/19/java00059字符串的分割方法/</id>
    <published>2020-02-18T20:17:16.000Z</published>
    <updated>2020-02-18T20:26:55.295Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串的分割方法"><a class="markdownIt-Anchor" href="#字符串的分割方法"></a> 字符串的分割方法</h1><h5 id="分割字符串的方法"><a class="markdownIt-Anchor" href="#分割字符串的方法"></a> 分割字符串的方法:</h5><p><code>public String[] split(String regex);</code>按照参数的规则,将字符串切分成为若干部分.</p><h5 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项:</h5><p><code>split</code>方法的参数其实是一个&quot;正则表达式&quot;.</p><p>如果用英文句点<code>&quot;.&quot;</code>进行切分,必须写<code>&quot;\\.&quot;</code>(两个反斜杠)</p><br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo12</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str1 = <span class="string">"123,123,12w"</span>;</span><br><span class="line">        String str2 = <span class="string">"aaa.bbb.ccc"</span>;</span><br><span class="line">        String[] strArray = str1.split(<span class="string">","</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; strArray.length; i++) &#123;</span><br><span class="line">            System.out.println(strArray[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"========================="</span>);</span><br><span class="line"></span><br><span class="line">        String[] str2Array = str2.split(<span class="string">"\\."</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str2Array.length; i++) &#123;</span><br><span class="line">            System.out.println(str2Array[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串的分割方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串的分割方法&quot;&gt;&lt;/a&gt; 字符串的分割方法&lt;/h1&gt;
&lt;h5 id=&quot;分割字符串的方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#分割字
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串的转换相关方法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/19/java00058%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%BD%AC%E6%8D%A2%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/19/java00058字符串的转换相关方法/</id>
    <published>2020-02-18T20:05:25.000Z</published>
    <updated>2020-02-18T20:10:56.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串的转换相关方法"><a class="markdownIt-Anchor" href="#字符串的转换相关方法"></a> 字符串的转换相关方法</h1><p>String当中与转换相关的常用方法:</p><p><code>public char[] toCharArray();</code>将当前字符串拆分成为字符数组作为返回值.</p><p><code>public byte[] getBytes();</code>获得当前字符串底层的字节数组</p><p><code>public String replace(CharSequence oldString,CharSequence newString);</code></p><p>将所有出现的老字符串替换成为新的字符串,返回替换之后的结果为新字符串.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo11</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str1 = <span class="string">"我爱你"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">char</span>[] chArray = str1.toCharArray();<span class="comment">//将str1转换为char[]数组</span></span><br><span class="line">        <span class="keyword">byte</span>[] by = str1.getBytes();<span class="comment">//将str1转换为byte[]数组;</span></span><br><span class="line"></span><br><span class="line">        System.out.println(chArray[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; by.length; i++) &#123;</span><br><span class="line">            System.out.println(by[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"========================"</span>);</span><br><span class="line">        String str2 = <span class="string">"你麻痹的,你会不会啊"</span>;</span><br><span class="line">        String str3 = str2.replace(<span class="string">"麻痹"</span>, <span class="string">"**"</span>);<span class="comment">//str2.replace(要替换的字符串,替换的字符);</span></span><br><span class="line">        System.out.println(str3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串的转换相关方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串的转换相关方法&quot;&gt;&lt;/a&gt; 字符串的转换相关方法&lt;/h1&gt;
&lt;p&gt;String当中与转换相关的常用方法:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;public char[] t
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串的截取方法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/19/java00057%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%88%AA%E5%8F%96%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/19/java00057字符串的截取方法/</id>
    <published>2020-02-18T19:26:50.000Z</published>
    <updated>2020-02-18T19:46:16.714Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串的截取方法"><a class="markdownIt-Anchor" href="#字符串的截取方法"></a> 字符串的截取方法</h1><p><code>public String substring(int index);</code>截取从参数位置一直到字符串末尾,返回新字符串.</p><br><p><code>public String substring(int begin,int end);</code> 截取从begin开始,一直到end结束.</p><p>备注:<code>[begin,end)</code>,包含左边,不包含右边</p><p><br><br></p><h5 id="快捷键"><a class="markdownIt-Anchor" href="#快捷键"></a> 快捷键:</h5><p>按住<code>ctrl + shift + 方向左右键</code>可以多选字符串</p><p>按住<code>shift + 方向左右键</code>可以单选多个字符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//改变String 对象的内容,其实是改变字符串的地址</span></span><br><span class="line">String str1 = <span class="string">"123"</span>;</span><br><span class="line">str1 = <span class="string">"456"</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo10</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str1 = <span class="string">"123456"</span>;</span><br><span class="line"></span><br><span class="line">        String str2 = str1.substring(<span class="number">2</span>);<span class="comment">//从第2号元素开始截取,一直到结束</span></span><br><span class="line">        System.out.println(str2);</span><br><span class="line"></span><br><span class="line">        str2 = str1.substring(<span class="number">3</span>,<span class="number">6</span>);</span><br><span class="line">        System.out.println(str2);<span class="comment">//从第3号元素开始,一直到第6号元素.不包含第6号元素;</span></span><br><span class="line"></span><br><span class="line">        str1 = <span class="string">"11111"</span>; <span class="comment">//0x1111</span></span><br><span class="line">        str1 = <span class="string">"22222"</span>; <span class="comment">//0x8888</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串的截取方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串的截取方法&quot;&gt;&lt;/a&gt; 字符串的截取方法&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;public String substring(int index);&lt;/code&gt;截取从参数位
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>超链接</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/18/html-css00014%E8%B6%85%E9%93%BE%E6%8E%A5/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/18/html-css00014超链接/</id>
    <published>2020-02-18T01:46:04.000Z</published>
    <updated>2020-02-18T13:44:51.929Z</updated>
    
    <content type="html"><![CDATA[<h1 id="超链接"><a class="markdownIt-Anchor" href="#超链接"></a> 超链接</h1><p>使用超链接可以让我们从一个页面跳转到另一个页面</p><h5 id="使用a标签来创建一个超链接"><a class="markdownIt-Anchor" href="#使用a标签来创建一个超链接"></a> 使用a标签来创建一个超链接:</h5><h5 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性:</h5><p><code>href</code>:指向链接跳转的目标地址,可以写一个相对路径也可以写一个完整地址.</p><p><code>target</code>:可以用来指定打开链接的位置</p><p> 可选值:</p><p>   <code>_self</code>:表示在当前窗口中打开(默认值)</p><p>   <code>_blank</code>:在新的窗口中打开链接</p><p>​<br></p><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 超链接 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>我是一个超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"demo.html"</span>&gt;</span> 我是一个超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><br><p>在新窗口打开页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在本窗口跳转 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span> <span class="attr">target</span>=<span class="string">"_self"</span>&gt;</span>我是一个超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">--</span> 在新窗口打开 <span class="attr">--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"demo.html"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span> 我是一个超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><br><p>可以在内联框架标签中设置一个<code>name</code>属性值,链接将会在指定的内联框架中打开</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 内联框架中打开 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"demo.html name="</span><span class="attr">tom</span>"&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"demo.html"</span> <span class="attr">target</span>=<span class="string">"tom"</span>&gt;</span>我在内联框架显示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><p><code>center</code>标签中的内容,会默认在页面中居中显示</p><p>如果我们要内容居中显示,要把内容都放到center标签中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 居中显示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">    a</span><br><span class="line">    aaaaaa</span><br><span class="line">    aaaaaa</span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><p>如果<code>href</code>中地址不确定,可以先用<code>#</code>代替</p><p>如果将链接地址设置为#,点击后会自动回到页面顶部</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--回到页面顶部--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">target</span>=<span class="string">"tom"</span>&gt;</span>我在内联框架显示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><p>html中有一个属性,每一个元素都可以设置,该属性可以作为标签的唯一标识</p><p>这个属性就是<code>id</code>,id属性在同一个页面中只能有一个,<code>不能有重复</code></p><br><p>跳转到id为bottom的元素所在的位置</p><p>直接在<code>href</code>中写 <code>#id</code>属性值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>  <span class="attr">href</span>=<span class="string">"#bottom"</span>&gt;</span>回到底部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--跳到这里--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"bottom"</span> <span class="attr">href</span>=<span class="string">"https://www.baidu.com"</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><br><p>发送邮件的超链接,点击链接以后可以自动打开计算机中默认的邮件客户端</p><p>当点击这个链接时会自动打开计算机中默认的邮件客户端,并且将收件人设置为``mailto`后的邮箱地址.</p><h5 id="格式"><a class="markdownIt-Anchor" href="#格式"></a> 格式:</h5><p><code>&lt;a href=&quot;mailto:邮箱地址&quot; &gt;联系我们&lt;a&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:123@qq.com"</span> &gt;</span>联系我们<span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;超链接&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#超链接&quot;&gt;&lt;/a&gt; 超链接&lt;/h1&gt;
&lt;p&gt;使用超链接可以让我们从一个页面跳转到另一个页面&lt;/p&gt;
&lt;h5 id=&quot;使用a标签来创建一个超链接&quot;&gt;&lt;a class=&quot;markdown
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>内联框架</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/18/html-css00013%E5%86%85%E8%81%94%E6%A1%86%E6%9E%B6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/18/html-css00013内联框架/</id>
    <published>2020-02-17T22:29:31.000Z</published>
    <updated>2020-02-17T22:39:32.645Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内联框架"><a class="markdownIt-Anchor" href="#内联框架"></a> 内联框架</h1><h5 id="使用内联框架可以引入一个外部的页面"><a class="markdownIt-Anchor" href="#使用内联框架可以引入一个外部的页面"></a> 使用内联框架可以引入一个外部的页面.</h5><p>使用iframe来创建一个内联框架</p><br><h5 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性:</h5><p> src:指向一个外部页面的路径,可以使用相对路径</p><p> width:设置宽度</p><p> height:设置高度</p><p>不会按比例缩放</p><p> name:可以为内联框架指定一个name属性(给框架起名字)</p><br><br><br><p><code>在现实开发中不推荐使用内联框架</code>,因为内联框架中的内容不会被搜索引擎所检索,但可以在内网使用;</p><p>一般放在body标签内</p><br><br><p>格式:<code>&lt;iframe scr=&quot;目标路径&quot; name=&quot;名字&quot;&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">scr</span>=<span class="string">"demo.html"</span> <span class="attr">name</span>=<span class="string">"tom"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;内联框架&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#内联框架&quot;&gt;&lt;/a&gt; 内联框架&lt;/h1&gt;
&lt;h5 id=&quot;使用内联框架可以引入一个外部的页面&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#使用内联框架
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>xHtml的语法规范</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/18/html-css00012xHtml%E7%9A%84%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/18/html-css00012xHtml的语法规范/</id>
    <published>2020-02-17T21:25:32.000Z</published>
    <updated>2020-02-18T02:26:50.768Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xhtml的语法规范"><a class="markdownIt-Anchor" href="#xhtml的语法规范"></a> xHtml的语法规范</h1><h5 id="浏览器会尽最大的努力正确解析错误的语法你所有的不符合语法规范的内容浏览器都会为你自动修正但是有些情况会修正错误"><a class="markdownIt-Anchor" href="#浏览器会尽最大的努力正确解析错误的语法你所有的不符合语法规范的内容浏览器都会为你自动修正但是有些情况会修正错误"></a> 浏览器会尽最大的努力正确解析错误的语法,你所有的不符合语法规范的内容,浏览器都会为你自动修正,但是有些情况会修正错误.</h5><br><br><p>1.HTML中不区分大小写,但是我们一般都使用小写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaaaaaaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.HTML中的注释不能嵌套</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--正确写法--&gt;</span></span><br><span class="line"></span><br><span class="line">=================================================</span><br><span class="line">错误写法</span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>3.HTML标签必须结构完整,要么成对出现,要么自结束标签.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--正确写法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--错误写法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>asdfdsf</span><br></pre></td></tr></table></figure><p>4.HTML标签可以嵌套,但是不能交叉嵌套.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--正确写法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaa<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red;"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">font</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--错误写法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaa<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red;"</span>&gt;</span>aaaaaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5.HTML标签中的属性必须有值,且值必须加引号(双引号,单引号都可以)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--正确写法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaa<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red;"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">font</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--错误写法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaa<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">font</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;xhtml的语法规范&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#xhtml的语法规范&quot;&gt;&lt;/a&gt; xHtml的语法规范&lt;/h1&gt;
&lt;h5 id=&quot;浏览器会尽最大的努力正确解析错误的语法你所有的不符合语法规范的内容浏览器都会为你自动修
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>meta标签</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/18/html-css00011meta%E6%A0%87%E7%AD%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/18/html-css00011meta标签/</id>
    <published>2020-02-17T21:09:02.000Z</published>
    <updated>2020-02-18T02:23:00.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="meta标签"><a class="markdownIt-Anchor" href="#meta标签"></a> meta标签</h1><h3 id="使用meta标签还可以用来设置网页的关键字"><a class="markdownIt-Anchor" href="#使用meta标签还可以用来设置网页的关键字"></a> 使用meta标签还可以用来设置网页的关键字</h3><h5 id="格式meta-namekeywords-content-关键字"><a class="markdownIt-Anchor" href="#格式meta-namekeywords-content-关键字"></a> 格式:<code>&lt;meta name=&quot;keywords&quot; content = &quot;关键字&quot; /&gt;</code></h5><p>如果是多个关键字,就用逗号隔开.</p><p>关键字是被搜索引擎识别的.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"HTML5,JavaScript,前端,Java"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用meta标签用来指定网页的描述"><a class="markdownIt-Anchor" href="#使用meta标签用来指定网页的描述"></a> 使用meta标签用来指定网页的描述</h3><p>搜索引擎在检索页面时,会同时检索页面中的关键字和描述,但是这两个值不会影响页面在搜索引擎中的排名.</p><h3 id="格式meta-namedescription-content描述信息"><a class="markdownIt-Anchor" href="#格式meta-namedescription-content描述信息"></a> 格式:<code>&lt;meta name=&quot;description&quot; content=&quot;描述信息&quot; /&gt;</code></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"发布h5,js前端等相关信息"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用meta可以用来做请求重定向页面跳转"><a class="markdownIt-Anchor" href="#使用meta可以用来做请求重定向页面跳转"></a> 使用meta可以用来做请求重定向(页面跳转).</h3><h5 id="格式meta-http-equivrefresh-content秒数url目标路径"><a class="markdownIt-Anchor" href="#格式meta-http-equivrefresh-content秒数url目标路径"></a> 格式:<code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;秒数;url=目标路径&quot; /&gt;</code></h5><p>目标路径可以是相对地址</p><p>绝对路径要在开头加上<code>https://</code>或<code>http://</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"5;http://www.baidu.com"</span>  /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;meta标签&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#meta标签&quot;&gt;&lt;/a&gt; meta标签&lt;/h1&gt;
&lt;h3 id=&quot;使用meta标签还可以用来设置网页的关键字&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hre
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>算数运算符</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/JS00015%E7%AE%97%E6%95%B0%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/JS00015算数运算符/</id>
    <published>2020-02-17T09:11:12.000Z</published>
    <updated>2020-02-17T09:47:55.146Z</updated>
    
    <content type="html"><![CDATA[<h1 id="算数运算符"><a class="markdownIt-Anchor" href="#算数运算符"></a> 算数运算符</h1><p>运算符也叫操作符</p><p>通过运算符可以对一个或多个值进行运算,并获取运算结果</p><p>比如:<code>typeof</code>就是运算符,可以来获得一个值的类型,它会将该值的类型以字符串的形式返回<code>number string boolean undefined object</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="string">"123"</span>));<span class="comment">//string</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="number">1</span>));<span class="comment">//number</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="number">1.6</span>));<span class="comment">//number</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">null</span>));<span class="comment">//object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">undefined</span>));<span class="comment">//undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">NaN</span>));<span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">true</span>));<span class="comment">//boolean</span></span><br></pre></td></tr></table></figure><p>算数运算符: <code>+ - * / %</code></p><p>当对非<code>Number</code>类型的值进行运算时,会将这些值转换为<code>Number</code>然后在运算.</p><p>任何值和<code>NaN</code>做运算都得<code>NaN</code></p><p>1.  <code>+</code>可以对两个值进行加法运算,并将结果返回.</p><p>如果对两个字符串做加法,则会拼接在一起</p><p>任何值和字符串做加法运算,都会先转换为字符串,然后再拼接</p><p>我们可以利用这一点特性来为任何数据类型做String转换.</p><p>这是一种隐式类型转换,实际上也是调用了<code>String()</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br><span class="line">a = <span class="number">123</span> + <span class="number">2</span>;<span class="comment">//125</span></span><br><span class="line"></span><br><span class="line">a = <span class="literal">true</span> + <span class="number">1</span>;<span class="comment">//2</span></span><br><span class="line"></span><br><span class="line">a = <span class="literal">true</span> + <span class="literal">false</span>;<span class="comment">//1</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">2</span> + <span class="literal">null</span>;<span class="comment">//2</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">2</span> + <span class="literal">NaN</span>;<span class="comment">//NaN</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">"aaa"</span> + <span class="string">"bbb"</span>;<span class="comment">//aaabbb</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">100</span> + <span class="string">"aa"</span>;<span class="comment">//100aa</span></span><br></pre></td></tr></table></figure><p>2.  <code>-</code>可以对两个值进行减法运算,并将结果返回</p><p>任何数据类型和数字做减法都会先转换为<code>Number</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line">a = <span class="number">100</span> - <span class="number">1</span>;<span class="comment">//99</span></span><br><span class="line">a = <span class="number">100</span> - <span class="string">"1"</span>;<span class="comment">//99</span></span><br><span class="line"><span class="built_in">console</span>.log(a - <span class="literal">NaN</span>);<span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(a - <span class="literal">null</span>);<span class="comment">//100</span></span><br><span class="line"><span class="built_in">console</span>.log(a - <span class="literal">undefined</span>);<span class="comment">//NaN</span></span><br></pre></td></tr></table></figure><p>3.  <code>*</code>可以对两个值进行乘法运算,并将结果返回</p><p>任何数据类型和数字做乘法都会先转换为<code>Number</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line">a = <span class="number">100</span> * <span class="number">1</span>;<span class="comment">//99</span></span><br><span class="line">a = <span class="number">100</span> * <span class="string">"1"</span>;<span class="comment">//99</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">NaN</span>);<span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">null</span>);<span class="comment">//100</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">undefined</span>);<span class="comment">//NaN</span></span><br></pre></td></tr></table></figure><p>4.  <code>/</code>可以对两个值进行除法运算,并将结果返回</p><p>任何数据类型和数字做除法都会先转换为<code>Number</code></p><p>可以通过为一个值<code>0 *1 /1</code>来将其转换为<code>Number</code></p><p>原理和<code>Number()</code>函数一样,使用起来更加简单</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line">a = <span class="number">100</span> * <span class="number">1</span>;<span class="comment">//99</span></span><br><span class="line">a = <span class="number">100</span> * <span class="string">"1"</span>;<span class="comment">//99</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">NaN</span>);<span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">null</span>);<span class="comment">//100</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">undefined</span>);<span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(a + <span class="string">"1"</span>);<span class="comment">//101</span></span><br></pre></td></tr></table></figure><p>5.<code>%</code>取模运算符(取余数)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">a = a % <span class="number">9</span>;<span class="comment">//1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;算数运算符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#算数运算符&quot;&gt;&lt;/a&gt; 算数运算符&lt;/h1&gt;
&lt;p&gt;运算符也叫操作符&lt;/p&gt;
&lt;p&gt;通过运算符可以对一个或多个值进行运算,并获取运算结果&lt;/p&gt;
&lt;p&gt;比如:&lt;code&gt;type
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>转换为Boolean</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/JS00014%E8%BD%AC%E6%8D%A2%E4%B8%BABoolean/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/JS00014转换为Boolean/</id>
    <published>2020-02-17T08:58:33.000Z</published>
    <updated>2020-02-17T09:10:07.684Z</updated>
    
    <content type="html"><![CDATA[<h1 id="转换为boolean"><a class="markdownIt-Anchor" href="#转换为boolean"></a> 转换为Boolean</h1><h3 id="将其他类型转换为boolean"><a class="markdownIt-Anchor" href="#将其他类型转换为boolean"></a> 将其他类型转换为Boolean</h3><p>使用<code>Boolean()函数</code></p><p>除了0和NaN,其他的都为<code>true</code></p><p>字符串转布尔,除了空串,其余的都是<code>true.</code></p><p><code>null</code>和<code>undefined</code>都会转换为<code>false</code></p><p>对象也会转换为<code>true</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> c = <span class="literal">NaN</span>;</span><br><span class="line"><span class="keyword">var</span> d = <span class="string">""</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(a));<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(b);<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(c));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(d));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="literal">null</span>));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="literal">undefined</span>));<span class="comment">//false</span></span><br></pre></td></tr></table></figure><br><br><br><br><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;转换为boolean&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#转换为boolean&quot;&gt;&lt;/a&gt; 转换为Boolean&lt;/h1&gt;
&lt;h3 id=&quot;将其他类型转换为boolean&quot;&gt;&lt;a class=&quot;markdownIt-Ancho
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>其他进制的数字</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/JS00013%E5%85%B6%E4%BB%96%E8%BF%9B%E5%88%B6%E7%9A%84%E6%95%B0%E5%AD%97/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/JS00013其他进制的数字/</id>
    <published>2020-02-17T08:33:11.000Z</published>
    <updated>2020-02-17T08:57:07.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="其他进制的数字"><a class="markdownIt-Anchor" href="#其他进制的数字"></a> 其他进制的数字</h1><p>在JS中,如果需要表示16进制的数字,则需要以0x开头.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">0x12334</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p>如果需要表示8进制,则用0开头</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">010</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p>如果需要表示二进制,用0b开头.但不是所有浏览器都支持.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">0b010</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p>有些浏览器会把&quot;070&quot;这种字符串当成10进制</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">"070"</span>;</span><br><span class="line"><span class="built_in">parseInt</span>(a);<span class="comment">//有些浏览器会把这种字符串当成10进制</span></span><br><span class="line"><span class="comment">//解决方法</span></span><br><span class="line"><span class="built_in">parseInt</span>(a,<span class="number">8</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;其他进制的数字&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#其他进制的数字&quot;&gt;&lt;/a&gt; 其他进制的数字&lt;/h1&gt;
&lt;p&gt;在JS中,如果需要表示16进制的数字,则需要以0x开头.&lt;/p&gt;
&lt;figure class=&quot;highlight
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>强制类型转换-Number</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/JS00012%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2Number/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/JS00012强制类型转换Number/</id>
    <published>2020-02-17T07:48:04.000Z</published>
    <updated>2020-02-17T08:20:46.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="强制类型转换-number"><a class="markdownIt-Anchor" href="#强制类型转换-number"></a> 强制类型转换-Number</h1><p>将其他数据类型转换为``Number`</p><p>字符串----&gt;数字</p><h4 id="转换方式一"><a class="markdownIt-Anchor" href="#转换方式一"></a> 转换方式一:</h4><p>使用<code>Number()</code>函数;</p><p><code>Number(变量)</code></p><p>1.如果是纯数字的字符串,则直接将其转换为数字</p><p>2.如果是字符串中有非数字的内容,则转换为NaN</p><p>3.如果字符串是一个空串或者是一个全空格的字符串,则转换为0</p><p>4.布尔类型转Number,true会转换为1,false转换为0</p><p>5.null ----&gt; 数字0</p><p>6.Undefined —&gt; 数字:NaN</p><h4 id="转换方式二"><a class="markdownIt-Anchor" href="#转换方式二"></a> 转换方式二:</h4><p>这种方式专门用来转换字符串</p><p><code>parseInt()</code>把一个字符串转换为一个整数.</p><p><code>parseInt()</code>可以将一个字符串中的有效的整数内容取出来.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">"1234px"</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="built_in">parseInt</span>(a);<span class="comment">//1234</span></span><br></pre></td></tr></table></figure><p><code>parseFloat()</code>把一个字符串转换为一个浮点数.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">"1234.111px"</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="built_in">parseInt</span>(a);<span class="comment">//1234.111</span></span><br></pre></td></tr></table></figure><p>如果对非<code>String`使用`parseInt()</code>或``parseFloat()`,他会先将其转换为String,然后在操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> b = perseInt(<span class="literal">true</span>);<span class="comment">//返回NaN</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/Number()</span></span><br><span class="line"><span class="regexp">var a = "123";</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a); /</span><span class="regexp">/123</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = true;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/1</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = NaN;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/NaN</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = undefined;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/NaN</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = null;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/ 0</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/parseInt() || parseFloat();</span></span><br><span class="line"><span class="regexp">console.log("=========================");</span></span><br><span class="line"><span class="regexp">var a = "123a";</span></span><br><span class="line"><span class="regexp">a = parseInt(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/123</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">var a = "123";</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/123</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = true;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/1</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = NaN;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/NaN</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = undefined;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/NaN</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = null;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/0</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;强制类型转换-number&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#强制类型转换-number&quot;&gt;&lt;/a&gt; 强制类型转换-Number&lt;/h1&gt;
&lt;p&gt;将其他数据类型转换为``Number`&lt;/p&gt;
&lt;p&gt;字符串----&amp;gt;数
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>强制类型转换-String</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/JS00011%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2-String/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/JS00011强制类型转换-String/</id>
    <published>2020-02-17T07:30:25.000Z</published>
    <updated>2020-02-17T07:48:42.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="强制类型转换-string"><a class="markdownIt-Anchor" href="#强制类型转换-string"></a> 强制类型转换-String</h1><p>强制转换类型是指将一个数据类型强制转换为其他的数据类型</p><p>类型转换主要指,将其他的数据类型,转换为</p><p>String   Number    Boolean</p><h3 id="方式一"><a class="markdownIt-Anchor" href="#方式一"></a> 方式一:</h3><p>调用被转换数据类型的toString()方法</p><p>例如 :</p><p><code>a.toString()</code></p><p>该方法不会影响到原变量,他会将转换结果返回.</p><h4 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意:</h4><p>如果将null和Undefined这两个值用转换toString()方法就会出错</p><h3 id="方式二"><a class="markdownIt-Anchor" href="#方式二"></a> 方式二</h3><p>调用String()函数,并将转换的数据作为参数传递函数</p><p>例如:<code>String(123);</code>----<code>String(123);</code></p><p>使用String();函数做强制转换时:</p><p>对于Number和Boolean实际上就是调用toString()方法</p><p>但是对于null和undefined,就不会调用toString()方法</p><p>他会将null直接转换为&quot;null&quot;</p><p>将Undefined直接转换为&quot;Undefined&quot;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">var str = 123; </span></span><br><span class="line"><span class="regexp">console.log(str.toString()); </span></span><br><span class="line"><span class="regexp">/</span><span class="comment">///str = null; 出错</span></span><br><span class="line"><span class="comment">//console.log(str.toString());</span></span><br><span class="line"><span class="comment">//str = undefined;出错</span></span><br><span class="line"><span class="comment">//console.log(str.toString());</span></span><br><span class="line">str = <span class="number">123.3</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.toString());</span><br><span class="line">str = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.toString());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str = <span class="number">1231</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"================="</span>);</span><br><span class="line">str = <span class="number">123.2</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str = <span class="literal">null</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str = <span class="literal">undefined</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">str = <span class="literal">null</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str = <span class="literal">true</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;强制类型转换-string&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#强制类型转换-string&quot;&gt;&lt;/a&gt; 强制类型转换-String&lt;/h1&gt;
&lt;p&gt;强制转换类型是指将一个数据类型强制转换为其他的数据类型&lt;/p&gt;
&lt;p&gt;类型转换
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串的获取相关方法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/java00056%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%8E%B7%E5%8F%96%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/java00056字符串的获取相关方法/</id>
    <published>2020-02-16T17:44:12.000Z</published>
    <updated>2020-02-16T18:01:08.023Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串的获取相关方法"><a class="markdownIt-Anchor" href="#字符串的获取相关方法"></a> 字符串的获取相关方法</h1><h3 id="常用方法有"><a class="markdownIt-Anchor" href="#常用方法有"></a> 常用方法有:</h3><p><code>public int lenght();</code> 获取字符串长度</p><p><code>public String concat(String str);</code>拼接两个字符串</p><p><code>public char charAt(int index);</code>返回指定索引的字符</p><p><code>public int indexOf(String str);</code>查找子字符串出现在本字符串的首字符索引值,如果没有则返回-1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo09</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str = <span class="keyword">new</span> String(<span class="string">"abc"</span>);</span><br><span class="line">        String str1;</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line"></span><br><span class="line">        len = str.length();<span class="comment">//获取字符串长度</span></span><br><span class="line">        ch = str.charAt(<span class="number">0</span>);<span class="comment">//获取str的第0个索引的字符</span></span><br><span class="line">        str1 = str.concat(<span class="string">"def"</span>);<span class="comment">//拼接两个字符串</span></span><br><span class="line">        index = str.indexOf(<span class="string">"ab"</span>);<span class="comment">//查找子字符串第一次出现的索引值</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"字符串长度:"</span> + len);</span><br><span class="line">        System.out.println(<span class="string">"第0个字符是:"</span> + ch);</span><br><span class="line">        System.out.println(<span class="string">"拼接字符:"</span> + str1);</span><br><span class="line">        System.out.println(<span class="string">"字符串出现的"</span> + index);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串的获取相关方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串的获取相关方法&quot;&gt;&lt;/a&gt; 字符串的获取相关方法&lt;/h1&gt;
&lt;h3 id=&quot;常用方法有&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串的比较方法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/java00055%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%AF%94%E8%BE%83%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/java00055字符串的比较方法/</id>
    <published>2020-02-16T17:14:16.000Z</published>
    <updated>2020-02-16T17:42:58.762Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串的比较方法"><a class="markdownIt-Anchor" href="#字符串的比较方法"></a> 字符串的比较方法</h1><p>想让两个字符串进行比较,就用:</p><p><code>public boolean equals(Object obj);</code>方法,区分大小写</p><p><code>public boolean equalsIgnoreCase(Object obj);</code>不区分字母大小写</p><p>参数可以是任何对象,只有参数是一个字符串并且内容相同的才会返回一个true,否者返回false.</p><p>1.任何对象都可以用Object来接收.</p><p>2.equals方法具有对称性,也就是<code>a.equals(b)</code>和<code>b.equals(a)</code>是一样的</p><p>3.如果比较两个字符串一个是字符串常量,另一个是字符串变量,推荐把字符串常量写在前面.</p><p>推荐:<code>&quot;zzz&quot;.equals(str);</code> 不推荐 <code>abc.equals(&quot;zzz&quot;);</code></p><p>因为如果<code>abc</code>是一个<code>null</code>又调用<code>equals()</code>就会抛出异常.</p><p>如果是<code>zzz.equals(str)</code>则会返回一个<code>false</code>;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo08</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str1 = <span class="keyword">new</span> String(<span class="string">"123"</span>);</span><br><span class="line">        String str2 = <span class="keyword">new</span> String(<span class="string">"123"</span>);</span><br><span class="line">        String str3 = <span class="keyword">new</span> String(<span class="string">"456"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(str1.equals(str2));<span class="comment">//true</span></span><br><span class="line">        System.out.println(str1.equals(str3));<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="string">"ABC"</span>.equalsIgnoreCase(<span class="string">"abc"</span>));<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串的比较方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串的比较方法&quot;&gt;&lt;/a&gt; 字符串的比较方法&lt;/h1&gt;
&lt;p&gt;想让两个字符串进行比较,就用:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;public boolean equals(Obj
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
</feed>
