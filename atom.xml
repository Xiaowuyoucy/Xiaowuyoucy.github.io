<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanChen</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaowuyoucy.github.io/"/>
  <updated>2022-05-15T01:41:24.082Z</updated>
  <id>https://xiaowuyoucy.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql中文乱码问题</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/15/mysql%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/15/mysql中文乱码问题/</id>
    <published>2022-05-14T20:01:30.000Z</published>
    <updated>2022-05-15T01:41:24.082Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql客户端的字符集"><a class="markdownIt-Anchor" href="#mysql客户端的字符集"></a> MYSQL客户端的字符集</h3><p>下面的测试均在test数据库中进行的:</p><p>实验步骤<br>使用两个linux客户端窗口, 一个用utf8登陆, 一个用gbk登陆</p><p>mysql数据库默认情况下是使用的utf8登陆的:</p><p>查看所有应用的字符集:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">show variables like &apos;character%&apos;;</span><br><span class="line"></span><br><span class="line">执行结果:</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8                       |</span><br><span class="line">| character_set_connection | utf8                       |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8                       |</span><br><span class="line">| character_set_server     | latin1                     |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+</span><br></pre></td></tr></table></figure><p>通过画图解释mysql的字符集问题:</p><p><img src="/images/javawz/image-20220515040327430.png" alt="image-20220515040327430"></p><p>客户端  ------  mysql服务端   ------ 数据库文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">character_set_client</span><br><span class="line">character_set_connection </span><br><span class="line">character_set_results  </span><br><span class="line">客户端使用的字符集, 都为utf8</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">此时执行:</span><br><span class="line">在utf8字符集环境下插入数据:</span><br><span class="line">insert into mytest values(5, &apos;小胡&apos;);</span><br><span class="line">select * from mytest;  ----正常显示</span><br></pre></td></tr></table></figure><p>接下来开启另一个linux客户端, 使用gbk字符集进行登陆:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p123456 --default_character_set=gbk </span><br><span class="line"></span><br><span class="line">切换到test用户下:</span><br><span class="line">查看所有应用的字符集:  </span><br><span class="line">show variables like &apos;character%&apos;;</span><br><span class="line"></span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | gbk                        |</span><br><span class="line">| character_set_connection | gbk                        |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | gbk                        |</span><br><span class="line">| character_set_server     | latin1                     |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+ </span><br><span class="line"></span><br><span class="line">此时客户端的字符集为: </span><br><span class="line">character_set_client  </span><br><span class="line">character_set_connection </span><br><span class="line">character_set_results  都为gbk.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select * from mytest:  --不能正常显示</span><br><span class="line"></span><br><span class="line">     在gbk环境下插入, 然后再到utf8环境下去查看同样也不能正常显示中文.</span><br></pre></td></tr></table></figure><p>总结:<br>1.   在utf8环境插入的中文不能用gbk查看;<br>2.   在gbk环境下插入的中文不能用utf8查看;<br>3.   在utf8环境下插入的中文要在utf8环境下查看;</p><ol start="4"><li>在gbk环境下插入的中文要在gbk环境下查看.</li></ol><h3 id="2-操作系统的语言集"><a class="markdownIt-Anchor" href="#2-操作系统的语言集"></a> 2 操作系统的语言集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/sysconfig/i18n</span><br><span class="line">显示: LANG=&quot;zh_CN.UTF-8&quot;</span><br><span class="line">操作系统的菜单按照zh_CN显示,  文件存储按照utf8</span><br><span class="line"></span><br><span class="line">linux操作系统语言环境 和 用户的配置的语言环境LANG 相互影响</span><br><span class="line">echo $LANG   -----&gt;zh_CN.UTF-8</span><br><span class="line">  </span><br><span class="line">修改用户下的.bash_profile 中的LANG，屏蔽操作系统的LANG设置或者export LANG=C临时设置也可以</span><br><span class="line">然后在登陆到mysql数据库上:</span><br><span class="line">登陆数据库:   </span><br><span class="line">mysql -uroot -p123456 </span><br><span class="line">use test</span><br><span class="line">show variables like &apos;character%&apos;</span><br><span class="line"></span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | latin1                     |</span><br><span class="line">| character_set_connection | latin1                     |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | latin1                     |</span><br><span class="line">| character_set_server     | latin1                     |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line"></span><br><span class="line">再次查看mytest表, 不能正常显示中文</span><br><span class="line">select * from mytest;</span><br></pre></td></tr></table></figure><h3 id="3-linux客户端的字符集"><a class="markdownIt-Anchor" href="#3-linux客户端的字符集"></a> 3 linux客户端的字符集</h3><p>若将linux客户端设置问GB18030, 则也会对中文的显示产生影响:</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;mysql客户端的字符集&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#mysql客户端的字符集&quot;&gt;&lt;/a&gt; MYSQL客户端的字符集&lt;/h3&gt;
&lt;p&gt;下面的测试均在test数据库中进行的:&lt;/p&gt;
&lt;p&gt;实验步骤&lt;br&gt;
使用两个li
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>mysql表的约束</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/15/mysql%E8%A1%A8%E7%9A%84%E7%BA%A6%E6%9D%9F/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/15/mysql表的约束/</id>
    <published>2022-05-14T19:33:15.000Z</published>
    <updated>2022-05-14T19:38:04.545Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*定义主键约束　primary key:不允许为空，不允许重复</span><br><span class="line">*定义主键自动增长　auto_increment</span><br><span class="line">*定义唯一约束　unique</span><br><span class="line">*定义非空约束　not null</span><br><span class="line">*定义外键约束　constraint ordersid_FK foreign key(ordersid) references orders(id)</span><br><span class="line">*删除主键：alter table tablename drop primary key ;</span><br></pre></td></tr></table></figure><p>准备两个表:(下面的建表语句在执行的时候若不能正常执行, 可以尝试把tab去掉)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">create table class (</span><br><span class="line">id INT(11) primary key auto_increment,</span><br><span class="line">name varchar(20) unique</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">create table student (</span><br><span class="line">id INT(11) primary key auto_increment, </span><br><span class="line">name varchar(20) unique,</span><br><span class="line">passwd varchar(15) not null,</span><br><span class="line">classid INT(11),</span><br><span class="line">constraint stu_classid_FK foreign key(classid) references class(id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>向class表中插入两条数据:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert into class(name) values(&apos;音乐&apos;);</span><br><span class="line">insert into class(name) values(&apos;体育&apos;);</span><br><span class="line">insert into class(id, name) values(5, &apos;美术&apos;);</span><br><span class="line">insert into class(name) values(&apos;文化&apos;);</span><br><span class="line"></span><br><span class="line">注意: 要插入的是部分列, 一定要在class表名后面写上列名, 表示要插入哪些列</span><br><span class="line">      由于class表的id是主键, 可以不用显示的插入主键的值, mysql会自动插入,而且会自动增长,确保不会重复.</span><br></pre></td></tr></table></figure><p>向student表中插入数据:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> 正常插入一条记录:</span><br><span class="line">insert into student(name, passwd, classid) values(&apos;xiaohong&apos;, &apos;xxxxxx&apos;, 1);</span><br><span class="line"></span><br><span class="line">1 测试主键的非空性</span><br><span class="line">insert into student(id, name, passwd, classid) values(null, &apos;xiaowen&apos;, &apos;xxxxxx&apos;, 1);</span><br><span class="line">注意: 若给主键插入一个null, mysql会自动插入一个有效的值, 所以mysql的主键肯定不会为空</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2 测试主键的唯一性约束</span><br><span class="line">insert into student(id, name, passwd, classid) values(1, &apos;xiaoliu&apos;, &apos;xxxxxx&apos;, 1);</span><br><span class="line">-----&gt;ERROR 1062 (23000): Duplicate entry &apos;1&apos; for key &apos;PRIMARY&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3 测试name列的唯一性</span><br><span class="line">insert into student(name, passwd, classid) values(&apos;xiaohong&apos;, &apos;xxxxxx&apos;, 2);</span><br><span class="line">-----&gt; ERROR 1062 (23000): Duplicate entry &apos;xiaohong&apos; for key &apos;name&apos;</span><br><span class="line"></span><br><span class="line">insert into student(name, passwd, classid) values(null, &apos;xxxxxx&apos;, 2);</span><br><span class="line">注意: name为unique约束, 只是不能重复, 但是可以为空</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4 测试passwd的非空约束</span><br><span class="line">insert into student(name, passwd, classid) values(&apos;xiaohua&apos;, null, 2);</span><br><span class="line">-----&gt; ERROR 1048 (23000): Column &apos;passwd&apos; cannot be null</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">5 测试classid的外键约束</span><br><span class="line">insert into student(name, passwd, classid) values(&apos;meizi&apos;, &apos;mmmm&apos;, 10);</span><br><span class="line">-----&gt;OREIGN KEY (`classid`) REFERENCES `class` (`id`))</span><br><span class="line">在class表中没有id为10的列的值.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>mysql自连接</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/15/mysql%E8%87%AA%E8%BF%9E%E6%8E%A5/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/15/mysql自连接/</id>
    <published>2022-05-14T19:23:37.000Z</published>
    <updated>2022-05-14T19:25:08.859Z</updated>
    
    <content type="html"><![CDATA[<p>自连接:</p><p>查询员工、老板信息，显示: xxx的老板是yyy</p><p>分析: 可以将emp表当成两个表来用, 一个是员工表 e, 一个是老板表 b</p><p>1 mysql不支持用||连接两个字符串</p><p>2 使用concat函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select concat(e.ename, &apos;的老板是&apos;, b.ename) from emp e, emp b where e.mgr=b.empno;</span><br><span class="line">select concat(e.ename, &apos;的老板是&apos;, b.ename) from emp e inner join emp b on e.mgr=b.empno;</span><br></pre></td></tr></table></figure><p>3 若要显示KING的信息, 需要使用外连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a mysql不支持nvl函数</span><br><span class="line"></span><br><span class="line">b 使用ifnull函数</span><br><span class="line">左外连接:</span><br><span class="line">select concat(e.ename, &apos;的老板是&apos;, b.ename) from emp e left outer join emp b on e.mgr=b.empno;</span><br><span class="line">select concat(e.ename, &apos;的老板是&apos;, ifnull(b.ename, &apos;HIMSELF&apos;)) from emp e left outer join emp b on e.mgr=b.empno;</span><br><span class="line">右外连接:</span><br><span class="line">select concat(e.ename, &apos;的老板是&apos;, ifnull(b.ename, &apos;HIMSELF&apos;)) from emp b right outer join emp e on e.mgr=b.empno;</span><br></pre></td></tr></table></figure><p>​</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自连接:&lt;/p&gt;
&lt;p&gt;查询员工、老板信息，显示: xxx的老板是yyy&lt;/p&gt;
&lt;p&gt;分析: 可以将emp表当成两个表来用, 一个是员工表 e, 一个是老板表 b&lt;/p&gt;
&lt;p&gt;1 mysql不支持用||连接两个字符串&lt;/p&gt;
&lt;p&gt;2 使用concat函数&lt;/p&gt;
&lt;f
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>多表查询</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/15/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/15/多表查询/</id>
    <published>2022-05-14T19:05:24.000Z</published>
    <updated>2022-05-14T19:10:21.615Z</updated>
    
    <content type="html"><![CDATA[<p>执行sql脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source 脚本名.sql</span><br><span class="line"></span><br><span class="line">source scott_data.sql</span><br></pre></td></tr></table></figure><p>2 交叉连接—相当于笛卡尔积</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select e.*, d.* from emp e cross join dept d;</span><br></pre></td></tr></table></figure><p>3 自连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">查询emp表和dept表的所有信息: </span><br><span class="line">SQL99: </span><br><span class="line"> select e.*, d.* from emp e inner join dept d on e.deptno=d.deptno;</span><br><span class="line"> 其中inner可以省略</span><br><span class="line"> </span><br><span class="line">oracle写法: </span><br><span class="line"> select e.*, d.* from emp e, dept d where e.deptno=d.deptno;</span><br><span class="line"> 总结: </span><br><span class="line">           [,]----&gt;[inner join]</span><br><span class="line">        [where]-----&gt;[on]</span><br><span class="line"></span><br><span class="line">注意: 不能显示40号部门的信息, 此时需要使用外连接</span><br></pre></td></tr></table></figure><p>4 外连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> 左外连接:</span><br><span class="line">  select e.*, d.* from emp e right outer join dept d on e.deptno=d.deptno;</span><br><span class="line">  </span><br><span class="line">  右外连接:</span><br><span class="line">select e.*, d.* from dept d left outer join emp e on e.deptno=d.deptno;</span><br><span class="line"></span><br><span class="line">【注意】SQL99中，外链接取值与关系表达式=号左右位置无关。取值跟from后表的书写顺序有关。 </span><br><span class="line">&quot;xxx left outer join yyy&quot;  则为取出xxx的内容。</span><br><span class="line">&quot;xxx right outer join yyy&quot; 则为取出yyy的内容</span><br></pre></td></tr></table></figure><p>对比练习:</p><p>1 查询员工信息,员工号,姓名,月薪,部门名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select e.empno, e.ename, e.sal, d.dname from emp e inner join dept d on e.deptno=d.deptno;</span><br><span class="line">select e.empno, e.ename, e.sal, d.dname from emp e, dept d where e.deptno=d.deptno;</span><br><span class="line"></span><br><span class="line">[,] ----&gt;inner join</span><br><span class="line">[where] -----&gt;on</span><br></pre></td></tr></table></figure><p>2 统计各个部门员工总人数-要求显示部门名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">select d.deptno, d.dname, count(e.empno) from emp e inner join dept d on e.deptno=d.deptno group by d.deptno, d.dname;</span><br><span class="line">  </span><br><span class="line">select d.deptno, d.dname, count(e.empno) from emp e,  dept d where e.deptno=d.deptno group by d.deptno, d.dname;</span><br><span class="line"></span><br><span class="line">显示40号部门的信息----需要使用外连接</span><br><span class="line">oracle的写法: ----不支持</span><br><span class="line">select d.deptno, d.dname, count(e.empno) from emp e, dept d where e.deptno(+)=d.deptno group by d.deptno; ---不支持此种写法</span><br><span class="line"></span><br><span class="line">外连接:</span><br><span class="line">右外连接:</span><br><span class="line">select d.deptno, d.dname, count(e.empno) from emp e right outer join dept d on e.deptno=d.deptno group by d.deptno, d.dname;</span><br><span class="line"></span><br><span class="line">左外连接:</span><br><span class="line">SELECT d.deptno, d.dname, COUNT(e.empno) FROM dept d LEFT OUTER JOIN emp e ON e.deptno=d.deptno GROUP BY d.deptno, d.dname;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">与oracle比较:</span><br><span class="line">  mysql不支持oracle那样的外连接的写法, 需要使用right | left [outer] join 的写法</span><br><span class="line">  ,----&gt;right|left [outer] join</span><br><span class="line">  where----&gt;on</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;执行sql脚本&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串相关函数</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/15/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/15/字符串相关函数/</id>
    <published>2022-05-14T18:47:46.000Z</published>
    <updated>2022-05-14T18:49:19.141Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select concat(&apos;hello &apos;, &apos;mysql &apos;, &apos;haha &apos;, &apos;hehe &apos;) from dual;   </span><br><span class="line">Oracle默认只能拼两个，如需多个拼接可以使用嵌套。</span><br><span class="line">select &apos;hello &apos; || &apos;mysql &apos; from dual;‘||’ 在 MySQL不可以使用。</span><br></pre></td></tr></table></figure><p><img src="/images/javawz/image-20220515024812461.png" alt="image-20220515024812461"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">日期转字符串：</span><br><span class="line">在MySQL中没有to_date函数，进行日期转换需使用date_format()来代替。</span><br><span class="line"></span><br><span class="line">select date_format(&apos;2013-5-11&apos;, &apos;yyyy-mm-dd&apos;) from dual;  在Oracle中的‘yyyy-mm-dd’MySQL下不支持。</span><br><span class="line">select date_format(now(), &apos;%Y-%m-%d&apos;) from dual;  y和Y不一样。</span><br><span class="line">select date_format(now(), &apos;%Y-%c-%d %h:%i:%s&apos;) from dual;  c和m、M不一样</span><br><span class="line"></span><br><span class="line">所以yyyy-mm-dd hh24:mi:ss格式在MySQL中对应&apos;%Y-%c-%d %h:%i:%s&apos;</span><br><span class="line"></span><br><span class="line">字符串转日期：</span><br><span class="line">select str_to_date(&apos;2013-6-04 05:14:15&apos; , &apos;%Y-%c-%d %h:%i:%s&apos;) from dual;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>数学函数</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/15/%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/15/数学函数/</id>
    <published>2022-05-14T18:46:35.000Z</published>
    <updated>2022-05-14T18:47:01.305Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javawz/image-20220515024647308.png" alt="image-20220515024647308"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/javawz/image-20220515024647308.png&quot; alt=&quot;image-20220515024647308&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>日期时间函数</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/15/%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E5%87%BD%E6%95%B0/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/15/日期时间函数/</id>
    <published>2022-05-14T18:27:29.000Z</published>
    <updated>2022-05-14T18:43:42.866Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL里面时间分为三类：时间、日期、时间戳(含有时分秒的sysdate)。</p><p>如执行：select now(), year(now()) 年, month(now()) 月, day(now()) 日, date(now());</p><p><img src="/images/javawz/image-20220515024100995.png" alt="image-20220515024100995"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select CURRENT_DATE() , CURRENT_TIME(),  CURRENT_TIMESTAMP() from dual;</span><br></pre></td></tr></table></figure><p><img src="/images/javawz/image-20220515024125295.png" alt="image-20220515024125295"></p><p>昨天、今天、明天：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select now()-1 昨天, now() 今天, now()+1 明天 from dual;</span><br></pre></td></tr></table></figure><p>​发现与Oracle中的日期加减操作有所不同。</p><p><img src="/images/javawz/image-20220515024157844.png" alt="image-20220515024157844"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select date_add(now(), INTERVAL 2 year) from dual;//增加两年</span><br><span class="line"></span><br><span class="line">select date_add(now(), INTERVAL -1 day) 昨天, now() 今天, date_add(now(), INTERVAL +1 day) 明天;</span><br><span class="line"></span><br><span class="line">select date_add(now(), interval -1 day) 昨天, date, date_add(now(), interval +1 day) 明天;</span><br><span class="line"></span><br><span class="line">注意: 上述语句中的函数名, INTERVAL不区分大小写, day, month, year也可以用大写.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;MySQL里面时间分为三类：时间、日期、时间戳(含有时分秒的sysdate)。&lt;/p&gt;
&lt;p&gt;如执行：select now(), year(now()) 年, month(now()) 月, day(now()) 日, date(now());&lt;/p&gt;
&lt;p&gt;&lt;img sr
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>mysql查询综合练习</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/15/mysql%E6%9F%A5%E8%AF%A2%E7%BB%BC%E5%90%88%E7%BB%83%E4%B9%A0/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/15/mysql查询综合练习/</id>
    <published>2022-05-14T17:52:02.000Z</published>
    <updated>2022-05-14T18:26:21.856Z</updated>
    
    <content type="html"><![CDATA[<p>创建一个学生表，插入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">create table student(</span><br><span class="line">id int,</span><br><span class="line">name varchar(20),</span><br><span class="line">chinese int,</span><br><span class="line">english int,</span><br><span class="line">math int</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">insert into student(id,name,chinese,english,math) values(1, &apos;范建&apos;,80,85,90);</span><br><span class="line">insert into student(id,name,chinese,english,math) values(2,&apos;罗况&apos;,90,95,95);</span><br><span class="line">insert into student(id,name,chinese,english,math) values(3,&apos;杜子腾&apos;,80,96,96);</span><br><span class="line">insert into student(id,name,chinese,english,math) values(4,&apos;范冰&apos;,81,97,85);</span><br><span class="line">insert into student(id,name,chinese,english,math) values(5,&apos;申晶冰&apos;,85,84,90);</span><br><span class="line">insert into student(id,name,chinese,english,math) values(6,&apos;郝丽海&apos;,92,85,87);</span><br><span class="line">insert into student(id,name,chinese,english,math) values(7,&apos;郭迪辉&apos;,75,81,80);</span><br><span class="line">insert into student(id,name,chinese,english,math) values(8,&apos;拎壶冲&apos;,77,80,79);</span><br><span class="line">insert into student(id,name,chinese,english,math) values(9,&apos;任我行&apos;,95,85,85);</span><br><span class="line">insert into student(id,name,chinese,english,math) values(10,&apos;史泰香&apos;,94,85,84);</span><br></pre></td></tr></table></figure><p>查询表中所有学生的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from student;</span><br></pre></td></tr></table></figure><p>查询表中所有学生的姓名和对应的英语成绩。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name,english from student;</span><br></pre></td></tr></table></figure><p>过滤表中重复数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select english from student;</span><br><span class="line">select DISTINCT english from student;</span><br><span class="line">select DISTINCT english,name from student;</span><br><span class="line">select english+chinese+math from student;</span><br><span class="line">select english+chinese+math as 总分 from student;</span><br><span class="line">select name,english+chinese+math as 总分 from student;</span><br></pre></td></tr></table></figure><p>在所有学生英语分数上加10分特长分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name,english+10 from student;</span><br></pre></td></tr></table></figure><p>统计每个学生的总分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select english+chinese+math from student;</span><br></pre></td></tr></table></figure><p>使用别名表示学生分数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select name,english+chinese+math as 总分 from student;</span><br><span class="line">select name,english+chinese+math 总分 from student;</span><br></pre></td></tr></table></figure><p>查询姓名为何东的学生成绩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from student where name=&apos;何东&apos;;</span><br></pre></td></tr></table></figure><p>查询英语成绩大于90分的同学</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from student where english&gt;90;</span><br></pre></td></tr></table></figure><p>查询总分大于250分的所有同学</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from student where english+chinese+math&gt;250;</span><br></pre></td></tr></table></figure><p>查询英语分数在 85－95之间的同学。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from student where english&gt;=85 and english&lt;=95;</span><br><span class="line">select * from student where english between 85 and 95;</span><br></pre></td></tr></table></figure><p>查询数学分数为84,90,91的同学。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from student where math=84 or math=90 or math=91;</span><br><span class="line">select * from student where math in(84,90,91);</span><br></pre></td></tr></table></figure><p>查询所有姓何的学生成绩。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from student where name like &apos;何%&apos;;</span><br></pre></td></tr></table></figure><p>查询数学分&gt;85，语文分&gt;90的同学。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from student where math&gt;85 and chinese&gt;90;</span><br></pre></td></tr></table></figure><p>对数学成绩排序后输出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from student order by math;</span><br></pre></td></tr></table></figure><p>对总分排序后输出，然后再按从高到低的顺序输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from student order by math+chinese+english desc;</span><br></pre></td></tr></table></figure><p>对姓何的学生成绩排序输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from student where name like &apos;何%&apos; order by math+chinese+english desc;</span><br><span class="line">select name, math+chinese+english from student where name like &apos;何%&apos; order by math+chinese+english desc;</span><br></pre></td></tr></table></figure><p>统计一个班级共有多少学生？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from student;</span><br></pre></td></tr></table></figure><p>统计数学成绩大于90的学生有多少个？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from student where math&gt;90;</span><br></pre></td></tr></table></figure><p>统计总分大于250的人数有多少？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from student where math+chinese+english&gt;250;</span><br></pre></td></tr></table></figure><p>统计一个班级数学总成绩？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sum(math) from student;</span><br></pre></td></tr></table></figure><p>统计一个班级语文、英语、数学各科的总成绩</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sum(math), sum(chinese), sum(english) from student;</span><br></pre></td></tr></table></figure><p>统计一个班级语文、英语、数学的成绩总和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select sum(math+chinese+english)from student;</span><br><span class="line">select sum(math)+sum(chinese)+sum(english) from student;</span><br></pre></td></tr></table></figure><p>求一个班级数学平均分？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select avg(math) from student;</span><br></pre></td></tr></table></figure><p>求一个班级总分平均分</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select avg(math+chinese+english)from student;</span><br><span class="line">select avg(math)+avg(chinese)+avg(english) from student;</span><br></pre></td></tr></table></figure><p>求班级最高分和最低分</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select max(math+chinese+english),min(math+chinese+english) from student;</span><br></pre></td></tr></table></figure><p>top-N问题:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">按math成绩从小大的排序, 求math成绩在5-8名的</span><br><span class="line">select * from student order by math limit 4, 4;</span><br><span class="line"></span><br><span class="line">limit后面的两个数字的意思:</span><br><span class="line">第一个4: 表示要跳过前面几个</span><br><span class="line">第二个4: 表示连续取几个.</span><br></pre></td></tr></table></figure><h3 id="分组数据"><a class="markdownIt-Anchor" href="#分组数据"></a> 分组数据</h3><p>为学生表，增加一个班级列，练习分组查询。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter table student add column class_id int;</span><br><span class="line"></span><br><span class="line">注意语法：Oracle中不能有“column”关键字，MySQL中有没有“column”都可以执行。</span><br></pre></td></tr></table></figure><p>更新表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update student set class_id=1 where id&lt;=5;</span><br><span class="line">update student set class_id=2 where id&gt;5;</span><br><span class="line">(update student set class_id=2 where id between 6 and 10;)</span><br></pre></td></tr></table></figure><p>查出各个班的总分，最高分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select class_id, sum(chinese+english+math) &quot;总成绩&quot;, max(chinese+english+math) &quot;最高分&quot; from student group by class_id;</span><br></pre></td></tr></table></figure><p>求各个班级 英语的平均分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select classid, avg(english) from student group by class_id</span><br></pre></td></tr></table></figure><p>如根据组函数的语法要求，将select后增加name列，而不加至group by 之后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select name, classid, avg(english)from student group by classid;</span><br><span class="line">会发现MySQL检查不出错误。相比Oracle数据库，MySQL分组检查不严格。</span><br><span class="line">select sum(math+chinese+english),max(math+chinese+english) from student group by class_id;</span><br></pre></td></tr></table></figure><p>查询出班级总分大于1300分的班级ID</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select class_id from student group by class_id having sum(math+chinese+english)&gt;1300;</span><br><span class="line">select class_id from student where sum(math+chinese+english)&gt;1300 group by class_id ;</span><br><span class="line">对于组函数的应用与Oracle类似，可以应用于Having中，但不能用于where子句中.</span><br><span class="line"></span><br><span class="line">select class_id, sum(chinese+english+math) &quot;总分&quot; from student group by class_id having 总分&gt;1300;</span><br><span class="line"></span><br><span class="line">注意: having后面若是用&quot;总分&quot;不可以, 但是不加&quot;&quot;可以.</span><br><span class="line">        在oracle数据库中, having后面不可以使用别名, mysql可以使用别名(若是中文不要加&quot;&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;创建一个学生表，插入数据&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>mysql的基本操作</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/14/mysql%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/14/mysql的基本操作/</id>
    <published>2022-05-14T01:11:33.000Z</published>
    <updated>2022-05-15T00:16:19.960Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Query OK//代表执行成功</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">库名和表名是区分大小写的</span><br></pre></td></tr></table></figure><h3 id="数据库curd"><a class="markdownIt-Anchor" href="#数据库curd"></a> 数据库CURD</h3><p>对数据库进行增(create)、删(delete)、改(update)、查(Retrieve)操作。</p><p>知识点补充: 介绍mysql数据库与oracle数据库的不同(图解说明)<br>mysql数据库: root用户 &gt; 库 &gt; 表<br>oracle数据库: 数据库 &gt; 用户 &gt; 表</p><p><img src="/images/javawz/image-20220514094433980.png" alt="image-20220514094433980"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“ ` ”（ESC键 下面的按键），表示反引号，默认情况下，反引号括起来的字符串，区分大小写。</span><br></pre></td></tr></table></figure><p>1 创建数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">创建数据库, 默认为latin1(拉丁)字符集的</span><br><span class="line"></span><br><span class="line">create database 库名;</span><br><span class="line"></span><br><span class="line">create database mydb1;</span><br></pre></td></tr></table></figure><p>指定字符集为utf8</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create database 库名 character set 字符集;</span><br><span class="line">create database mydb2 character set utf8;</span><br></pre></td></tr></table></figure><p>指定字符集为utf8,并对插入的数据进行检查是否是utf8字符集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database 库名 character set 字符集 collate 字符集_general_ci;</span><br><span class="line"></span><br><span class="line">create database mydb3 character set utf8 collate utf8_general_ci;</span><br></pre></td></tr></table></figure><p>2 查看数据库</p><p>显示所有数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p>显示创建数据库的语句信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show create database 库名;</span><br><span class="line">show create database mydb1;</span><br></pre></td></tr></table></figure><p>注意 ：mysql默认语言集是latin1，每次在创建数据库的时候应指定字符集.</p><p>3 修改数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">修改mydb1的字符集为utf8(不能修改数据库名)</span><br><span class="line">alter database 库名 character set 字符集;</span><br><span class="line"></span><br><span class="line">alter database mydb1 character set utf8;</span><br></pre></td></tr></table></figure><p>4 删除数据库</p><pre><code>drop database 库名;drop database mydb1;</code></pre><h3 id="表的curd"><a class="markdownIt-Anchor" href="#表的curd"></a> 表的CURD</h3><p>对表本身进行操作：创建，查看，修改，删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在创建表之前要先指定使用哪个库, 先查看一下有哪些库:</span><br><span class="line">查看有哪些库:</span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line">使用指定的库:</span><br><span class="line">use 库名;</span><br><span class="line">use scott;</span><br></pre></td></tr></table></figure><p>查看当前使用的是哪个库:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">status  或者 select database() from dual;</span><br></pre></td></tr></table></figure><p><img src="/images/javawz/image-20220514094742022.png" alt="image-20220514094742022"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">bit     1位　可以指定位数，如：bit(3)</span><br><span class="line">int     2字节 可以指定最大位数，如：int&lt;4&gt;　最大为4位的整数</span><br><span class="line">float   2个字节　可以指定最大的位数和最大的小数位数，如：float&lt;5,2&gt; 最大为一个5位的数，小数位最多2位 </span><br><span class="line">double　   4个字节　可以指定最大的位数和最大的小数位数，如：float&lt;6,4&gt; 最大为一个6位的数，小数位最多4位</span><br><span class="line">char　     必须指定字符数,如char(5) 为不可变字符　即使存储的内容为&apos;ab&apos;,也是用5个字符的空间存储这个数据</span><br><span class="line">varchar　   必须指定字符数,如varchar(5) 为可变字符　如果存储的内容为&apos;ab&apos;,占用2个字符的空间；如果为&apos;abc&apos;,则占用3个字符的空间</span><br><span class="line">text:     大文本(大字符串)</span><br><span class="line">blob：   二进制大数据　如图片，音频文件，视频文件</span><br><span class="line">date: 日期　如：&apos;1921-01-02&apos;</span><br><span class="line">datetime: 日期+时间　如：&apos;1921-01-02 12:23:43&apos;</span><br><span class="line">timeStamp: 时间戳，自动赋值为当前日期时间</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">创建表常用到的数据类型: </span><br><span class="line">常用的数据类型:</span><br><span class="line">int</span><br><span class="line">double</span><br><span class="line">char </span><br><span class="line">varchar</span><br><span class="line">timestamp</span><br></pre></td></tr></table></figure><p>1 创建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(列名 类型, ..., 列名 类型, 列名 类型);</span><br><span class="line"></span><br><span class="line">create table employee(empno int, ename varchar(20), sal int);</span><br></pre></td></tr></table></figure><p>2 查看表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><p>查看表的创建语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show create table 表名;</span><br><span class="line">show create table emp;</span><br></pre></td></tr></table></figure><p>查看表结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">desc 表名;</span><br><span class="line">desc emp;</span><br></pre></td></tr></table></figure><p>3 修改表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">更改表名</span><br><span class="line">rename table 旧表名 to 新表名;</span><br><span class="line">rename table employee to worker;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">增加一个字段</span><br><span class="line">alter table 表名 add column 列名 类型;</span><br><span class="line">alter table worker add column email varchar(30);</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改一个字段名</span><br><span class="line">    ALTER TABLE 表名 CHANGE [column] 旧字段名 新字段名 新数据类型;  </span><br><span class="line">    ALTER TABLE worker CHANGE [column] email ema varchar(50);</span><br><span class="line">     </span><br><span class="line">修改一个字段类型</span><br><span class="line">alter table 表名 modify column 列名 新类型;</span><br><span class="line">alter table worker modify column email varchar(50);</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">删除一个字段</span><br><span class="line">alter table 表名 drop column 要删除的列名;</span><br><span class="line">alter table worker drop column email;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">修改表的字符集</span><br><span class="line">alter table 表名 character set 字符集;</span><br><span class="line">alter table worker character set utf8;</span><br></pre></td></tr></table></figure><p>4 删除表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drop table 表名;</span><br><span class="line">drop table worker;</span><br><span class="line">注意: mysql删除表不能使用purge</span><br></pre></td></tr></table></figure><h3 id="表数据的curd"><a class="markdownIt-Anchor" href="#表数据的curd"></a> 表数据的CURD</h3><p>1 创建一个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">列名 类型,</span><br><span class="line">列名 类型,</span><br><span class="line">列名 类型,</span><br><span class="line">列名 类型</span><br><span class="line">);</span><br><span class="line">create table employee(</span><br><span class="line">id int,</span><br><span class="line">name varchar(20),</span><br><span class="line">sex int,</span><br><span class="line">birthday date,</span><br><span class="line">salary double,</span><br><span class="line">entry_date date,</span><br><span class="line">resume text</span><br><span class="line">);</span><br><span class="line">  注意: 若不能创建成功, 可以去掉建表语句中的tab键.</span><br></pre></td></tr></table></figure><p>插入数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名 values(值1,值2,...,值n);//插入全部列的数据</span><br><span class="line"></span><br><span class="line">insert into employee values(1,&apos;张三&apos;,1,&apos;1983-04-27&apos;,15000,&apos;2012-06-24&apos;,&apos;一个大牛&apos;);</span><br><span class="line"></span><br><span class="line">//插入指定列的数据</span><br><span class="line">insert into employee(列名1,列名2,列名3) values(值1,值2,值3);</span><br><span class="line"></span><br><span class="line">insert into employee(id,name,sex,birthday,salary,entry_date,resume) values(2,&apos;李四&apos;,1,&apos;1984-02-22&apos;,10000,&apos;2012-07-24&apos;,&apos;一个中牛&apos;);</span><br><span class="line">insert into employee(id,name,sex,birthday,salary,entry_date,resume) values(3,&apos;王五&apos;,0,&apos;1985-08-28&apos;,7000,&apos;2012-08-24&apos;,&apos;一个小虾&apos;);</span><br></pre></td></tr></table></figure><p>2 查数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select 列名1,...,列名n from 表名;</span><br><span class="line"></span><br><span class="line">select id, name as &quot;名字&quot;, salary &quot;月薪&quot;, salary*12 年薪  from employee where id &gt;=2;</span><br><span class="line"></span><br><span class="line">select id, name as &quot;名字&quot;, salary &quot;月薪&quot;, salary*12 年薪  from employee where id &gt;=2 \G</span><br><span class="line">select id, name as &quot;名字&quot;, salary &quot;月薪&quot;, salary*12 年薪  from employee where id &gt;=2 \g</span><br><span class="line"></span><br><span class="line">说明: 若表的列太多, 可以使用\G或\g</span><br></pre></td></tr></table></figure><p>3 update数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">update 表名 set 列名=值;</span><br><span class="line"></span><br><span class="line">将所有员工薪水都增加500元。</span><br><span class="line">update employee set salary=salary+500;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">将王五的员工薪水修改为10000元，resume改为也是一个中牛</span><br><span class="line">update employee set salary=10000, resume=&apos;也是一个中牛&apos; where name=&apos;王五&apos;;</span><br></pre></td></tr></table></figure><p>4 delete数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">delete from 表名;</span><br><span class="line">delete from 表名 where 列名=值;</span><br><span class="line">truncate table 表名;//最好不要使用这一条sql语句,危险,删除后不可以恢复</span><br><span class="line"></span><br><span class="line">删除表中姓名为王五的记录。</span><br><span class="line">delete from employee where name=&apos;王五&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">删除表中所有记录。</span><br><span class="line">delete from employee;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用truncate删除表中记录。</span><br><span class="line">truncate table employee;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>MYSQL基础知识</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/14/MYSQL%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/14/MYSQL基础知识/</id>
    <published>2022-05-13T21:24:27.000Z</published>
    <updated>2022-05-14T23:14:22.596Z</updated>
    
    <content type="html"><![CDATA[<p>mysql被oracle公司收购了.</p><p>​</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql-essential-5.1.60-win32.msi 精简版，如果只需要mysql服务，就选择此版本。</span><br><span class="line"></span><br><span class="line">mysql-5.1.60-win32.msi 是完整版，包含安装程序和配置向导，有MySQL文档。  </span><br><span class="line"></span><br><span class="line">mysql-noinstall-5.1.60-win32.zip 是非安装的zip压缩包，没有自动安装程序和配置向导，无安装向导</span><br><span class="line"></span><br><span class="line">mysql-5.1.60.zip 是用于windows的Mysql源码压缩包</span><br></pre></td></tr></table></figure><h3 id="mysql版本"><a class="markdownIt-Anchor" href="#mysql版本"></a> mysql版本:</h3><pre><code>a Community社区版: 免费b Enterprise企业版: 收费1 MySQL标准版    2 MySQL企业版     3 MySQL集群版  每个版本又可以分为windows和linux版本, 再细分还可以分为32位和64位</code></pre><h3 id="mysql服务器的安装和卸载"><a class="markdownIt-Anchor" href="#mysql服务器的安装和卸载"></a> mysql服务器的安装和卸载</h3><p>1 查询服务器上已经按照的mysql版本:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br></pre></td></tr></table></figure><p>2 卸载旧的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e 软件包名 --nodeps --allmatches (不理会依赖关系，删除所有上一步查出来的相同的mysql)</span><br></pre></td></tr></table></figure><p>3 删除一些卸载时未能删除的文件</p><pre><code>#rm -f /etc/my.cnf#rm -rf /var/lib/mysql#rm -rf /var/share/mysql#rm -rf /usr/bin/mysql*</code></pre><p>4 mysql的安装<br>解压 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip V46610-01-MySQL Database 5.6.20 RPM for Oracle Linux RHEL 6 x86 (64bit).zip</span><br></pre></td></tr></table></figure><p>解压出来必须要安装的包:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MySQL-client-advanced-5.6.20-1.el6.x86_64.rpm</span><br><span class="line">MySQL-devel-advanced-5.6.20-1.el6.x86_64.rpm</span><br><span class="line">MySQL-server-advanced-5.6.20-1.el6.x86_64.rpm</span><br></pre></td></tr></table></figure><p>按照命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh MySQL-server-advanced-5.6.****-1.el6.x86_64.rpm</span><br></pre></td></tr></table></figure><pre><code>安装完成之后密码的存放位置: /root/.mysql_secret</code></pre><p>5 登陆mysql服务</p><p>a 用root身份启动mysql服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure><p>b 查看mysql服务是否已经启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -u mysql</span><br><span class="line">ps -ef | grep mysql</span><br></pre></td></tr></table></figure><p>c  停止mysql服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql stop</span><br></pre></td></tr></table></figure><p>d 登陆mysql服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -u 用户名 -pXXXX               XXXX代表密码</span><br><span class="line"></span><br><span class="line">mysql -h 主机名 -P 端口号 -u 用户名 -p</span><br><span class="line"></span><br><span class="line">mysql -h 主机名 -P 端口号 -u 用户名 -p密码</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">注意: 密码从/root/.mysql_secret文件中获取</span><br><span class="line">      </span><br><span class="line"> 登陆成功后, 修改密码:</span><br><span class="line">mysql&gt; set password=password(&apos;123456&apos;); //这个一般不使用了</span><br><span class="line"></span><br><span class="line">ALTER USER &apos;用户名&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;密码&apos;;     一般使用这个修改密码</span><br><span class="line">    </span><br><span class="line">    注意: 若无法正常登陆, 可以用root用户杀死mysql服务, 重新启动.</span><br><span class="line">      </span><br><span class="line">如何将oracle用户加入到sudo当中:</span><br><span class="line">打开 /etc/sudoers, 添加oracle ALL=(ALL) ALL</span><br></pre></td></tr></table></figure><p>5  退出登录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit/exit</span><br></pre></td></tr></table></figure><h3 id="安装客户端"><a class="markdownIt-Anchor" href="#安装客户端"></a> 安装客户端</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#rpm -ivh MySQL-client-advanced-5.6.****-1.el6.x86_64.rpm</span><br><span class="line">说明:不安装mysql-client是不能使用mysql工具登陆到mysql数据库</span><br><span class="line"></span><br><span class="line">其他软件包选择性安装：</span><br><span class="line">#rpm -ivh MySQL-devel-advanced-5.6.20-1.el6.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="远程访问不了数据库"><a class="markdownIt-Anchor" href="#远程访问不了数据库"></a> 远程访问不了数据库</h3><p>在控制台输入 <code>mysql -uroot -p密码</code> 进入mysql</p><p>输入<code>use mysql;</code>进入mysql数据库</p><p>输入<code>update user set host='%' where user='root' ;</code> 来允许通过ip访问。</p><p>修改 /etc/mysql/mysql.conf.d/下的mysqld.cnf文件</p><p>将<code>bind-address = 127.0.0.1</code>改成<code>bind-address =0.0.0.0</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">28 #</span><br><span class="line">29 # Instead of skip-networking the default is now to listen only on</span><br><span class="line">30 # localhost which is more compatible and is not less secure.</span><br><span class="line">31 bind-address        = 0.0.0.0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mysql被oracle公司收购了.&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span c
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker拉取oracle 11g镜像配置的详细教程</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/13/Docker%E6%8B%89%E5%8F%96oracle11g%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE%E7%9A%84%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/13/Docker拉取oracle11g镜像配置的详细教程/</id>
    <published>2022-05-12T22:22:30.000Z</published>
    <updated>2022-05-12T22:40:13.437Z</updated>
    
    <content type="html"><![CDATA[<h4 id="docker拉取oracle数据库镜像"><a class="markdownIt-Anchor" href="#docker拉取oracle数据库镜像"></a> docker拉取oracle数据库镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search oracle</span><br></pre></td></tr></table></figure><p>查看可以使用docker拉取的oracle镜像；我是选择的Oracle12c这一款，truevoly/oracle-12c是复制之前的sath89/oracle-12c image镜像。</p><p><img src="../../themes/pure/source/images/javawz/5a025e6dda1a45f79592f8b8575a17c7.png" alt="在这里插入图片描述"></p><h3 id="开始拉取镜像-执行命令"><a class="markdownIt-Anchor" href="#开始拉取镜像-执行命令"></a> 开始拉取镜像-执行命令：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g</span><br></pre></td></tr></table></figure><p>下载完成后 查看镜像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src="../../themes/pure/source/images/javawz/2021091810223023.png" alt="img"></p><h3 id="创建容器"><a class="markdownIt-Anchor" href="#创建容器"></a> 创建容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 1521:1521 --name oracle11g registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g</span><br></pre></td></tr></table></figure><p><em><strong>参数 -d 后台运行容器，并返回容器ID ; -p 指定端口 , -v 指定数据卷位置</strong></em></p><p><em><strong>数据卷的特点：<br>1、可以供多个容器访问，直接共享或者重用<br>2、独立于容器周期，不会在删除容器时删除其挂载的数据卷<br>3、数据卷在容器启动时初始化，如果容器使用的镜像在挂载点包含的数据这些数据会复制到新的容器中<br>4、可以直接对数据卷里的内容进行修改</strong></em></p><p>这里说一下，命令后面的地址一定要是你下载的镜像地址也就是你拉取镜像名字，否则会出现名字已存在等问题！</p><p>​    如果创建成功能会返回容器id</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee92e88fea086c05af307d0274e1555ab04bfe747bb7b5b5e2198074bc40cdde</span><br></pre></td></tr></table></figure><h3 id="启动容器"><a class="markdownIt-Anchor" href="#启动容器"></a> 启动容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start oracle11g</span><br></pre></td></tr></table></figure><p><img src="../../themes/pure/source/images/javawz/2021091810223024.png" alt="img"></p><h3 id="进入镜像进行配置"><a class="markdownIt-Anchor" href="#进入镜像进行配置"></a> 进入镜像进行配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it oracle11g bash</span><br></pre></td></tr></table></figure><h3 id="创建软连接"><a class="markdownIt-Anchor" href="#创建软连接"></a> 创建软连接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s $ORACLE_HOME/bin/sqlplus /usr/bin</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//ctrl + p + q 退出容器（注意，不要exit退出，防止容器直接关闭了）</span><br></pre></td></tr></table></figure><h3 id="查看容器运行状态"><a class="markdownIt-Anchor" href="#查看容器运行状态"></a> 查看容器运行状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE                 COMMAND             CREATED         STATUS         PORTS                                                                                                                         NAMES</span><br><span class="line">ee92e88fea08   truevoly/oracle-12c   &quot;/entrypoint.sh &quot;   6 minutes ago   Up 6 minutes   0.0.0.0:1521-&gt;1521/tcp, :::1521-&gt;1521/tcp, 0.0.0.0:2122-&gt;22/tcp, :::2122-&gt;22/tcp, 0.0.0.0:9090-&gt;8080/tcp, :::9090-&gt;8080/tcp   oracle12c</span><br><span class="line">//进入容器内部</span><br><span class="line">[root@localhost ~]# docker exec -it ee92e88fea08 /bin/bash</span><br><span class="line">//切换成oracle用户</span><br><span class="line">root@ee92e88fea08:/# su oracle</span><br><span class="line">//进入sqlplus</span><br><span class="line">oracle@ee92e88fea08:/$ $ORACLE_HOME/bin/sqlplus / as sysdba</span><br><span class="line"></span><br><span class="line">SQL*Plus: Release 12.1.0.2.0 Production on Sun Aug 1 03:15:37 2021</span><br><span class="line"></span><br><span class="line">Copyright (c) 1982, 2014, Oracle.  All rights reserved.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Connected to:</span><br><span class="line">Oracle Database 12c Standard Edition Release 12.1.0.2.0 - 64bit Production</span><br><span class="line">//设置密码有效期为无限制</span><br><span class="line">SQL&gt; ALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;</span><br><span class="line"></span><br><span class="line">Profile altered.</span><br><span class="line">//解锁system用户</span><br><span class="line">SQL&gt; alter user SYSTEM account unlock;</span><br><span class="line"></span><br><span class="line">User altered.</span><br><span class="line">//创建一个账号为test_lx的用户密码设置为test_lx</span><br><span class="line">SQL&gt; create user test_lx identified by test_lx;     </span><br><span class="line"></span><br><span class="line">User created.</span><br><span class="line">//为这个用户赋予管理员的权限</span><br><span class="line">SQL&gt; grant dba to test_lx;</span><br><span class="line"></span><br><span class="line">Grant succeeded.</span><br><span class="line"></span><br><span class="line">SQL&gt; read escape sequence</span><br><span class="line"></span><br><span class="line">//ctrl + p + q 退出容器（注意，不要exit退出，防止容器直接关闭了）</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;docker拉取oracle数据库镜像&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#docker拉取oracle数据库镜像&quot;&gt;&lt;/a&gt; docker拉取oracle数据库镜像&lt;/h4&gt;
&lt;figure class=&quot;highlight
      
    
    </summary>
    
      <category term="linux" scheme="https://xiaowuyoucy.github.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>同义词</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/13/%E5%90%8C%E4%B9%89%E8%AF%8D/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/13/同义词/</id>
    <published>2022-05-12T22:14:01.000Z</published>
    <updated>2022-05-12T22:20:21.890Z</updated>
    
    <content type="html"><![CDATA[<p>同义词:<br>1 什么是同义词:<br>同义词就是别名.</p><p>2 同义词使用的场合.</p><p>xiaohong想访问scott用户的emp表:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1 需要scott用户给xiaohong赋访问emp表的权限:</span><br><span class="line">grant select on emp to xiaohong;</span><br><span class="line">然后使用xiaohong用户登录oracle:</span><br><span class="line">sqlplus xiaohong/xiaohong@oracle;</span><br><span class="line">SQL&gt; select * from scott.emp;</span><br><span class="line">为了在访问scott.emp表的时候不用再使用scott.emp,可以给scott.emp创建同义词;</span><br></pre></td></tr></table></figure><p>3 如何创建同义词:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create synonym 同义词名 for 用户名.表名;</span><br><span class="line">create synonym emp for scott.emp;</span><br></pre></td></tr></table></figure><p>如何创建一个新的oracle用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">使用sys用户创建新的用户和给这个新用户添加权限:</span><br><span class="line">create user 用户名 identified by 密码;</span><br><span class="line">grant connect, resource to 用户名;  --给用户添加连接权限,如果一个新用户没有连接权限的话,是无法连接到这个用户的</span><br><span class="line">grant create synonym to 用户名;     --给用户添加创建同义词的权限</span><br><span class="line"></span><br><span class="line">create user xiaohei identified by xiaohei;</span><br><span class="line">grant connect, resource to xiaohei;</span><br><span class="line">grant create synonym to xiaohei;</span><br></pre></td></tr></table></figure><p>4 删除同义词:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drop synonym 同义词名;</span><br><span class="line">drop synonym emp;</span><br></pre></td></tr></table></figure><p>5 查询同义词</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select synonym_name from user_synonyms;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;同义词:&lt;br&gt;
1 什么是同义词:&lt;br&gt;
同义词就是别名.&lt;/p&gt;
&lt;p&gt;2 同义词使用的场合.&lt;/p&gt;
&lt;p&gt;xiaohong想访问scott用户的emp表:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>序列</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/13/%E5%BA%8F%E5%88%97/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/13/序列/</id>
    <published>2022-05-12T21:56:38.000Z</published>
    <updated>2022-05-12T23:51:22.509Z</updated>
    
    <content type="html"><![CDATA[<p>可以理解成数组：默认，从[1]开始，长度[20][1, 2, 3, 4, 5, 6, …, 20]在内存中。</p><p>由于序列是被保存在内存中，访问内存的速率要高于访问硬盘的速率。所以序列可以提高效率。</p><p>序列:<br>1 序列的用处:<br>由于表的主键要求是非空且唯一的, 为了保证主键是非空和唯一的, 可以使用序列.</p><p>​2 创建序列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create sequence 序列名;</span><br><span class="line">create sequence seq_mytest;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-- Create sequence </span><br><span class="line">create sequence 序列名</span><br><span class="line">minvalue 最小值</span><br><span class="line">maxvalue 最大值</span><br><span class="line">start with 1  --开始值</span><br><span class="line">increment by 1  --步长</span><br><span class="line">cache 20;--容器大小</span><br><span class="line"></span><br><span class="line">-- Create sequence </span><br><span class="line">create sequence MYSEQ</span><br><span class="line">minvalue 1</span><br><span class="line">maxvalue 9999999999999999999999999999</span><br><span class="line">start with 1</span><br><span class="line">increment by 1</span><br><span class="line">cache 20;</span><br></pre></td></tr></table></figure><p>3 序列的属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">currval 和 nextval, 但是第一次使用的时候先要取nextval的值.</span><br><span class="line"></span><br><span class="line">序列名.currval  //获取当前序列</span><br><span class="line">序列名.nextval  //获取下一个序列</span><br><span class="line"></span><br><span class="line">查看序列</span><br><span class="line">select 序列名.currval from dual;--duan是伪表</span><br><span class="line">select 序列名.nextval from dual;</span><br></pre></td></tr></table></figure><p>4 删除序列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drop sequence 序列名;</span><br><span class="line">drop sequence seq_mytest;</span><br></pre></td></tr></table></figure><p>查看序列代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">edit 序列名</span><br></pre></td></tr></table></figure><p>查看序列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select sequence_name from user_sequences;</span><br></pre></td></tr></table></figure><p>查询序列的属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user_sequences;   --user_sequences为数据字典视图。</span><br></pre></td></tr></table></figure><p>查看序列属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">edit 序列名</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;可以理解成数组：默认，从[1]开始，长度[20]		[1, 2, 3, 4, 5, 6, …, 20]		在内存中。&lt;/p&gt;
&lt;p&gt;由于序列是被保存在内存中，访问内存的速率要高于访问硬盘的速率。所以序列可以提高效率。&lt;/p&gt;
&lt;p&gt;序列:&lt;br&gt;
1 序列的用处:&lt;br&gt;

      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>索引</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/13/%E7%B4%A2%E5%BC%95/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/13/索引/</id>
    <published>2022-05-12T21:50:24.000Z</published>
    <updated>2022-05-12T21:56:09.862Z</updated>
    
    <content type="html"><![CDATA[<p>索引:使用是索引的目的是提高查询的效率.</p><p>索引，相当于书的目录，提高数据检索速度。提高效率（视图不可以提高效率）</p><ul><li>一种独立于表的模式对象, 可以存储在与表不同的磁盘或表空间中</li><li>索引被删除或损坏, 不会对表产生影响, 其影响的只是查询的速度</li><li>索引一旦建立, Oracle 管理系统会对其进行自动维护, 而且由 Oracle 管理系统决定何时使用索引. 用户不用在查询语句中指定使用哪个索引</li><li>在删除一个表时, 所有基于该表的索引会自动被删除</li><li>通过指针加速 Oracle 服务器的查询速度</li><li>通过快速定位数据的方法，减少磁盘 I/O</li></ul><p>1 创建索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create index 索引名 on 表名(列名);</span><br><span class="line"></span><br><span class="line">create index idx_emp on emp(empno);</span><br><span class="line"></span><br><span class="line">--emp(empno)  表名(列名)  一般列名使用主键列</span><br></pre></td></tr></table></figure><p>2 删除索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drop index 索引名;</span><br><span class="line">drop index idx_emp_bak;</span><br></pre></td></tr></table></figure><p>3 查询创建的索引</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select index_name from user_indexes;</span><br><span class="line">select xxxx_name from user_xxxxs;</span><br></pre></td></tr></table></figure><p>4 索引的原理?<br>在查询的时候, where条件后面要使用创建索引的时候的列, oracle先查询索引表,<br>从索引表中找到该列的值对应的rowid, 找到rowid再从表中根据rowid找到那一行记录.<br>5 注意点:<br>创建索引的列最后是值的分布很广泛且重复的概率很低.</p><p>​</p><p>下列情况不要创建索引:</p><ul><li>表很小</li><li>列不经常作为连接条件或出现在WHERE子句中</li><li>查询的数据大于2%到4%</li><li>表经常更新</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;索引:使用是索引的目的是提高查询的效率.&lt;/p&gt;
&lt;p&gt;索引，相当于书的目录，提高数据检索速度。提高效率（视图不可以提高效率）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一种独立于表的模式对象, 可以存储在与表不同的磁盘或表空间中&lt;/li&gt;
&lt;li&gt;索引被删除或损坏, 不会对表产生影响, 
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>视图</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/13/%E8%A7%86%E5%9B%BE/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/13/视图/</id>
    <published>2022-05-12T21:42:28.000Z</published>
    <updated>2022-05-12T21:49:28.654Z</updated>
    
    <content type="html"><![CDATA[<p>视图:<br>1 什么是视图:<br>视图本身没有数据, 数据存储在表中</p><p>​2 如何创建视图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create view vm_emp as select * from emp;</span><br><span class="line"></span><br><span class="line">create or replace view vm_emp as select * from emp;</span><br><span class="line">create or replace view vm_emp as select deptno, empno, ename from emp where deptno=10;</span><br><span class="line">--  or replace代表如果视图存在,就替换</span><br><span class="line">--查看视图</span><br><span class="line">select view_name from user_views;</span><br></pre></td></tr></table></figure><p>​添加创建视图权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">添加步骤：</span><br><span class="line">1.使用管理员登陆：sqlplus / as sysdba </span><br><span class="line">2.给scott用户增加权限：SQL&gt;  grant create view to scott;  </span><br><span class="line">3.执行“/”可成功创建视图empincomeview。 </span><br><span class="line">4.视图的操作和表的操作完全一样。SQL&gt;  select * from empincomeview;</span><br></pre></td></tr></table></figure><p>3 如何删除视图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drop view 视图名;</span><br><span class="line">drop view vm_emp;</span><br></pre></td></tr></table></figure><p>4 使用视图的优点:</p><p>可以限制用户对某些数据的访问;<br>可以简化查询;</p><p>5 使用视图注意点:</p><p>不要通过视图去修改表的数据.<br>可以将视图设置为只读属性:with read only</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create or replace view vm_emp as select * from emp with read only;</span><br></pre></td></tr></table></figure><p>查看视图代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">edit 视图名</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;视图:&lt;br&gt;
1 什么是视图:&lt;br&gt;
视图本身没有数据, 数据存储在表中&lt;/p&gt;
&lt;p&gt;​	2 如何创建视图&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>表的创建和管理</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/13/%E8%A1%A8%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E7%AE%A1%E7%90%86/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/13/表的创建和管理/</id>
    <published>2022-05-12T19:16:25.000Z</published>
    <updated>2022-05-12T20:10:52.563Z</updated>
    
    <content type="html"><![CDATA[<p>创建前提条件：表空间的使用权限和create table的权限</p><p>基本的数据存储集合，由行和列组成。表名和列名遵循如下命名规则：</p><ul><li>必须<strong>以字母开头</strong></li><li>必须在 <strong>1–30</strong> 个字符之间</li><li>必须只能包含 <strong>A–Z, a–z, 0–9, _, $,</strong> 和 <strong>#</strong></li><li>必须不能和用户定义的其他对象重名</li><li>必须不能是Oracle 的保留字</li><li><strong>Oracle</strong>默认存储是都存为大写</li><li>数据库名只能是1~8位，datalink可以是128位，和其他一些特殊字符</li></ul><h4 id="创建表的数据类型"><a class="markdownIt-Anchor" href="#创建表的数据类型"></a> 创建表的数据类型</h4><p><img src="../../themes/pure/source/images/javawz/wps37AF.tmp.jpg" alt="img"></p><p>rowid：行地址 ——伪列</p><h4 id="查看行地址"><a class="markdownIt-Anchor" href="#查看行地址"></a> 查看行地址</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select rowid, empno, deptno from emp</span><br></pre></td></tr></table></figure><h4 id="创建表的语句"><a class="markdownIt-Anchor" href="#创建表的语句"></a> 创建表的语句:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(列名 类型, ...,列名 类型);</span><br><span class="line"></span><br><span class="line">create table tbl(id number, name varchar2(20));</span><br><span class="line">insert into tbl values(01, &apos;xiaoliu&apos;);</span><br></pre></td></tr></table></figure><h4 id="在创建表的时候为某一列设置默认值"><a class="markdownIt-Anchor" href="#在创建表的时候为某一列设置默认值"></a> 在创建表的时候为某一列设置默认值</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table tbl(id number, name varchar2(20), hiredate date default sysdate);</span><br><span class="line">//hiredate date default sysdate 如果hiredate为空,默认使用系统日期值</span><br><span class="line"></span><br><span class="line">insert into tbl(id, name) values(02, &apos;xiaohong&apos;);  ---若没有插入hiredate的值, 则使用默认值</span><br></pre></td></tr></table></figure><h4 id="通过已有的表创建一个表-相当于表结构的复制"><a class="markdownIt-Anchor" href="#通过已有的表创建一个表-相当于表结构的复制"></a> 通过已有的表创建一个表, 相当于表结构的复制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table tbl_bak as select * from tbl where 1=2;</span><br></pre></td></tr></table></figure><h3 id="修改表"><a class="markdownIt-Anchor" href="#修改表"></a> 修改表</h3><h4 id="增加一个列"><a class="markdownIt-Anchor" href="#增加一个列"></a> 增加一个列</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add 列名 类型;</span><br><span class="line"></span><br><span class="line">alter table tbl add email varchar2(30);</span><br></pre></td></tr></table></figure><h4 id="修改列属性"><a class="markdownIt-Anchor" href="#修改列属性"></a> 修改列属性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 modify 列名 要修改的类型;</span><br><span class="line">alter table tbl modify email varchar2(40);</span><br></pre></td></tr></table></figure><h4 id="重命名列"><a class="markdownIt-Anchor" href="#重命名列"></a> 重命名列</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 rename column 旧列名 to 新列名;</span><br><span class="line">alter table tbl rename column email to address;</span><br></pre></td></tr></table></figure><h4 id="删除列"><a class="markdownIt-Anchor" href="#删除列"></a> 删除列</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 drop column 列名;</span><br><span class="line">alter table tbl drop column address;</span><br></pre></td></tr></table></figure><h4 id="表名的重命名"><a class="markdownIt-Anchor" href="#表名的重命名"></a> 表名的重命名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rename 旧表名 to 新表名;</span><br><span class="line">rename t1 to t2;</span><br></pre></td></tr></table></figure><h4 id="删除表"><a class="markdownIt-Anchor" href="#删除表"></a> 删除表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">drop table 表名;       --删除的表可以闪回</span><br><span class="line">drop table 表名 purge; --purge的作用删除不经过回收站, 删除的表不可以闪回</span><br><span class="line"></span><br><span class="line">drop table tbl;       --删除的表可以闪回</span><br><span class="line">drop table tbl purge; --purge的作用删除不经过回收站, 删除的表不可以闪回</span><br></pre></td></tr></table></figure><h4 id="表的闪回删除的表恢复回来"><a class="markdownIt-Anchor" href="#表的闪回删除的表恢复回来"></a> 表的闪回:删除的表恢复回来</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">实现过程: </span><br><span class="line">1 create table tbl(id number, name varchar2(20));</span><br><span class="line">2 drop table tbl;</span><br><span class="line">3 select * from tab;    ---看tname那一列</span><br><span class="line">4 show recyclebin;      ----看ORIGINAL NAME那一列</span><br><span class="line">5 flashback table tbl to before drop;</span><br><span class="line"></span><br><span class="line">假如: drop table tbl purge; 则不能闪回了</span><br><span class="line">   1 drop table tbl purge;</span><br><span class="line">   2 select * from tab;</span><br><span class="line">   3 show recyclebin;</span><br><span class="line">   4 flashback table tbl to before drop;</span><br></pre></td></tr></table></figure><h3 id="表的约束"><a class="markdownIt-Anchor" href="#表的约束"></a> 表的约束:</h3><p>表的约束（5种）：<br>○ 检查 (值是否符合预设的规则)<br>○ 非空 (not null)<br>○ 唯一 (不能重复)<br>○ 主键（非空+唯一）<br>○ 外键 (取值必须在另外一个表中存在)</p><p>如不给约束指定起名，那么oracle会自动给约束起名</p><p>为测试方便, 新建一个表, 与dept一样, 并添加主键(做就要是为了测试外键)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create table dept_bak as select * from dept;</span><br><span class="line">alter table dept_bak add constraint pk_dept_bak primary key (DEPTNO);</span><br></pre></td></tr></table></figure><p>使用约束的例子:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create table student(</span><br><span class="line">id number constraint pk_student primary key,   ---主键(非空唯一)</span><br><span class="line">name varchar2(30)  not null,                   --非空</span><br><span class="line">email varchar2(30) unique,                     --唯一</span><br><span class="line">sex varchar2(10) check(sex in (&apos;男&apos;,&apos;女&apos;)),    --check约束</span><br><span class="line">sal number check(sal&gt;10000),                   --check约束</span><br><span class="line">deptno number(2) references dept_bak(deptno) on delete set null  --当dept_bak表的数据被删除以后, 该列设置为null</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REFERENCES: 标示在父表中的列</span><br><span class="line">ON DELETE CASCADE(级联删除): 当父表中的列被删除时，子表中相对应的列也被删除</span><br><span class="line">ON DELETE SET NULL(级联置空): 子表中相应的列置空</span><br></pre></td></tr></table></figure><p>给hiredate设置默认值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table student add hiredate date default sysdate;</span><br></pre></td></tr></table></figure><p>1 验证主键: 分两方面验证, 非空和唯一</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">先正常插入一条记录: </span><br><span class="line">insert into student(id, name, email, sex, sal, deptno) values(1000, &apos;xiaohong&apos;, &apos;helloworld@163.com&apos;, &apos;女&apos;, &apos;10001&apos;, 10);</span><br><span class="line"></span><br><span class="line">验证主键唯一性: </span><br><span class="line">insert into student(id, name, email, sex, sal, deptno) values(1000, &apos;xiaohong&apos;, &apos;helloworld@163.com&apos;, &apos;女&apos;, &apos;10001&apos;, 10);--报错, 1000与刚刚插入成功的重复了</span><br></pre></td></tr></table></figure><p>验证主键非空:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into student(id, name, email, sex, sal, deptno) values(null, &apos;xiaohong&apos;, &apos;helloworld@163.com&apos;, &apos;女&apos;, &apos;10001&apos;, 10);</span><br></pre></td></tr></table></figure><p>2 验证非空: 使用name来进行验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into student(id, name, email, sex, sal, deptno) values(1001, null, &apos;hello@163.com&apos;, &apos;女&apos;, &apos;10001&apos;, 10);</span><br></pre></td></tr></table></figure><p>3 验证唯一性: 通过email进行验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into student(id, name, email, sex, sal, deptno) values(1001, &apos;xiaoliu&apos;, &apos;helloworld@163.com&apos;, &apos;女&apos;, &apos;10001&apos;, 10);</span><br></pre></td></tr></table></figure><p>4 验证check约束: 使用sex和sal进行验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">insert into student(id, name, email, sex, sal, deptno) values(1001, &apos;xiaoliu&apos;, &apos;xiaofang@163.com&apos;, &apos;无&apos;, &apos;10001&apos;, 10);   </span><br><span class="line">--sex违反check条件,sex只能取&apos;男&apos;,&apos;女&apos;</span><br><span class="line"></span><br><span class="line">insert into student(id, name, email, sex, sal, deptno) values(1001, &apos;xiaoliu&apos;, &apos;xiaoyuan@163.com&apos;, &apos;女&apos;, 9000, 10);    </span><br><span class="line">--sal违反check条件,sal&gt;10000</span><br></pre></td></tr></table></figure><p>5 验证外键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into student(id, name, email, sex, sal, deptno) values(1002, &apos;xiaoliu&apos;, &apos;xiaohua@163.com&apos;, &apos;女&apos;, &apos;10001&apos;, 11);   </span><br><span class="line">---dept表中不存在deptno为11的部门编号</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a--cascade 级联删除, 主表记录删除的时候, 子表数据跟着删除</span><br><span class="line">b--drop table dept_bak cascade constraints;</span><br><span class="line">c--set null  设置为null, 主表删除的时候，子表该字段设为null</span><br><span class="line">d--默认方式, 主表删除的时候, 如果子表引用了该字段的数据, 不能删除, 先删子表, 后删主表</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;创建前提条件：表空间的使用权限和create table的权限&lt;/p&gt;
&lt;p&gt;基本的数据存储集合，由行和列组成。表名和列名遵循如下命名规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须&lt;strong&gt;以字母开头&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;必须在 &lt;strong&gt;1–30&lt;/s
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>事务</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/12/%E4%BA%8B%E5%8A%A1/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/12/事务/</id>
    <published>2022-05-11T22:06:16.000Z</published>
    <updated>2022-05-11T22:19:23.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="11-事务"><a class="markdownIt-Anchor" href="#11-事务"></a> <strong>1.1</strong> 事务</h2><p>数据库事务，是由有限的数据库操作序列组成的逻辑执行单元，这一系列操作要么全部执行，要么全部放弃执行。</p><p>数据库事务由以下的部分组成:</p><p>一个或多个DML语句</p><p>一个 DDL(Data Definition Language – 数据定义语言) 语句</p><p>一个 DCL(Data Control Language – 数据控制语言) 语句</p><p>事务的特点：要么都成功，要么都失败。</p><h3 id="事务的特性"><a class="markdownIt-Anchor" href="#事务的特性"></a> 事务的特性</h3><p>事务4大特性(ACID) ：原子性、一致性、隔离性、持久性。</p><p>​原子性 (Atomicity)：事务中的全部操作在数据库中是不可分割的，要么全部完成，要么均不执行。</p><p>​一致性 (Consistency)：几个并行执行的事务，其执行结果必须与按某一顺序串行执行的结果相一致。</p><p>​隔离性 (Isolation)：事务的执行不受其他事务的干扰，当数据库被多个客户端并发访问时，隔离它们的操作，防止出现：脏读、幻读、不可重复读。</p><p>​持久性 (Durability)：对于任意已提交事务，系统必须保证该事务对数据库的改变不被丢失，即使数据库出现故障。</p><p>事务的起始标志：Oracle中自动开启事务，以DML语句为开启标志。</p><p>​执行一个增删改查语句，只要没有提交commit和回滚rollback，操作都在一个事务中。</p><p>事务的结束标志：提交、回滚都是事务的结束标志。</p><p>​提交：显示提交：commit</p><p>​隐式提交：1. 有DDL语句，如：create table除了创建表之外还会隐式提交Create之前所有没有提交的DML语句。 2. 正常退出(exit / quit)</p><p>​回滚：显示回滚：rollback</p><p>​隐式回滚：掉电、宕机、非正常退出。</p><h3 id="控制事务"><a class="markdownIt-Anchor" href="#控制事务"></a> 控制事务</h3><p>savepoint</p><p>​保存点（savepoint）可以防止错误操作影响整个事务，方便进行事务控制。</p><p><img src="/images/javawz/wpsE205.tmp.jpg" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">【示例】：1. SQL&gt; create table testsp ( tid number, tname varchar2(20));  DDL语句会隐式commit之前操作</span><br><span class="line"> 2. set feedback on      打开回显</span><br><span class="line"> 3. insert into testsp values(1, &apos;Tom&apos;)      </span><br><span class="line"> 4. insert into testsp values(2, &apos;Mary&apos;)      </span><br><span class="line"> 5. savepoint aaa    </span><br><span class="line"> 6. insert into testsp values(3, &apos;Moke&apos;) 故意将“Mike”错写成“Moke”。</span><br><span class="line"> 7. select * from testsp 三条数据都显示出来。</span><br><span class="line"> 8. rollback to savepoint aaa 回滚到保存点aaa</span><br><span class="line"> 9. select * from testsp 发现表中的数据保存到第二条操作结束的位置</span><br><span class="line">需要注意，前两次的操作仍然没有提交。如操作完成应该显示的执行 commit 提交。</span><br><span class="line"></span><br><span class="line">savepoint主要用于在事务上下文中声明一个中间标记，将一个长事务分隔为多个较小的部分，和我们编写文档时，习惯性保存一下一样，都是为了防止出错和丢失。如果保存点设置名称重复，则会删除之前的那个保存点。一旦commit之后，savepoint将失效。</span><br></pre></td></tr></table></figure><p>事物的隔离级别: 了解oracle是读已提交数据, mysql是可重复读.</p><p>保存点:使用保存点的目的是把一个大的事物分成几段进行保存,<br>类似于编写word文档的时候使用ctrl+s分段保存.</p><h4 id="以实验的方式说明保存点的作用"><a class="markdownIt-Anchor" href="#以实验的方式说明保存点的作用"></a> 以实验的方式说明保存点的作用:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">create table testsp (tid number, tname varchar2(20)); </span><br><span class="line">   insert into testsp values(1, &apos;Tom&apos;);</span><br><span class="line">insert into testsp values(2, &apos;Mary&apos;);</span><br><span class="line">savepoint aaa;</span><br><span class="line">insert into testsp values(3, &apos;Moke&apos;);</span><br><span class="line">savepoint bbb;</span><br><span class="line">update testsp set tname=&apos;tomson&apos; where tid=1;</span><br><span class="line">delete from testsp where tid=1;</span><br><span class="line">rollback to savepoint bbb;</span><br><span class="line">SQL&gt; select * from testsp;</span><br><span class="line"></span><br><span class="line">       TID TNAME</span><br><span class="line">---------- --------------------</span><br><span class="line">         1 Tom</span><br><span class="line">         2 Mary</span><br><span class="line">         3 Moke</span><br><span class="line">rollback to savepoint aaa;--此时不能再回退到bbb</span><br><span class="line"></span><br><span class="line">rollback ;--事务结束</span><br><span class="line">select * from testsp;</span><br><span class="line">**说明: 当执行commit或者rollback后保存点就会全部无效了.</span><br></pre></td></tr></table></figure><h3 id="隔离级别"><a class="markdownIt-Anchor" href="#隔离级别"></a> 隔离级别</h3><p>对于同时运行的多个事务, 当这些事务访问数据库中相同的数据时, 如果没有采取必要的隔离机制, 就会导致各种并发问题:</p><p><strong>•</strong> <strong>脏读</strong>: 对于两个事物 T1, T2, T1 读取了已经被 T2 更新但还没有被提交的字段. 之后, 若 T2 回滚, T1读取的内容就是临时且无效的.</p><p><strong>•</strong> <strong>不可重复读</strong>: 对于两个事物 T1, T2, T1 读取了一个字段, 然后 T2 <strong>更新</strong>了该字段. 之后, T1再次读取同一个字段, 值就不同了.</p><p><strong>•</strong> <strong>幻读</strong>: 对于两个事物 T1, T2, T1 从一个表中读取了一个字段, 然后 T2 在该表中<strong>插入</strong>了一些新的行. 之后, 如果 T1 再次读取同一个表, 就会多出几行.</p><p>数据库事务的隔离性: 数据库系统必须具有隔离并发运行各个事务的能力, 使它们不会相互影响, 避免各种并发问题.</p><p>一个事务与其他事务隔离的程度称为隔离级别. 数据库规定了多种事务隔离级别, 不同隔离级别对应不同的干扰程度, 隔离级别越高, 数据一致性就越好, 但并发性越弱</p><p>​</p><p>SQL99定义4中隔离级别：</p><p>​1. Read Uncommitted读未提交数据。(人家还没有提交你就查到了,一般不允许这样的)</p><ol start="2"><li><p>Read Commited读已提交数据。（Oracle默认）</p><pre><code> 3.Repeatable Read可重复读。（MySQL默认） 4.Serializable序列化、串行化。 （查询也要等前一个事务结束）</code></pre></li></ol><p>这4种MySQL都支持</p><p>Oracle支持的隔离级别： Read Commited（默认）和 Serializable，以及Oracle自定义的Read Only三种。</p><p>Read Only：由于大多数情况下，在事务操作的过程中，不希望别人也来操作，但是如果将别人的隔离级别设置为Serializable（串行），但是单线程会导致数据库的性能太差。是应该允许别人来进行read操作的。</p><h4 id="这是两个事务"><a class="markdownIt-Anchor" href="#这是两个事务"></a> 这是两个事务</h4><p><img src="/images/javawz/image-20220512061906975.png" alt="image-20220512061906975"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;11-事务&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-事务&quot;&gt;&lt;/a&gt; &lt;strong&gt;1.1&lt;/strong&gt; 事务&lt;/h2&gt;
&lt;p&gt;数据库事务，是由有限的数据库操作序列组成的逻辑执行单元，这一系列操作要么全部执行，要么全部
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>数据处理</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/12/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/12/数据处理/</id>
    <published>2022-05-11T20:41:56.000Z</published>
    <updated>2022-05-11T21:41:33.297Z</updated>
    
    <content type="html"><![CDATA[<h3 id="sql语言的类型"><a class="markdownIt-Anchor" href="#sql语言的类型"></a> sql语言的类型</h3><p>​  DML data manipulation language  数据操作语言，对应增删改查<br>​  DDL  data definition language  数据定义语言 create, drop, truncate<br>​  DCL  data control language 数据控制语言 grant, revoke, commit, rollback</p><ol><li>数据库中，称呼增删改查，为DML语句。(Data Manipulation Language 数据操纵语言)，就是指代：</li></ol><p>​insert、update、delete、select这四个操作。</p><ol start="2"><li>DDL语句。(Data Definition Language 数据定义语言)。如：truncate table(截断/清空 一张表)</li></ol><p>​create table(表)、create view(视图)、create index(索引)、create sequence(序列)、</p><p>​create synonym(同义词)、alter table、drop table。</p><ol start="3"><li>DCL语句。DCL（Data Control Language数据控制语言）如：</li></ol><p>​commit(提交)、rollback(回滚)</p><h3 id="dml语句"><a class="markdownIt-Anchor" href="#dml语句"></a> DML语句:</h3><h4 id="插入和拷贝"><a class="markdownIt-Anchor" href="#插入和拷贝"></a> 插入和拷贝</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1 insert语句: </span><br><span class="line">insert into tablename[col1,…] values(val1,…);</span><br><span class="line"></span><br><span class="line">   --插入全部列</span><br><span class="line">  insert into dept values(51,&apos;51name&apos;,&apos;51loc&apos;);</span><br><span class="line">  插入所有的数据时,列名可以不写</span><br><span class="line"></span><br><span class="line">--插入部分列</span><br><span class="line">insert into dept(deptno, dname) values(55, &apos;55name&apos;);</span><br><span class="line">  </span><br><span class="line">--隐式插入null</span><br><span class="line">insert into dept(deptno,dname) values(52,&apos;52name&apos;);</span><br><span class="line"></span><br><span class="line">--显示插入null</span><br><span class="line">insert into dept(deptno,dname,loc) values(53,&apos;53name&apos;,null);</span><br><span class="line">    </span><br><span class="line">    --&amp;符号的使用:</span><br><span class="line">      insert into dept(deptno, dname, loc) values(&amp;t1, &amp;t2, &amp;t3);</span><br><span class="line">      </span><br><span class="line">    拷贝表结构:</span><br><span class="line">       create table tname_YYYY_MM_DD as select * from tname_xxxxx where 1=2;   ---where条件为假, 之拷贝表结构</span><br><span class="line">    </span><br><span class="line">    批量插入:</span><br><span class="line">      insert into tname_bak select * from tname where .....;</span><br></pre></td></tr></table></figure><h4 id="修改"><a class="markdownIt-Anchor" href="#修改"></a> 修改</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">2 update语句: update tablename set col1=val1, col2=val where  cond;</span><br><span class="line">      --修改emp表的员工名字为TOM_CAT的员工的薪水为原有薪水加100</span><br><span class="line">        update emp set sal=sal+100 where ename=&apos;TOM_CAT&apos;;</span><br><span class="line">      </span><br><span class="line">      --修改emp表的员工名字为TOM_CAT的员工的薪水为原有薪水加空</span><br><span class="line">        update emp set sal=null where ename=&apos;TOM_CAT&apos;;</span><br><span class="line">      **注意: 在update的时候, null可以使用等号</span><br><span class="line">      **注意: 在update的时候, 一定要使用where条件, 否则会修改表中所有的记录</span><br></pre></td></tr></table></figure><h4 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">  3 delete语句: delete from tablename where cond;</span><br><span class="line">     delete from emp where ename=&apos;TOM_CAT&apos;;</span><br><span class="line">     delete from dept where ename = &amp;dpt;</span><br><span class="line">     **注意: 在使用delete删除的时候一定要有where条件, 否则会删除整个表的记录</span><br><span class="line">     </span><br><span class="line">  truncate table 表名;  删除表中所有数据,不可恢复</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"> --delete和truncate的区别: </span><br><span class="line">   1. delete逐条删除表&quot;内容&quot;, truncate先摧毁表再重建。</span><br><span class="line">(由于delete使用频繁，Oracle对delete优化后delete快于truncate)</span><br><span class="line"></span><br><span class="line">2. delete 是DML语句, truncate是DDL语句</span><br><span class="line">DML语句可以闪回(flashback), DDL语句不可以闪回</span><br><span class="line">   （闪回:做错了一个操作并且commit了, 对应的撤销行为）</span><br><span class="line"></span><br><span class="line">3. 由于delete是逐条操作数据，所以delete会产生碎片，truncate不会产生碎片。</span><br><span class="line">（同样是由于Oracle对delete进行了优化, 让delete不产生碎片）。</span><br><span class="line">两个数据之间的数据被删除, 删除的数据——碎片, 整理碎片, 数据连续, 行移动</span><br><span class="line"></span><br><span class="line">4. delete不会释放空间, truncate会释放空间</span><br><span class="line">用delete删除一张10M的表, 空间不会释放。而truncate会。所以当确定表不再使用，应truncate</span><br><span class="line"></span><br><span class="line">5. delete可以回滚rollback, truncate不可以回滚rollback</span><br><span class="line"></span><br><span class="line">实验验证一些delete和truncate</span><br><span class="line">通过实验比较, truncate删除的效率比delete快.</span><br><span class="line">打开时间回显: SQL&gt; set timing on;</span><br><span class="line">关闭时间回显: SQL&gt; set timing off;</span><br></pre></td></tr></table></figure><h4 id="批量插入"><a class="markdownIt-Anchor" href="#批量插入"></a> 批量插入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">start 脚本名.sql</span><br><span class="line">或</span><br><span class="line">@ 脚本名.sql</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;sql语言的类型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sql语言的类型&quot;&gt;&lt;/a&gt; sql语言的类型&lt;/h3&gt;
&lt;p&gt;​		  DML data manipulation language  数据操作语言，对应增删改查&lt;br&gt;
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>集合运算</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/12/%E9%9B%86%E5%90%88%E8%BF%90%E7%AE%97/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/12/集合运算/</id>
    <published>2022-05-11T19:54:37.000Z</published>
    <updated>2022-05-11T20:04:20.147Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javawz/wps20B9.tmp.jpg" alt="img"></p><p>​union 两个集合相同的部分保留一份<br>​union all 两个集合相同的部分都保留<br>​intersect 两个集合交集只保留相同的部分<br>​minus  集合A-集合B，减去A和B都有的部分, 保留A中与B不同的部分<br>​</p><pre><code>select * from emp where deptno = 10 union select * from emp where deptno=20;select * from emp where deptno = 10 union select * from emp where deptno in(20,10);select * from emp where deptno = 10 union all select * from emp where deptno in(20,10);select * from emp where deptno = 10 intersect select * from emp where deptno in(20,10);select * from emp where deptno in(10,30) minus  select * from emp where deptno in(20,10);总结: 使用集合运算要保证列数一样多, 前后的列的类型要一致</code></pre><h2 id="11-集合运算需要注意的问题"><a class="markdownIt-Anchor" href="#11-集合运算需要注意的问题"></a> <strong>1.1</strong> 集合运算需要注意的问题：</h2><ol><li><p>参与运算的各个集合必须列数相同，且类型一致。</p></li><li><p>采用第一个集合的表头作为最终使用的表头。(别名也只能在第一个集合上起)</p></li><li><p>可以使用括号()先执行后面的语句。</p></li></ol><p>问题：按照部门统计各部门不同工种的工资情况，要求按如下格式输出：</p><p><img src="../../themes/pure/source/images/javawz/wps9A70.tmp.jpg" alt="img"></p><p>分析SQL执行结果。</p><p>​第一部分数据是按照deptno和job进行分组；select 查询deptno、job、sum(sal)</p><p>​第二部分数据是直接按照deptno分组即可，与job无关；select 只需要查询deptno，sum(sal)</p><p>​第三部分数据不按照任何条件分组，即group by null；select 查询sum(sal)</p><p>所以，整体查询结果应该=  group by deptno，job  +  group by deptno  +  group by null</p><p>​按照集合的要求,必须列数相同,类型一致,所以写法如下,使用null强行占位!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select deptno,job,sum(sal) from emp group by deptno,job</span><br><span class="line">union</span><br><span class="line">select deptno,to_char(null),sum(sal) from emp group by deptno</span><br><span class="line">union</span><br><span class="line">select to_number(null),to_char(null),sum(sal) from emp;</span><br></pre></td></tr></table></figure><p>需要注意:集合运算的性能一般较差.</p><h3 id="sql的执行时间"><a class="markdownIt-Anchor" href="#sql的执行时间"></a> SQL的执行时间：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set timing on/off默认是off</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/javawz/wps20B9.tmp.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;​	union 两个集合相同的部分保留一份&lt;br&gt;
​	union all 两个集合相同的部分都保留&lt;br&gt;
​	intersect 两个集合交集只保留相
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>笛卡尔积的概念</title>
    <link href="https://xiaowuyoucy.github.io/2022/05/12/%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF%E7%9A%84%E6%A6%82%E5%BF%B5/"/>
    <id>https://xiaowuyoucy.github.io/2022/05/12/笛卡尔积的概念/</id>
    <published>2022-05-11T19:10:45.000Z</published>
    <updated>2022-05-11T19:55:20.425Z</updated>
    
    <content type="html"><![CDATA[<p>​笛卡尔集的行数 = table1的行数 x table2的行数</p><p>​笛卡尔集的列数 = table1的列数 + table2的列数</p><p><img src="/images/javawz/wps32C0.tmp.jpg" alt="img"></p><p>在操作笛卡尔集的时候，应该避免使用“笛卡尔全集”，因为里面含有大量错误信息。</p><p><img src="/images/javawz/wps69EE.tmp.png" alt="img"></p><p>多表查询就是按照给定条件(连接条件)，从笛卡尔全集中选出正确的结果。</p><p>笛卡尔积的数据集合中有一些是无效的数据, 需要进行过滤,</p><p>对于有2个表的的笛卡尔积, 需要一个条件, 对于n个表需要n-1个条件.</p><p>对于多表查询, 首先会生成笛卡尔积, 笛卡尔积里面会有无效的数据, 此时需要过滤筛选.</p><h3 id="等值连接结合笛卡尔积讲解"><a class="markdownIt-Anchor" href="#等值连接结合笛卡尔积讲解"></a> 等值连接(结合笛卡尔积讲解)</h3><h4 id="查询员工信息员工号-姓名-月薪emp和部门名称dept"><a class="markdownIt-Anchor" href="#查询员工信息员工号-姓名-月薪emp和部门名称dept"></a> 查询员工信息：员工号 姓名 月薪(emp)和部门名称(dept)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">分析: </span><br><span class="line">员工号 姓名 月薪 这三个字段在emp表中, 部门名称在dept表中</span><br><span class="line">select e.empno, e.ename, e.sal, d.dname from emp e, dept d where e.deptno=d.deptno;</span><br></pre></td></tr></table></figure><h3 id="不等值连接结合笛卡尔积讲解"><a class="markdownIt-Anchor" href="#不等值连接结合笛卡尔积讲解"></a> 不等值连接(结合笛卡尔积讲解)</h3><p>查询员工信息：员工号 姓名 月薪(emp) 和 薪水级别(salgrade表)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select e.empno, e.ename, e.sal, s.grade from emp e, salgrade s where e.sal between s.losal and s.hisal;</span><br></pre></td></tr></table></figure><p>按部门统计员工人数, 显示如下信息： 部门号 部门名称 人数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select d.deptno, d.dname, count(e.empno) from emp e, dept d where e.deptno=d.deptno group by d.deptno, d.dname;</span><br><span class="line">部门表中40号部门没有被统计上, 如何将40号部门也统计上呢???</span><br></pre></td></tr></table></figure><h4 id="右外连接"><a class="markdownIt-Anchor" href="#右外连接"></a> 右外连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select d.deptno, d.dname, count(e.empno) from emp e, dept d where e.deptno(+)=d.deptno group by d.deptno, d.dname;</span><br></pre></td></tr></table></figure><h4 id="解释一下count和counteempno的区别"><a class="markdownIt-Anchor" href="#解释一下count和counteempno的区别"></a> 解释一下count(*)和count(e.empno)的区别</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">count(*): 只要一行中有一个字段不为空就被统计上</span><br><span class="line">count(e.empno): 只有e.empno不为空才会被统计上</span><br></pre></td></tr></table></figure><h4 id="左外连接"><a class="markdownIt-Anchor" href="#左外连接"></a> 左外连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select d.deptno, d.dname, count(e.empno) from emp e, dept d where d.deptno=e.deptno(+) group by d.deptno, d.dname;</span><br></pre></td></tr></table></figure><h3 id="自连接"><a class="markdownIt-Anchor" href="#自连接"></a> 自连接</h3><p>查询员工信息：xxx的老板是 yyy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">分析: emp表中的mgr列表示员工的老板的员工编号, 可以将emp表分别看做员工表和老板表, 员工表的老板是老板表的员工:</span><br><span class="line"></span><br><span class="line">select e.ename || &apos; 的老板是 &apos; ||  nvl(b.ename, &apos; HIS WIFE&apos;) from emp e, emp b where e.mgr=b.empno(+);</span><br></pre></td></tr></table></figure><h3 id="子查询sql嵌套sql"><a class="markdownIt-Anchor" href="#子查询sql嵌套sql"></a> 子查询(sql嵌套sql)</h3><h4 id="查询比scott工资高的员工信息"><a class="markdownIt-Anchor" href="#查询比scott工资高的员工信息"></a> 查询比SCOTT工资高的员工信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">分析: 可以分两部查找,</span><br><span class="line">   第一步: 查找SCOTT的工资</span><br><span class="line">   select sal from emp where ename = &apos;SCOTT&apos;;  ---3000.00</span><br><span class="line"></span><br><span class="line">   第二步: 将上一步得到的结果作为第二部查询的条件</span><br><span class="line">select * from emp where sal&gt;3000;</span><br><span class="line">   </span><br><span class="line">   可以使用子查询方法将两步合成一步: </span><br><span class="line">select * from emp where sal&gt;(select sal from emp where ename = &apos;SCOTT&apos;);</span><br></pre></td></tr></table></figure><h4 id="关于子查询的10点注意事项"><a class="markdownIt-Anchor" href="#关于子查询的10点注意事项"></a> 关于子查询的10点注意事项:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">1  合理的书写风格 (如上例，当写一个较复杂的子查询的时候，要合理的添加换行、缩进), 可以借助PL/SQL Developer工具</span><br><span class="line">2  使用小括号</span><br><span class="line">3  主查询和子查询可以是不同表，只要子查询返回的结果主查询可以使用即可</span><br><span class="line">   --查询部门名称是&quot;SALES&quot;的员工信息:</span><br><span class="line">     分析: 部门名称在dept表中, dept表与emp表是通过deptno联系在一起的.</span><br><span class="line">     --使用子查询</span><br><span class="line">    select * from emp where deptno=(select deptno from dept where dname=&apos;SALES&apos;);</span><br><span class="line">    --使用多表查询</span><br><span class="line">       select e.* from emp e, dept d where e.deptno=d.deptno and d.dname=&apos;SALES&apos;;</span><br><span class="line">       </span><br><span class="line">4 可以在主查询的where、select、having、from后都可以放置子查询</span><br><span class="line">     a 在select后使用子查询的情况: </span><br><span class="line">       查询10号部门员工号, 员工姓名, 部门编号, 部门名称</span><br><span class="line">       select e.empno, e.ename, e.deptno,(select dname from dept where deptno=10) from emp e where e.deptno=10;</span><br><span class="line">   注意点: 在select后面使用子查询必须保证子查询结果只返回一条记录.</span><br><span class="line">     </span><br><span class="line">     b 在having后面使用子查询的情况:</span><br><span class="line">       查询部门平均工资高于30号部门平均工资的部门和平均工资</span><br><span class="line">       1 先查询30号部门的平均工资</span><br><span class="line">        select avg(sal) from emp where deptno=30;</span><br><span class="line">       2 查询每个部门的平均工资</span><br><span class="line">         select deptno, avg(sal) from emp group by deptno;</span><br><span class="line">       3  </span><br><span class="line">        select deptno, avg(sal)</span><br><span class="line">  from emp</span><br><span class="line"> group by deptno</span><br><span class="line">having avg(sal) &gt; (select avg(sal) from emp where deptno = 30);</span><br><span class="line"></span><br><span class="line">5 不可以在主查询的group by后面放置子查询 (SQL语句的语法规范)</span><br><span class="line"></span><br><span class="line">6 强调：在from后面放置的子查询(***), from后面放置是一个集合(表、查询结果)</span><br><span class="line"></span><br><span class="line">7 单行子查询只能使用单行操作符, 多行子查询只能使用多行操作符(前面的&gt; &lt; = 都是单行操作符, 接下来说的是多行操作符)</span><br><span class="line">  多行操作符有 IN  ANY(任意一个)  ALL （所有）</span><br><span class="line">  </span><br><span class="line">  --查询部门名称为SALES和ACCOUNTING的员工信息</span><br><span class="line">select * from emp where deptno in (select deptno from dept where dname in (&apos;SALES&apos;, &apos;ACCOUNTING&apos;));</span><br><span class="line"></span><br><span class="line">    --查询薪水比30号部门任意一个(某一个 ANY )员工高的员工信息</span><br><span class="line">select * from emp where sal &gt;(select min(sal) from emp where deptno=30);</span><br><span class="line">select * from emp where sal &gt;(select sal from emp where deptno=30); --错误</span><br><span class="line">    select * from emp where sal &gt;any(select sal from emp where deptno=30);</span><br><span class="line">    </span><br><span class="line">    --查询比30号部门所有人工资高的员工信息</span><br><span class="line">    select * from emp where sal&gt;(select max(sal) from emp where deptno=30);</span><br><span class="line">select * from emp where sal&gt;all(select sal from emp where deptno=30);</span><br><span class="line">  </span><br><span class="line">  8 一般不在子查询中使用order by, 但在Top-N分析问题中，必须使用order by  </span><br><span class="line">  </span><br><span class="line">  9 一般先执行子查询(内查询)，再执行主查询(外查询)；但是相关子查询除外</span><br><span class="line">  </span><br><span class="line">  10 子查询中的null值</span><br><span class="line">    --查询不是老板的员工信息</span><br><span class="line">      分析: 可以先查询谁是老板</span><br><span class="line">      select distinct mgr from emp;</span><br><span class="line">      select * from emp where empno not in (select distinct mgr from emp);</span><br><span class="line">      </span><br><span class="line">      select * from emp where empno not in (select distinct mgr from emp where mgr is not null);</span><br><span class="line"></span><br><span class="line">      总结: not in 后面集合中不能出现null</span><br><span class="line">      empno not in(a, b, null)---&gt; empno!=a and empno!=b and empno!=null;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">思考题?</span><br><span class="line">        查询员工的姓名、薪水和年薪?  select * from ____________;</span><br><span class="line">        select * from (select ename, sal, sal*12 from emp);</span><br><span class="line">        总结: 可以将查询的结果集当成一张表来使用.</span><br><span class="line">               也就是说, from后面既可以是表名, 也可以是select查询的结果集.</span><br><span class="line">   </span><br><span class="line">            </span><br><span class="line">     c 在where后使用子查询的情况:</span><br><span class="line">       --查询比平均工资高的员工的信息?</span><br><span class="line">       1 查询平均工资</span><br><span class="line">       select avg(sal) from emp;</span><br><span class="line">       2 select * from emp where sal&gt;2073;</span><br><span class="line">       合成一步:</span><br><span class="line">       select * from emp where sal&gt;(select avg(sal) from emp);</span><br><span class="line">       </span><br><span class="line">         </span><br><span class="line">        d 在having后使用子查询的情况:</span><br><span class="line">          --查询最低薪水高于30号部门最低薪水的部门及其最低薪水</span><br><span class="line">            1 先得到30部门的最低薪水</span><br><span class="line">               select min(sal) from emp where deptno=30;  --950</span><br><span class="line">            2 得到各个部门的最低薪水</span><br><span class="line">            select deptno, min(sal) from emp group by deptno;</span><br><span class="line">            3 使用条件进行过滤</span><br><span class="line">      select deptno, min(sal)</span><br><span class="line">  from emp</span><br><span class="line"> group by deptno</span><br><span class="line">having min(sal) &gt; 950;</span><br><span class="line">             </span><br><span class="line">            将三步合并写成: </span><br><span class="line">                select deptno, min(sal)</span><br><span class="line">  from emp</span><br><span class="line"> group by deptno</span><br><span class="line">having min(sal) &gt; (select min(sal) from emp where deptno = 30);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​	笛卡尔集的行数 = table1的行数 x table2的行数&lt;/p&gt;
&lt;p&gt;​	笛卡尔集的列数 = table1的列数 + table2的列数&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/javawz/wps32C0.tmp.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p
      
    
    </summary>
    
      <category term="数据库" scheme="https://xiaowuyoucy.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
</feed>
