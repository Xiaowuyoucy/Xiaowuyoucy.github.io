<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanChen</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaowuyoucy.github.io/"/>
  <updated>2020-02-07T19:35:14.584Z</updated>
  <id>https://xiaowuyoucy.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>两个数组的内存图</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00013%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00013两个数组的内存图/</id>
    <published>2020-02-07T19:28:56.000Z</published>
    <updated>2020-02-07T19:35:14.584Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test012</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];<span class="comment">//创建一个包含三个元素的array1数组</span></span><br><span class="line">        System.out.println(array1);<span class="comment">//打印array1的地址</span></span><br><span class="line">        array1[<span class="number">1</span>] = <span class="number">2</span>;<span class="comment">//修改array1[1]的值</span></span><br><span class="line">        array1[<span class="number">2</span>] = <span class="number">100</span>;<span class="comment">//修改array1[2]的值</span></span><br><span class="line">        <span class="keyword">int</span>[] array2 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];<span class="comment">//创建一个包含三个元素的array2数组</span></span><br><span class="line">        System.out.println(array2);<span class="comment">//打印array2的地址</span></span><br><span class="line">        array2[<span class="number">1</span>] = <span class="number">300</span>;<span class="comment">//修改array2[1]的值</span></span><br><span class="line">        array2[<span class="number">2</span>] = <span class="number">25</span>;<span class="comment">//修改array2[2]的值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/javawz/00002.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>一个数组的内存图</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00012%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00012一个数组的内存图/</id>
    <published>2020-02-07T18:51:11.000Z</published>
    <updated>2020-02-07T18:55:45.444Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test011</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];<span class="comment">//从堆区创建一个包含三个元素的数组</span></span><br><span class="line"></span><br><span class="line">        System.out.println(array);</span><br><span class="line"></span><br><span class="line">        array[<span class="number">1</span>] = <span class="number">2</span>; <span class="comment">//从堆区把array[1]的值修改成2</span></span><br><span class="line"></span><br><span class="line">        array[<span class="number">2</span>] = <span class="number">200</span>;<span class="comment">//从堆区把array[2]的值修改成100</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/javawz/00001.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>Java中的内存划分</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/07/java00011Java%E4%B8%AD%E7%9A%84%E5%86%85%E5%AD%98%E5%88%92%E5%88%86/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/07/java00011Java中的内存划分/</id>
    <published>2020-02-07T15:10:32.000Z</published>
    <updated>2020-02-07T15:42:07.946Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java的内存需要划分成为5个部分"><a class="markdownIt-Anchor" href="#java的内存需要划分成为5个部分"></a> Java的内存需要划分成为5个部分</h2><h4 id="1span-style-colorred栈stackspan-存放的都是方法中的局部变量-方法的运行一定要在栈当中运行"><a class="markdownIt-Anchor" href="#1span-style-colorred栈stackspan-存放的都是方法中的局部变量-方法的运行一定要在栈当中运行"></a> 1.<span style="color:red;">栈（Stack）</span>: 存放的都是方法中的局部变量。方法的运行一定要在栈当中运行。</h4><p>   局部变量：方法的参数，或者是方法{}内部的变量</p><p>   作用域：一但超出作用域，立刻从栈内存中消失。</p><h4 id="2span-style-colorred堆heap凡是new出来的内存都在堆区中-span"><a class="markdownIt-Anchor" href="#2span-style-colorred堆heap凡是new出来的内存都在堆区中-span"></a> 2.<span style="color:red;">堆（Heap）：凡是new出来的内存，都在堆区中。</span></h4><p>     堆内存里面的内存都有一个内存地址值：16进制</p><p>     堆内存里面的数据，都有默认值。规则：</p><p>     如果是整数           默认值为0</p><p>     如果是浮点数          默认值为0.0</p><p>     如果是字符           默认值为‘\u0000’</p><p>     如果是布尔           默认值为false</p><p>     如果是引用类型    默认值为null</p><h4 id="3span-style-colorred方法区method-areaspan存储class相关的信息包含方法的信息"><a class="markdownIt-Anchor" href="#3span-style-colorred方法区method-areaspan存储class相关的信息包含方法的信息"></a> 3.<span style="color:red;">方法区（Method Area）</span>：存储.class相关的信息，包含方法的信息</h4><h4 id="4span-style-colorred本地方法栈native-method-stackspan与操作系统相关"><a class="markdownIt-Anchor" href="#4span-style-colorred本地方法栈native-method-stackspan与操作系统相关"></a> 4.<span style="color:red;">本地方法栈（Native Method Stack）</span>：与操作系统相关。</h4><h4 id="5span-style-colorred寄存器pc-registerspan与cpu相关"><a class="markdownIt-Anchor" href="#5span-style-colorred寄存器pc-registerspan与cpu相关"></a> 5.<span style="color:red;">寄存器（PC Register）</span>：与CPU相关。</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;java的内存需要划分成为5个部分&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#java的内存需要划分成为5个部分&quot;&gt;&lt;/a&gt; Java的内存需要划分成为5个部分&lt;/h2&gt;
&lt;h4 id=&quot;1span-style-colorred栈s
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/06/java00010%E6%95%B0%E7%BB%84/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/06/java00010数组/</id>
    <published>2020-02-05T21:39:02.000Z</published>
    <updated>2020-02-07T11:50:26.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h1><h4 id="数组的概念"><a class="markdownIt-Anchor" href="#数组的概念"></a> 数组的概念</h4><p>​数组是引用数据类型<br>​类型要统一<br>​数组的长度在运行期间不可以改变</p><h4 id="初始化"><a class="markdownIt-Anchor" href="#初始化"></a> 初始化</h4><h5 id="动态初始化指定长度"><a class="markdownIt-Anchor" href="#动态初始化指定长度"></a> 动态初始化（指定长度）</h5><p>​数据类型[] 数组名称 = new 数据类型[数组长度]</p><p>​使用动态初始化数组的时候,其中的元素将会自动拥有一个默认值.规则如下:</p><ol><li>如果是整数类型,那么默认值为0;</li><li>如果是浮点类型,那么默认值为0.0;</li><li>如果是字符类型,那么默认值为’\u0000’ u代表Unicode ,0000代表十六进制数;</li><li>如果是布尔类型,那么默认值为false;</li><li>如果是引用类型,那么默认值为null(空常量);</li></ol><h5 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h5><p>静态初始化其实也有默认值的过程,只不过系统自动马上将默认值替换成为了大括号当中的具体数值.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arr1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line">        System.out.println(arr1[<span class="number">0</span>]);<span class="comment">//默认值为0;</span></span><br><span class="line">        System.out.println(arr1[<span class="number">1</span>]);<span class="comment">//默认值为0;</span></span><br><span class="line">        System.out.println(arr1[<span class="number">2</span>]);<span class="comment">//默认值为0;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*数组赋值*/</span></span><br><span class="line">        arr1[<span class="number">1</span>] = <span class="number">100</span>;</span><br><span class="line">        System.out.println(arr1[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="拆分格式"><a class="markdownIt-Anchor" href="#拆分格式"></a> 拆分格式</h5><ol><li><h4 id="数据类型-数组名"><a class="markdownIt-Anchor" href="#数据类型-数组名"></a> 数据类型[] 数组名;</h4><ol><li>数组名 = new 数据类型名[]{元素1,元素2,…}</li><li>数组名 = new  数据类型名[长度];</li></ol></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arr;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">10</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        <span class="comment">//arr = new int[10];</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="静态初始化指定内容"><a class="markdownIt-Anchor" href="#静态初始化指定内容"></a> 静态初始化(指定内容)</h4><p>​数据类型[] 数组名 = new 数据类型[] {元素1,元素2,…,元素n};</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public class test010 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">    </span><br><span class="line">    int[] arr = new int[]&#123;1,2,3,4&#125;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="省略格式"><a class="markdownIt-Anchor" href="#省略格式"></a> 省略格式</h5><p>​数据类型[] 数组名 = {元素1,元素2,…,元素n};</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="拆分格式-2"><a class="markdownIt-Anchor" href="#拆分格式-2"></a> 拆分格式</h5><p>​不能再用省略格式<br>​数据类型[] 数组名;<br>​数组名 = new 数据类型名[]{元素1,元素2,…}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[] arr;</span><br><span class="line">arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="访问数组元素"><a class="markdownIt-Anchor" href="#访问数组元素"></a> 访问数组元素</h4><p>​直接打印数组名,会打印数组内存地址哈希值<br>​格式 :   数组名[索引值]<br>​索引值从0开始到数组长度-1结束</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[] arr;</span><br><span class="line">arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">System.out.println(arr);<span class="comment">//打印数组内存地址哈希值</span></span><br><span class="line">System.out.println(arr[<span class="number">0</span>]);<span class="comment">//使用数组下标访问数组元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length;i++)<span class="comment">//数组下标不大于数组的长度</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数组&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组&quot;&gt;&lt;/a&gt; 数组&lt;/h1&gt;
&lt;h4 id=&quot;数组的概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组的概念&quot;&gt;&lt;/a&gt; 数组的概念&lt;/h4&gt;
&lt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>方法定义和使用</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/06/java00009%E6%96%B9%E6%B3%95%E5%AE%9A%E4%B9%89%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/06/java00009方法定义和使用/</id>
    <published>2020-02-05T21:13:51.000Z</published>
    <updated>2020-02-05T21:34:04.363Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h3><h4 id="方法定义"><a class="markdownIt-Anchor" href="#方法定义"></a> 方法定义</h4><p>​以public static开头<br>​public static 类型 方法名()<br>​{</p><p>​}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//语句块</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法的三种调用格式"><a class="markdownIt-Anchor" href="#方法的三种调用格式"></a> 方法的三种调用格式</h4><h5 id="单独调用"><a class="markdownIt-Anchor" href="#单独调用"></a> 单独调用</h5><p>​方法名（[参数]）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        funName(<span class="number">20</span>);</span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//语句块</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="打印调用"><a class="markdownIt-Anchor" href="#打印调用"></a> 打印调用</h5><p>​System.out.println(方法名（[参数]）)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        System.out.println( funName(<span class="number">20</span>) );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="赋值调用"><a class="markdownIt-Anchor" href="#赋值调用"></a> 赋值调用</h5><p>​int a = 方法名（[参数]）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = funName(<span class="number">20</span>);<span class="comment">//赋值调用</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法分为两种"><a class="markdownIt-Anchor" href="#方法分为两种"></a> 方法分为两种</h4><h5 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h5><p>​有参数<br>​无参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//有参数方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">()</span> <span class="comment">//无参数方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="返回值"><a class="markdownIt-Anchor" href="#返回值"></a> 返回值</h5><p>​有返回值<br>​无返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//有返回值方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funName</span><span class="params">()</span> <span class="comment">//无返回值方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法注意事项"><a class="markdownIt-Anchor" href="#方法注意事项"></a> 方法注意事项</h4><p>方法应该定义类中，不能定义在方法中<br>方法定义没有前后顺序<br>方法定义之后不会自动执行，需要手动调用<br>如果方法有返回值，必须写上   return 返回值<br>返回的数据必须要和返回值类型一致<br>对于void返回值类型，可以只写return；<br>一个方法可以有多个return，但只能执行其中一个</p><h4 id="方法重载overload"><a class="markdownIt-Anchor" href="#方法重载overload"></a> 方法重载Overload</h4><p>如果功能相同，参数不同，可以使用方法重载</p><h5 id="特征"><a class="markdownIt-Anchor" href="#特征"></a> 特征</h5><p>​方法名要相同<br>​参数个数不同<br>​参数类型不同<br>​类型名 参数顺序不同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">()</span> <span class="comment">//参数个数不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> <span class="comment">//参数个数不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">int</span> b)</span> <span class="comment">//参数类型不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">double</span> b)</span> <span class="comment">//参数顺序不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + (<span class="keyword">int</span>)b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#方法&quot;&gt;&lt;/a&gt; 方法&lt;/h3&gt;
&lt;h4 id=&quot;方法定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#方法定义&quot;&gt;&lt;/a&gt; 方法定义&lt;/h4&gt;
&lt;p&gt;​
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>集成开发环境</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/06/java00008%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/06/java00008集成开发环境/</id>
    <published>2020-02-05T20:49:36.000Z</published>
    <updated>2020-02-05T21:13:05.461Z</updated>
    
    <content type="html"><![CDATA[<h3 id="集成开发软件"><a class="markdownIt-Anchor" href="#集成开发软件"></a> 集成开发软件</h3><h4 id="intellij-idea"><a class="markdownIt-Anchor" href="#intellij-idea"></a> IntelliJ IDEA</h4><p>​官方网站 <a href="http://www.jetbrains.com" target="_blank" rel="noopener">www.jetbrains.com</a><br>​先新建项目,再新建模块,然后新建包,最后新建源文件<br>​输入psvm 回车<br>​自动生成public static void main(String[] args) {<br>​会自动保存</p><h4 id="快捷键"><a class="markdownIt-Anchor" href="#快捷键"></a> 快捷键</h4><p>​alt + 4 显示输出框<br>​shift + f10  编译运行<br>​alt + enter 自动修复代码<br>​ctrl + y 删除光标所在行<br>​ctrl + d 复制光标当前行,插入光标位置下面<br>​ctrl+alt + L 格式化代码<br>​ctrl + / 单行注释,再按一次取消单行注释<br>​Ctrl+Shift +/ 多行注释<br>​alt+ins 自动生成代码<br>​alt+shift +上下箭头  移动当前代码行<br>​shift + f6 一个改全部改<br>​ctrl + 鼠标左键 转到方法定义处</p><h3 id="设置"><a class="markdownIt-Anchor" href="#设置"></a> 设置</h3><p>​设置字体<br>​file-&gt;settings…-&gt; editor-&gt; Font-&gt;size</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200206045408.png" alt></p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200206045511.png" alt></p><h4 id="设置自动提示快捷键"><a class="markdownIt-Anchor" href="#设置自动提示快捷键"></a> 设置自动提示快捷键</h4><p>​file-&gt;settings…-&gt;点击齿轮-&gt;Duplicate 复制一份 -&gt;Main menu -&gt; code -&gt; completion -&gt;basic</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200206045408.png" alt></p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200206045849.png" alt></p><h4 id="项目和模块的关闭和导入"><a class="markdownIt-Anchor" href="#项目和模块的关闭和导入"></a> 项目和模块的关闭和导入</h4><h5 id="关闭"><a class="markdownIt-Anchor" href="#关闭"></a> 关闭</h5><p>file -&gt;  close project</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200206045849.png" alt></p><h5 id="导入"><a class="markdownIt-Anchor" href="#导入"></a> 导入</h5><p>Open -&gt; 选择项目文件 有小黑块的</p><p>然后一直下一步</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200206050044.png" alt></p><h4 id="模块"><a class="markdownIt-Anchor" href="#模块"></a> 模块</h4><h5 id="移除"><a class="markdownIt-Anchor" href="#移除"></a> 移除</h5><p>​Remove Moudle</p><h5 id="导入-2"><a class="markdownIt-Anchor" href="#导入-2"></a> 导入</h5><p>​File -&gt; Project Structure -&gt; Import Moudle -&gt;一直选next -&gt;OK</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;集成开发软件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#集成开发软件&quot;&gt;&lt;/a&gt; 集成开发软件&lt;/h3&gt;
&lt;h4 id=&quot;intellij-idea&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#inte
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>基本结构</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/05/java00007%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/05/java00007基本结构/</id>
    <published>2020-02-05T13:07:02.000Z</published>
    <updated>2020-02-05T13:36:13.790Z</updated>
    
    <content type="html"><![CDATA[<h3 id="顺序结构"><a class="markdownIt-Anchor" href="#顺序结构"></a> 顺序结构</h3><p>​从上到下,顺序执行</p><hr><h3 id="选择结构"><a class="markdownIt-Anchor" href="#选择结构"></a> 选择结构</h3><h4 id="单if语句"><a class="markdownIt-Anchor" href="#单if语句"></a> 单if语句</h4><p>​if(条件表达式){语句块}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> a = <span class="number">10</span>,b = <span class="number">11</span>;</span><br><span class="line">        <span class="keyword">if</span>(a &lt; b)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="标准if-else语句"><a class="markdownIt-Anchor" href="#标准if-else语句"></a> 标准if else语句</h4><p>​if(条件表达式){语句块;}else{语句块}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>,b = <span class="number">11</span>;</span><br><span class="line">        <span class="keyword">if</span>(a &lt; b)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多层if语句"><a class="markdownIt-Anchor" href="#多层if语句"></a> 多层if语句</h4><p>​if(条件表达式){语句块;}else if(条件表达式){语句块}else{语句块}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">              <span class="keyword">int</span> a = <span class="number">10</span>,b = <span class="number">11</span>,c =<span class="number">12</span>;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; b &amp;&amp; a &gt; c)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(b &gt; c &amp;&amp; b &gt; a)&#123;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="switch"><a class="markdownIt-Anchor" href="#switch"></a> switch</h4><p>​选择对应于的常量,并执行对应常量的语句<br>​ switch(表达式)<br>{<br>​case 常量1:<br>​  语句;<br>​  break;<br>​case 常量2:<br>​  语句;<br>​  break;<br>​default:<br>​  语句;<br>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">char</span> c = <span class="string">'A'</span>;</span><br><span class="line">       </span><br><span class="line">       <span class="keyword">switch</span>(c)</span><br><span class="line">       &#123;</span><br><span class="line">       <span class="keyword">case</span> <span class="string">'A'</span>:</span><br><span class="line">  System.out.println(<span class="string">"X&gt;=90"</span>);</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'B'</span>:</span><br><span class="line">  System.out.println(<span class="string">"80&gt;=X&lt;90"</span>);</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"> System.out.println(<span class="string">"X&lt;79"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="常量类型"><a class="markdownIt-Anchor" href="#常量类型"></a> 常量类型</h5><h6 id="整型"><a class="markdownIt-Anchor" href="#整型"></a> 整型</h6><p>​byte,char,short,int</p><h6 id="引用数据类型"><a class="markdownIt-Anchor" href="#引用数据类型"></a> 引用数据类型</h6><p>​String,enum<br>​常量值不能重复</p><hr><h3 id="循环结构"><a class="markdownIt-Anchor" href="#循环结构"></a> 循环结构</h3><h4 id="for循环语句"><a class="markdownIt-Anchor" href="#for循环语句"></a> for循环语句</h4><p>for(变量初始化;条件判断;改变变量值)<br>{<br>语句块;<br>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="while循环语句"><a class="markdownIt-Anchor" href="#while循环语句"></a> while循环语句</h4><p>while(条件)<br>{<br>语句块;<br>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; <span class="number">10</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="do-while循环语句"><a class="markdownIt-Anchor" href="#do-while循环语句"></a> do while循环语句</h4><p>初始化表达式<br>do{</p><p>​语句块;</p><p>}while(条件表达式);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        </span><br><span class="line">        &#125;<span class="keyword">while</span>(i++ &lt; <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="break"><a class="markdownIt-Anchor" href="#break"></a> break</h4><p>​中止循环</p><h4 id="continue"><a class="markdownIt-Anchor" href="#continue"></a> continue</h4><p>​结束本次循环</p><h4 id="死循环"><a class="markdownIt-Anchor" href="#死循环"></a> 死循环</h4><p>​java可以有死循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="comment">//我是死循环</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="循环嵌套"><a class="markdownIt-Anchor" href="#循环嵌套"></a> 循环嵌套</h4><p>​一个循环体嵌套着另一个循环体这就叫做循环嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; <span class="number">10</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">"*"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;顺序结构&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#顺序结构&quot;&gt;&lt;/a&gt; 顺序结构&lt;/h3&gt;
&lt;p&gt;​	从上到下,顺序执行&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;选择结构&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hr
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>使用hexo+GitHub搭建的个人博客 文件备份</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/05/%E4%BD%BF%E7%94%A8hexo-GitHub%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E6%96%87%E4%BB%B6%E5%A4%87%E4%BB%BD/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/05/使用hexo-GitHub搭建的个人博客-文件备份/</id>
    <published>2020-02-05T12:10:54.000Z</published>
    <updated>2020-02-05T12:19:28.220Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用hexogithub搭建的个人博客-文件备份"><a class="markdownIt-Anchor" href="#使用hexogithub搭建的个人博客-文件备份"></a> 使用hexo+GitHub搭建的个人博客 文件备份</h1><h3 id="1在github中创建-hexo-分支来存储本地-markdown-文件"><a class="markdownIt-Anchor" href="#1在github中创建-hexo-分支来存储本地-markdown-文件"></a> 1.在GitHub中创建 hexo 分支来存储本地 markdown 文件</h3><p>在本地文件根目录创建 <code>.gitignore</code> 文件，若存在修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">.deploy*/</span><br><span class="line">public/</span><br><span class="line">db.json</span><br></pre></td></tr></table></figure><p>在本地文件根目录中初始化 git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>创建分支hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure><p>提交到仓库，需要注意的事在提交之前要把themes目录下主题中的 <code>.git</code> 文件夹重命名或者删除，不然的话 git 会把主题当做子模块来处理。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &apos;init&apos;</span><br></pre></td></tr></table></figure><p>添加远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:MrWangwj/MrWangwj.github.io.git</span><br></pre></td></tr></table></figure><p>push 到远程分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure><h3 id="2在另一台电脑上使用"><a class="markdownIt-Anchor" href="#2在另一台电脑上使用"></a> 2.在另一台电脑上使用</h3><p>首先要克隆下这个项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:MrWangwj/MrWangwj.github.io.git</span><br></pre></td></tr></table></figure><p>进入博客目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd MrWangwj.github.io.git</span><br></pre></td></tr></table></figure><p>切换到博客文件分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo origin/hexo</span><br></pre></td></tr></table></figure><p>安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure><p>然后编辑、查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g    //编译</span><br><span class="line">hexo s    //浏览器查看 localhost:4000</span><br></pre></td></tr></table></figure><p>提交 git，若在提交过程中出现 <code>ERROR Deployer not found: git</code> 可执行 <code>npm install hexo-deployer-git --save</code> 后重新提交。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>在写了新 markdown 文件后提交 git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &apos;新增博客&apos;</span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure><p>到此，我们以后只要写完博客发布后记得 push 一下就能实现备份了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用hexogithub搭建的个人博客-文件备份&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#使用hexogithub搭建的个人博客-文件备份&quot;&gt;&lt;/a&gt; 使用hexo+GitHub搭建的个人博客 文件备份&lt;/h1&gt;
&lt;h3 id=&quot;
      
    
    </summary>
    
      <category term="githubHexo" scheme="https://xiaowuyoucy.github.io/categories/githubHexo/"/>
    
    
  </entry>
  
  <entry>
    <title>自动备份Hexo源文件</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/05/%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BDHexo%E6%BA%90%E6%96%87%E4%BB%B6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/05/自动备份Hexo源文件/</id>
    <published>2020-02-05T10:16:47.000Z</published>
    <updated>2020-02-05T11:11:10.150Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自动备份hexo源文件"><a class="markdownIt-Anchor" href="#自动备份hexo源文件"></a> 自动备份Hexo源文件</h1><h3 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h3><p>配置一个<span style="color:red"><code>Hexo</code></span>博客往往需要作者倾注大量心血，而如果哪天电脑坏了或者换电脑导致<span style="color:red"><code>Hexo</code></span>源文件丢失的话就是一件比较杯具的事。因此本文给出了一种自动备份<span style="color:red"><code>Hexo</code></span>源文件到<span style="color:red"><code>Github</code></span>的方法，能够在执行<span style="color:red"><code>hexo deploy</code></span>命令后自动执行<span style="color:red"><code>Git</code></span>命令以推送<span style="color:red"><code>Hexo</code></span>源文件到<span style="color:red"><code>Github</code></span>仓库。</p><h4 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h4><p><span style="color:red"><code>NodeJS</code></span>的事件监听机制能够监听<span style="color:red"><code>Hexo</code></span>的事件。通过查询<a href="https://hexo.io/zh-cn/api/events.html" target="_blank" rel="noopener">Hexo文档</a>，找到了<span style="color:red"><code>Hexo</code></span>的主要事件，见下表：</p><table><thead><tr><th>事件名</th><th>描述</th></tr></thead><tbody><tr><td><code>deployBefore</code></td><td>在部署完成前发布。</td></tr><tr><td><code>deployAfter</code></td><td>在部署成功后发布。</td></tr><tr><td><code>exit</code></td><td>在<code>Hexo</code> 结束前发布。</td></tr><tr><td><code>generateBefore</code></td><td>在静态文件生成前发布。</td></tr><tr><td><code>generateAfter</code></td><td>在静态文件生成后发布。</td></tr><tr><td><code>new</code></td><td>在文章文件建立后发布。该事件返回文章参数。</td></tr><tr><td><code>processBefore</code></td><td>在处理原始文件前发布。此事件会返回一个地址，代表 Box（Box）的根目录。</td></tr><tr><td><code>processAfter</code></td><td>在原始文件处理后发布。此事件会返回一个地址，代表 Box（Box）的根目录。</td></tr><tr><td><code>ready</code></td><td>在初始化完成后发布。</td></tr></tbody></table><p>通过查询上表发现，我们可以通过监听<span style="color:red"><code>Hexo</code></span>的<span style="color:red"><code>deployAfter</code></span>事件，待部署成功后自动运行<span style="color:red"><code>Git</code></span>备份命令，从而达到自动备份的目的。</p><h3 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h3><h4 id="将span-stylecolorredhexospan目录加入span-stylecolorredgitspan仓库"><a class="markdownIt-Anchor" href="#将span-stylecolorredhexospan目录加入span-stylecolorredgitspan仓库"></a> 将<span style="color:red"><code>Hexo</code></span>目录加入<span style="color:red"><code>Git</code></span>仓库</h4><p>首先需要在<span style="color:red"><code>Github</code></span>创建一个新的<span style="color:red"><code>repository</code></span>,名字与本地<span style="color:red"><code>Hexo</code></span>文件夹同名即可。然后进入本地<span style="color:red"><code>Hexo</code></span>文件夹，按顺序执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin git@github.com:yourname/hexo.git</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><p>再每次执行<span style="color:red"><code>hexo generate</code></span>命令时，<span style="color:red"><code>public/、.deploy、\*.log</code></span>文件夹会重写更新，因此需要在<span style="color:red"><code>.gitignore</code></span>文件（如果没有，手动创建一个）中写入<span style="color:red"><code>public/、</code></span><span style="color:red"><code>.deploy、</code></span><span style="color:red"><code>\*.log</code></span>以忽略这几个目录，加快备份的速度。</p><p>然后再顺序执行以下命令，将文件推送到<span style="color:red"><code>Github</code></span>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;备份hexo源码文件&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>这三行命令便是手动推送本地文件到<span style="color:red"><code>Github</code></span>的命令,我们接下来要做的是让<span style="color:red"><code>NodeJS</code></span>监听到<span style="color:red"><code>Hexo</code></span>的<span style="color:red"><code>deployAfter</code></span>事件后自动执行上述命令。</p><h3 id="安装span-stylecolorredshelljsspan模块"><a class="markdownIt-Anchor" href="#安装span-stylecolorredshelljsspan模块"></a> 安装<span style="color:red"><code>shelljs</code></span>模块</h3><p>键入以下命令即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save shelljs</span><br></pre></td></tr></table></figure><h5 id="加入自动执行脚本"><a class="markdownIt-Anchor" href="#加入自动执行脚本"></a> 加入自动执行脚本</h5><p>在<span style="color:red"><code>Hexo</code></span>根目录的<span style="color:red"><code>scripts</code></span>文件夹（没有就自己创建一个）下新建一个<span style="color:red"><code>js</code></span>文件，文件名随意。然后加入以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">'shelljs/global'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">hexo.on(<span class="string">'deployAfter'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="comment">//当deploy完成后执行备份</span></span><br><span class="line">run();</span><br><span class="line">&#125;);</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"产生了一个错误&lt;(￣3￣)&gt; !，错误详情为："</span> + e.toString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!which(<span class="string">'git'</span>)) &#123;</span><br><span class="line">echo(<span class="string">'Sorry, this script requires git'</span>);</span><br><span class="line">exit(<span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">echo(<span class="string">"======================Auto Backup Begin==========================="</span>);</span><br><span class="line">cd(<span class="string">'path to hexo'</span>);    <span class="comment">//此处修改为Hexo根目录路径</span></span><br><span class="line"><span class="keyword">if</span> (exec(<span class="string">'git add --all'</span>).code !== <span class="number">0</span>) &#123;</span><br><span class="line">echo(<span class="string">'Error: Git add failed'</span>);</span><br><span class="line">exit(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (exec(<span class="string">'git commit -am "Form auto backup script\'s commit"'</span>).code !== <span class="number">0</span>) &#123;</span><br><span class="line">echo(<span class="string">'Error: Git commit failed'</span>);</span><br><span class="line">exit(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (exec(<span class="string">'git push origin master'</span>).code !== <span class="number">0</span>) &#123;</span><br><span class="line">echo(<span class="string">'Error: Git push failed'</span>);</span><br><span class="line">exit(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">echo(<span class="string">"==================Auto Backup Complete============================"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意上述代码中第29行需要修改为自己<span style="color:red"><code>Hexo</code></span>文件夹的绝对路径。</p><h4 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h4><p>如果脚本运行成功，会得到类似以下的效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">======================Auto Backup Begin===========================</span><br><span class="line">cd: no such file or directory: C:/Users/17810/OneDrive/hexo</span><br><span class="line">warning: LF will be replaced by CRLF in source/_posts/自动备份Hexo源文件.md.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in source/_posts/自动备份Hexo源文件.md.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">[master a6cb4c7] Form auto backup script&apos;s commit</span><br><span class="line"> 1 file changed, 153 insertions(+)</span><br><span class="line">warning: LF will be replaced by CRLF in source/_posts/自动备份Hexo源文件.md.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">To git@github.com:JacobZjw/hexo.git</span><br><span class="line">   0beaf4c..a6cb4c7  master -&gt; master</span><br><span class="line">==================Auto Backup Complete============================</span><br></pre></td></tr></table></figure><h3 id="懒癌患者的小福利"><a class="markdownIt-Anchor" href="#懒癌患者的小福利"></a> 懒癌患者的小福利</h3><p>在<span style="color:red"><code>hexo</code></span>中，我们常常使用<span style="color:red"><code>hexo new</code></span>命令来新建文章。然鹅，当我们的文章较多时，我们往往需要在成堆的文章中找到刚刚生成的文件，然后使用<span style="color:red"><code>Markdown</code></span>编辑器打开。作为一名懒癌患者怎么可能让自己如此受累。</p><p>于是，我找到了<span style="color:red"><code>Hexo</code></span>作者给出的解决办法</p><p>和上面类似，在<span style="color:red"><code>scripts</code></span>文件夹中创建一个<span style="color:red"><code>js</code></span>文件，添加以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> spawn = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hexo 2.x 用户复制这段</span></span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">path</span>)</span>&#123;</span><br><span class="line">  spawn(<span class="string">'start  "markdown编辑器绝对路径.exe" '</span> + path);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hexo 3 用户复制这段</span></span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  spawn(<span class="string">'start  "markdown编辑器绝对路径.exe" '</span> + data.path);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>保存并退出脚本之后，在命令行中键入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;auto open editor test&quot;</span><br></pre></td></tr></table></figure><p>是不是就顺利的自动打开了自动生成的md文件啦~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;自动备份hexo源文件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#自动备份hexo源文件&quot;&gt;&lt;/a&gt; 自动备份Hexo源文件&lt;/h1&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#
      
    
    </summary>
    
      <category term="githubHexo" scheme="https://xiaowuyoucy.github.io/categories/githubHexo/"/>
    
    
  </entry>
  
  <entry>
    <title>JDK9的JShell-编译器的两点优化</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00006JDK9%E7%9A%84JShell-%E7%BC%96%E8%AF%91%E5%99%A8%E7%9A%84%E4%B8%A4%E7%82%B9%E4%BC%98%E5%8C%96/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00006JDK9的JShell-编译器的两点优化/</id>
    <published>2020-02-04T00:17:40.000Z</published>
    <updated>2020-02-04T00:36:20.957Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jdk9的jshell"><a class="markdownIt-Anchor" href="#jdk9的jshell"></a> JDK9的JShell</h1><p>什么时候会用到 JShell 工具呢，当我们编写的代码非常少的时候，而又不愿意编写类，main方法，也不愿意去编译和运 行，这个时候可以使用JShell工具。 启动JShell工具，在DOS命令行直接输入JShell命令。</p><p>打开cmd</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200204082417.png" alt></p><p>​</p><p>输入jshell</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200204082552.png" alt></p><p>​</p><p>退出/exit</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200204082647.png" alt></p><h1 id="编译器的两点优化"><a class="markdownIt-Anchor" href="#编译器的两点优化"></a> 编译器的两点优化</h1><p>byte,short,char类型右侧没有超过本身范围,会自动强制转换类型<br>byte a = 12<br>常量优化<br>1 + 1常量表达式 在编译时会计算结果,而不是在运行时计算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span> a = <span class="number">12</span> <span class="comment">//隐式的把12从int类型转换为byte类型</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jdk9的jshell&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#jdk9的jshell&quot;&gt;&lt;/a&gt; JDK9的JShell&lt;/h1&gt;
&lt;p&gt;什么时候会用到 JShell 工具呢，当我们编写的代码非常少的时候，而又不愿意编写类，ma
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>java方法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00005%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00005方法/</id>
    <published>2020-02-04T00:02:04.000Z</published>
    <updated>2020-02-04T00:15:05.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h1><h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h4><p>​public static void 方法名称(){语句块}</p><p>​方法的定义是无序性的<br>​不能嵌套定义方法</p><h4 id="命名方法"><a class="markdownIt-Anchor" href="#命名方法"></a> 命名方法</h4><p>​小驼峰式法</p><h4 id="方法调用"><a class="markdownIt-Anchor" href="#方法调用"></a> 方法调用</h4><h5 id="格式"><a class="markdownIt-Anchor" href="#格式"></a> 格式</h5><p>​方法名称();</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class test009 &#123;</span><br><span class="line">    </span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(intAdd(10,20));//方法调用</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //方法定义</span><br><span class="line">    public static int intAdd(int a,int b)</span><br><span class="line">    &#123;</span><br><span class="line">        return a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#方法&quot;&gt;&lt;/a&gt; 方法&lt;/h1&gt;
&lt;h4 id=&quot;定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定义&quot;&gt;&lt;/a&gt; 定义&lt;/h4&gt;
&lt;p&gt;​		publ
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>java运算符</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00004java%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00004java运算符/</id>
    <published>2020-02-03T23:09:34.000Z</published>
    <updated>2020-02-04T00:02:38.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="运算符"><a class="markdownIt-Anchor" href="#运算符"></a> 运算符</h1><h3 id="基本运算符"><a class="markdownIt-Anchor" href="#基本运算符"></a> 基本运算符</h3><ul><li><h4 id><a class="markdownIt-Anchor" href="#"></a> +</h4></li><li><h4 id="-"><a class="markdownIt-Anchor" href="#-"></a> -</h4></li><li><h4 id="-2"><a class="markdownIt-Anchor" href="#-2"></a> *</h4></li><li><h4 id="-3"><a class="markdownIt-Anchor" href="#-3"></a> /</h4></li><li><h4 id="-4"><a class="markdownIt-Anchor" href="#-4"></a> %</h4></li></ul><h3 id="自增自减"><a class="markdownIt-Anchor" href="#自增自减"></a> 自增自减</h3><ul><li><h4 id="-5"><a class="markdownIt-Anchor" href="#-5"></a> –</h4></li><li><h4 id="-6"><a class="markdownIt-Anchor" href="#-6"></a> ++</h4></li></ul><h3 id="复合运算符"><a class="markdownIt-Anchor" href="#复合运算符"></a> 复合运算符</h3><ul><li><h4 id="-7"><a class="markdownIt-Anchor" href="#-7"></a> +=</h4></li><li><h4 id="--2"><a class="markdownIt-Anchor" href="#--2"></a> -=</h4></li><li><h4 id="-8"><a class="markdownIt-Anchor" href="#-8"></a> *=</h4></li><li><h4 id="-9"><a class="markdownIt-Anchor" href="#-9"></a> /=</h4></li><li><h4 id="-10"><a class="markdownIt-Anchor" href="#-10"></a> %=</h4><p>默认会强制类型转换</p></li></ul><p>类型不同运算时,返回的结果为较大范围的类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test007</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>,b = <span class="number">20</span>,c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        c = a + b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        c = a - b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        </span><br><span class="line">        c = a * b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        c = a / b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        c = a % b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        </span><br><span class="line">        c += a / a; <span class="comment">// c = c + (a / a)</span></span><br><span class="line">        System.out.println(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="string-字符串类型"><a class="markdownIt-Anchor" href="#string-字符串类型"></a> String 字符串类型</h3><h5 id="string-变量名"><a class="markdownIt-Anchor" href="#string-变量名"></a> String 变量名</h5><p>字符串 + 字符串 = 拼接字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test008</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String      str = <span class="string">"abc"</span>;</span><br><span class="line">        System.out.println(str + <span class="string">"efg"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="比较运算符"><a class="markdownIt-Anchor" href="#比较运算符"></a> 比较运算符</h3><ul><li><h4 id="大于"><a class="markdownIt-Anchor" href="#大于"></a> &gt;　　　大于</h4></li><li><h4 id="小于"><a class="markdownIt-Anchor" href="#小于"></a> &lt;　　　小于</h4></li><li><h4 id="等于"><a class="markdownIt-Anchor" href="#等于"></a> =　　　等于</h4></li><li><h4 id="小于等于"><a class="markdownIt-Anchor" href="#小于等于"></a> &lt;=　　小于等于</h4></li><li><h4 id="等于等于"><a class="markdownIt-Anchor" href="#等于等于"></a> &gt;=　　等于等于</h4></li><li><h4 id="等于-2"><a class="markdownIt-Anchor" href="#等于-2"></a> ==　　等于</h4></li><li><h4 id="不等于"><a class="markdownIt-Anchor" href="#不等于"></a> !=　　不等于</h4></li></ul><p>运算结果都是布尔值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test008</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> isTrue;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">100</span>,b = <span class="number">99</span>;</span><br><span class="line">        isTrue = a &gt; b;</span><br><span class="line">        System.out.println(isTrue);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a class="markdownIt-Anchor" href="#逻辑运算符"></a> 逻辑运算符</h3><ul><li><h5 id="与或非"><a class="markdownIt-Anchor" href="#与或非"></a> &amp;&amp;(与),||(或),!(非)</h5><ul><li>&amp;&amp; 两个条件为真,结果才为真</li><li>||  只要有一个条件为真,结果就为真</li><li>! 真就是假,假就是真</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test008</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> isTrue;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">100</span>,b = <span class="number">99</span>,c = <span class="number">101</span>;</span><br><span class="line">        isTrue = a &gt; b &amp;&amp; a &lt; c;</span><br><span class="line">        System.out.println(isTrue);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三元运算符"><a class="markdownIt-Anchor" href="#三元运算符"></a> 三元运算符</h3><ul><li><h5 id="变量名-条件判断-表达式a-表达式b"><a class="markdownIt-Anchor" href="#变量名-条件判断-表达式a-表达式b"></a> 变量名 = 条件判断 ? 表达式A :表达式B</h5><ul><li>​条件为真返回表达式A,否则返回表达式B</li><li>​两个表达式类型要和变量类型一致</li><li>​运算结果必须被使用</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test008</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">100</span>,b = <span class="number">99</span>,c;</span><br><span class="line">        </span><br><span class="line">        c = (a &gt; b)? a : b;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;运算符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#运算符&quot;&gt;&lt;/a&gt; 运算符&lt;/h1&gt;
&lt;h3 id=&quot;基本运算符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基本运算符&quot;&gt;&lt;/a&gt; 基本运算符&lt;/h3
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>ASCII码-Unicode码</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00003ASCII%E7%A0%81-Unicode%E7%A0%81/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00003ASCII码-Unicode码/</id>
    <published>2020-02-03T22:26:00.000Z</published>
    <updated>2020-02-03T23:07:54.372Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ascii码"><a class="markdownIt-Anchor" href="#ascii码"></a> ASCII码</h1><p>从0到255都是ASCLL码<br>美国信息交换标准代码(American Standard Code For Information Interchange)</p><h1 id="unicode"><a class="markdownIt-Anchor" href="#unicode"></a> Unicode</h1><p>Unicode 编码包含 ASCII<br>前面127的完全一样<br>称为万国码</p><p>Unicode（统一码、万国码、单一码）于1990年开始研发，1994年正式公布，是计算机领域里一项业界标准，包括字符集，编码方案等。Unicode是为了解决传统字符编码方案的局限而产生的，为每种语言中的每个字符都设定了统一唯一的二进制编码，以实现跨语言、跨平台进行文本转换、处理的要求。</p><p>计算机在设计时采用8个比特(bit)作为一个字节(byte)，所以一个字节最多能表示256个字符，早期对于使用英文的西方国家来说，一个字节可以存储大小写英文字母、数学和一些符号，因此使用一个字节来制作码表（ASCII）。后来计算机传到了其他的国家，很多国家都是使用自己的语言，比如中文、日文、韩文…语言复杂了，为了解决这个问题，每个国家制定自己的码表，中国在1980年便制定了GB2312汉字编码字符集，汉字比英文多很多，一个字节明显不够用，所有就使用2个字节来编码。然而不同国家所定义的字符编码虽然可以使用，但是在不同的国家间却经常出现不兼容的情况。如果电脑想处理多语言环境（使用中文或其他语言）可能存在无法同时支持多语言环境。</p><p>为了统一所有文字的编码，产生了Unicode,把所有语言的都统一到一套编码里，这样就不会乱码了。</p><p>在表示Unicode字符时，通常会用U+然后紧跟一组16进制的数字表示一个字符，在基本多文种平面（第零平面）Basic MultilingualPlane（BMP）里所有的字符都使用4位16进制表示。编码从U+0000到U+FFFF,共支持6万多个字符，在BMP以外的字符则需要使用5位或者6位16进制来表示。</p><p>目前Unicode字符分为17组编排，0x0000至0x10FFFF,每组称为平面（Plane）,每个面拥有65536个码位，共1114112个。</p><p>Unicode就像一张表，包所有的字符都编写到表中，每一个字符对应一个数字，称为码点（code point）,这个数字一般不直接使用，通过不同的编码方式来使用。</p><p>UTF-8、UTF-16、UTF-32就是将数字转换到程序数据的编码方案。UTF是“UnicodeTransformation Format”的缩写，可以翻译成Unicode字符集转换格式，即怎样将Unicode定义的数字转换成程序数据。</p><h5 id="utf-8"><a class="markdownIt-Anchor" href="#utf-8"></a> UTF-8</h5><p>UTF-8是以字节位单位对Unicode编码，第0-127位字符使用1个字节来表示，和ASCII编码相同，从128号开始的字符使用2、3、4位字节来表，UTF-8又被称为可变长编码。</p><p>UTF-8编码中，使用的是变成的字节序列表示字符，字符对应的代码点（code point）可能使用的是1-4个字节，这样一个字节就是一个代码单元。一个代码点（code point）可能由1-4个代码单元（code unit）组成。</p><table><thead><tr><th>十进制</th><th>Unicode编码</th><th>UTF-8字节流</th></tr></thead><tbody><tr><td>0-127位</td><td>0x000000-0x00007F</td><td>0xxxxxxx(7位)</td></tr><tr><td>128-2047位</td><td>0x000080-0x0007FF</td><td>110xxxxx 10xxxxxx（11位）</td></tr><tr><td>2048-65535位</td><td>0x000800-0x00FFFF</td><td>1110xxxx 10xxxxxx 10xxxxxx(16位)</td></tr><tr><td>65536-1114111位</td><td>0x010000-0x10FFFF</td><td>11110xxx 10xxxxxx 10xxxxxx 10xxxxxx(21位)</td></tr></tbody></table><p>比如：“汉”在Unicode中的编码为0x6C49,在表格中的第三行，使用模板为：1110xxxx 10xxxxxx10xxxxxx。将0x6C49转换成二进制：0110 1100 0100 1001，将模板中的x依次替换<span style="color:red"><strong>1110</strong></span>0110 <span style="color:red"><strong>10</strong></span>110001 <span style="color:red"><strong>10</strong></span>001001，即E6 B1 89。</p><h5 id="utf-16"><a class="markdownIt-Anchor" href="#utf-16"></a> UTF-16</h5><p>UTF-16也是可变长度编码，使用2个或者4个字节来存储字符，但是会浪费存储空间。</p><p>UTF-16编码中，字符对应的代码点（code point）可能使用的是2或4个字节，因此2个字节就是一个代码单元（code unit）,一个代码点（codepoint）可由1个或者2个代码单元（code unit）组成。</p><table><thead><tr><th>十进制</th><th>Unicode编码</th><th>UTF-16字节流</th></tr></thead><tbody><tr><td>0-65535位</td><td>0x000000-0x00FFFF</td><td>xxxxxxxx  xxxxxxxx(16位)</td></tr><tr><td>65536-1114111位</td><td>0x010000-0x10FFFF</td><td>110110yy yyyyyyyy  110111xx xxxxxxxx(20位)</td></tr></tbody></table><p>平面0有一个专用区：0xE000-0xF8FF，有6400个码位。<span style="color:red"><strong>平面0</strong></span>的0xD800-0xDFFF，共2048个码位，是一个被称作代理区（Surrogate）的特殊区域。代理区的目的用两个UTF-16字符表示BMP以外的字符。所有大于0x00FFFF的码需要使用代理区的码点。</p><p>为了将一个16位无符号整数的UTF-16编码与二个16位无符号整数的UTF-16编码区分开来，Unicode编码的设计者将0xD800-0xDFFF保留下来，并称为代理区（Surrogate）：</p><table><thead><tr><th>十进制</th><th>Unicode编码</th><th>说明</th><th>说明</th></tr></thead><tbody><tr><td>55296-56191</td><td>0xD800－0xDB7F（896个）</td><td>High Surrogates</td><td>高位替代</td></tr><tr><td>56192-56913</td><td>0xDB80－0xDBFF（128个）</td><td>High Private Use  Surrogates</td><td>高位专用替代</td></tr><tr><td>56320-57343</td><td>0xDC00－0xDFFF（1024个）</td><td>Low Surrogates</td><td>低位替代</td></tr></tbody></table><p>增补的16个平面（第2平面-第17平面），范围为：0x010000-0x10FFFF，需要使用2个代理码元表示，第一个码元为0xD800-0xDBFF(高位)范围是:<span style="color:red"><strong>110110</strong></span>00 00000000到<span style="color:red"><strong>110110</strong></span>11 11111111，第二个码元为0xDC00－0xDFFF（低位）范围是：<span style="color:red"><strong>110111</strong></span>00 00000000到<span style="color:red"><strong>110111</strong></span>11 11111111。</p><p>目前Unicode最大的码位是0x10FFFF，减去0x010000后最大值为0xFFFFF，完全可以用20位来表示。</p><p>把Unicode编码记作U，如果U≥0x10000，我们先计算U’=U-0x10000，然后将U’写成二进制形式：yyyy yyyy yyxx xxxx xxxx，U的UTF-16编码（二进制）就是：110110yyyyyyyyyy110111xxxxxxxxxx</p><p>比如：Unicode编码0x20C30，减去0x10000后，得到0x10C30，写成二进制是：0001 0000 1100 0011 0000。用前10位依次替代模板中的y，用后10位依次替代模板中的x，就得到：</p><p><span style="color:red"><strong>110110</strong></span>0001000011 <span style="color:red"><strong>110111</strong></span>0000110000，即0xD8430xDC30。</p><h5 id="utf-32"><a class="markdownIt-Anchor" href="#utf-32"></a> UTF-32</h5><p>UTF-32编码以32位无符号整数为单位。Unicode的UTF-32编码就是其对应的32位无符号整数。</p><p>UTF-32编码，一个代码点对应4个字节，因此4个字节就是一个代码单元（codeunit）。</p><table><thead><tr><th>十进制</th><th>Unicode编码</th><th>UTF-32字节流</th></tr></thead><tbody><tr><td>0-111411位</td><td>0x000000-0x10FFFF</td><td>xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx (32位)</td></tr></tbody></table><p>比如：编码0x6C49使用UTF-32编码其结果为：0x00006C49。</p><h5 id="字节序"><a class="markdownIt-Anchor" href="#字节序"></a> 字节序</h5><p>字节序有两种，分别是大端（Big Endian, BE）和小段（Little Endian, LE）。根据字节序的不同，UTF-16实现为UTF-16BE和UTF-16LE，UTF-32实现为UTF-32BE和UTF-32LE。</p><p>根据字节序的不同，UTF-16可被实现为UTF-16LE或UTF-16BE，UTF-32可被实现为UTF-32LE或UTF-32BE。</p><table><thead><tr><th><strong>Unicode编码</strong></th><th><strong>UTF-16LE</strong></th><th><strong>UTF-16BE</strong></th><th><strong>UTF32-LE</strong></th><th><strong>UTF32-BE</strong></th></tr></thead><tbody><tr><td>0x006C49</td><td>49 6C</td><td>6C 49</td><td>49 6C 00 00</td><td>00 00 6C 49</td></tr><tr><td>0x020C30</td><td>43 D8 30 DC</td><td>D8 43 DC 30</td><td>30 0C 02 00</td><td>00 02 0C 30</td></tr></tbody></table><p>Unicode标准建议用BOM（Byte Order Mark）来区分字节序，即在传输字节流前，先传输被作为BOM的字符“零宽无中断空格”。这个字符的编码是FEFF，而反过来的FFFE（UTF-16）和FFFE0000（UTF-32）在Unicode中都是未定义的码位，不应该出现在实际传输中。</p><p>UTF编码的BOM：</p><table><thead><tr><th><strong>UTF编码</strong></th><th><strong>Byte Order Mark  (BOM)</strong></th></tr></thead><tbody><tr><td>UTF-8 without BOM</td><td>无</td></tr><tr><td>UTF-8 with BOM</td><td>EF BB BF</td></tr><tr><td>UTF-16LE</td><td>FF FE</td></tr><tr><td>UTF-16BE</td><td>FE FF</td></tr><tr><td>UTF-32LE</td><td>FF FE 00 00</td></tr><tr><td>UTF-32BE</td><td>00 00 FE FF</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ascii码&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#ascii码&quot;&gt;&lt;/a&gt; ASCII码&lt;/h1&gt;
&lt;p&gt;从0到255都是ASCLL码&lt;br&gt;
美国信息交换标准代码(American Standard Code For Inf
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA 中自定义模板代码的缩写</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/IntelliJ-IDEA-%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF%E4%BB%A3%E7%A0%81%E7%9A%84%E7%BC%A9%E5%86%99/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/IntelliJ-IDEA-中自定义模板代码的缩写/</id>
    <published>2020-02-03T21:58:59.000Z</published>
    <updated>2020-02-03T22:10:30.936Z</updated>
    
    <content type="html"><![CDATA[<h1 id="intellij-idea-中自定义模板代码的缩写"><a class="markdownIt-Anchor" href="#intellij-idea-中自定义模板代码的缩写"></a> IntelliJ IDEA 中自定义模板代码的缩写</h1><h3 id="方法一新建-live-template"><a class="markdownIt-Anchor" href="#方法一新建-live-template"></a> 方法一：新建 Live Template</h3><p>step1.</p><p>点击 File – Setting</p><p><img src="/images/javawz/ide/1203928-20190227160616868-1557469800.png" alt></p><p>step2.<br>选择 Live Template，点击右侧的+号，选择 Template Group</p><p><img src="/images/javawz/ide/1203928-20190227160645143-961396544.png" alt></p><p>step3.<br>输入自定义的名称，然后点击OK。</p><p><img src="/images/javawz/ide/1203928-20190227160709473-566828200.png" alt></p><p>step4.<br>选中刚创建的 Template Group，再次点击右侧的+号，选择Live Template</p><p><img src="/images/javawz/ide/1203928-20190227160722176-1574384979.png" alt></p><p>step5.<br>填入缩写词、描述、模版内容、生效文件范围等</p><p>配置模板时，变量名以$ $包围的字符的形式出现,调用的方法也是先以变量形式出现，写完模板信息后去编辑变量(Edit variables)。</p><p>$END$是一个特殊的预定义变量，表示光标最后跳转的位置。</p><p><img src="/images/javawz/ide/1203928-20190227160737420-1450085881.png" alt></p><p>step6.<br>点击右边的Edit variables（这个只有在使用了预定义函数的时候才能点击和设置）</p><p><img src="/images/javawz/ide/1203928-20190227160755983-587139911.png" alt></p><p>step7.<br>点击 Apply ，OK，完成！</p><h3 id="方法二使用-idea-自带的-live-template"><a class="markdownIt-Anchor" href="#方法二使用-idea-自带的-live-template"></a> 方法二：使用 IDEA 自带的 Live Template</h3><p>psvm 生成 main 方法<br>fori 生成 for 循环<br>sout 生成 System.out.println();<br>…</p><h3 id="方法三修改-idea-自带的-live-template"><a class="markdownIt-Anchor" href="#方法三修改-idea-自带的-live-template"></a> 方法三：修改 IDEA 自带的 Live Template</h3><p>以将 psvm 修改成 main 和 sout 修改成 syso 为例：</p><p><img src="/images/javawz/ide/1203928-20190227160848935-236915794.png" alt></p><p><img src="/images/javawz/ide/1203928-20190227160905997-1365618359.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;intellij-idea-中自定义模板代码的缩写&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#intellij-idea-中自定义模板代码的缩写&quot;&gt;&lt;/a&gt; IntelliJ IDEA 中自定义模板代码的缩写&lt;/h1&gt;
&lt;h3 id
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数据类型转换</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00002%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00002数据类型转换/</id>
    <published>2020-02-03T20:59:05.000Z</published>
    <updated>2020-02-03T22:21:57.550Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据类型转换"><a class="markdownIt-Anchor" href="#数据类型转换"></a> 数据类型转换</h1><h2 id="隐式"><a class="markdownIt-Anchor" href="#隐式"></a> 隐式</h2><p>​代码不需要进行特殊处理,自动处理<br>​规则:数据范围从小到大</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test006</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*从小到大隐式转换*/</span></span><br><span class="line">        <span class="keyword">byte</span>    a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">short</span>   c = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span>     d = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">long</span>    e = <span class="number">5</span>;</span><br><span class="line">        e = d = c = a;</span><br><span class="line">        System.out.println(e);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="显示"><a class="markdownIt-Anchor" href="#显示"></a> 显示</h2><p>​(类型名) 数据<br>​(类型名)(数据)<br>​可能发生数据溢出和精度损失<br>​byte/char/short整数运算默认会自动提升为int类型<br>​boolean类型不能发生数据类型转换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test006</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*显示强制转换*/</span></span><br><span class="line">        <span class="keyword">byte</span>    a = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span>     b = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">        a = (<span class="keyword">byte</span>)(b);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        b = <span class="number">20</span>;</span><br><span class="line">        a = (<span class="keyword">byte</span>)b;</span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数据类型转换&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据类型转换&quot;&gt;&lt;/a&gt; 数据类型转换&lt;/h1&gt;
&lt;h2 id=&quot;隐式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#隐式&quot;&gt;&lt;/a&gt; 隐式&lt;/h2
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>变量</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00001%E5%8F%98%E9%87%8F/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00001变量/</id>
    <published>2020-02-03T20:46:10.000Z</published>
    <updated>2020-02-03T20:56:29.796Z</updated>
    
    <content type="html"><![CDATA[<h1 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h1><p>程序运行期间,内容可以发生改变的值称为变量<br>先定义后使用</p><h2 id="变量声明"><a class="markdownIt-Anchor" href="#变量声明"></a> 变量声明</h2><p>数据类型  变量名;<br>数据类型  变量名 = 初始值;</p><h2 id="变量使用"><a class="markdownIt-Anchor" href="#变量使用"></a> 变量使用</h2><p>变量名 = 值;<br>常量有默认类型,如果常量数值大于默认类型,需要手动转换类型<br>3000000000L</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> FileName&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a;<span class="comment">//变量声明</span></span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">1</span>;<span class="comment">//变量声明</span></span><br><span class="line">        </span><br><span class="line">        b = <span class="number">21</span>;<span class="comment">//变量使用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h2><ol><li>​变量名不能重复</li><li>​float和long类型的字母后缀F和L不能丢</li><li>​右侧数值不能超过左侧数据类型范围</li><li>​没有赋值的变量不能使用</li><li>​变量使用不能超过作用域范围</li><li>​作用域：从定义变量的那行起,到直接所属的大括号结束为止</li><li>​可以用一条语句创建多个变量</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;变量&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#变量&quot;&gt;&lt;/a&gt; 变量&lt;/h1&gt;
&lt;p&gt;程序运行期间,内容可以发生改变的值称为变量&lt;br&gt;
先定义后使用&lt;/p&gt;
&lt;h2 id=&quot;变量声明&quot;&gt;&lt;a class=&quot;markdownIt-
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>基础知识</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/03/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/03/基础知识/</id>
    <published>2020-02-03T03:22:30.000Z</published>
    <updated>2020-02-03T05:03:42.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机基础知识"><a class="markdownIt-Anchor" href="#计算机基础知识"></a> 计算机基础知识</h1><h2 id="二进制"><a class="markdownIt-Anchor" href="#二进制"></a> 二进制</h2><h3 id="十进制转二进制"><a class="markdownIt-Anchor" href="#十进制转二进制"></a> 十进制转二进制</h3><p>用辗转相除法:</p><p><img src="/images/javawz/1580701296582.png" alt="1580701296582"></p><h3 id="二进制转十进制"><a class="markdownIt-Anchor" href="#二进制转十进制"></a> 二进制转十进制</h3><p>用二进制分别乘以位权,在进行相加</p><p><img src="/images/javawz/1580701692321.png" alt="1580701692321"></p><h2 id="存储单位"><a class="markdownIt-Anchor" href="#存储单位"></a> 存储单位</h2><p>一般情况下最小单位为bit</p><p>1Byte = 8bit</p><p>1KB = 1024B</p><p>1MB = 1024KB</p><p>1GB = 1024MB</p><p>1TB = 1024GB</p><h2 id="命令提示符"><a class="markdownIt-Anchor" href="#命令提示符"></a> 命令提示符</h2><h3 id="ms-dos"><a class="markdownIt-Anchor" href="#ms-dos"></a> MS-DOS</h3><p>MS代表微软,DOS 代表 Disk Operating System （磁盘操作系统）</p><h3 id="磁盘命令"><a class="markdownIt-Anchor" href="#磁盘命令"></a> 磁盘命令</h3><h4 id="改变磁盘符"><a class="markdownIt-Anchor" href="#改变磁盘符"></a> 改变磁盘符</h4><h5 id="直接-输入磁盘符-并按下回车"><a class="markdownIt-Anchor" href="#直接-输入磁盘符-并按下回车"></a> 直接 输入磁盘符 并按下回车</h5><p><img src="/images/javawz/1580702094756.png" alt="1580702094756"></p><h4 id="改变目录"><a class="markdownIt-Anchor" href="#改变目录"></a> 改变目录</h4><h5 id="cd-目录-按下tab键会自动补全"><a class="markdownIt-Anchor" href="#cd-目录-按下tab键会自动补全"></a> cd 目录        按下tab键会自动补全</h5><p><img src="/images/javawz/1580702169460.png" alt="1580702169460"></p><h5 id="cd-返回上一层"><a class="markdownIt-Anchor" href="#cd-返回上一层"></a> cd . .       返回上一层</h5><p><img src="/images/javawz/1580702225455.png" alt="1580702225455"></p><h5 id="cd-回到根目录"><a class="markdownIt-Anchor" href="#cd-回到根目录"></a> cd \          回到根目录</h5><p><img src="/images/javawz/1580702268907.png" alt="1580702268907"></p><h3 id="dir遍历内容"><a class="markdownIt-Anchor" href="#dir遍历内容"></a> dir遍历内容</h3><h4 id="dir-遍历上一层内容"><a class="markdownIt-Anchor" href="#dir-遍历上一层内容"></a> dir . . 　　　　遍历上一层内容</h4><p><img src="/images/javawz/1580702589782.png" alt="1580702589782"></p><h4 id="dir-遍历当前目录内容"><a class="markdownIt-Anchor" href="#dir-遍历当前目录内容"></a> dir .　　　　　遍历当前目录内容</h4><p><img src="/images/javawz/1580702614130.png" alt="1580702614130"></p><h4 id="dir-文件目录-遍历指定目录内容"><a class="markdownIt-Anchor" href="#dir-文件目录-遍历指定目录内容"></a> dir  文件目录　　　　遍历指定目录内容</h4><p><img src="/images/javawz/1580702640863.png" alt="1580702640863"></p><h4 id="dir-文件-遍历指定文件"><a class="markdownIt-Anchor" href="#dir-文件-遍历指定文件"></a> dir  文件　　　　遍历指定文件</h4><p><img src="/images/javawz/1580702722875.png" alt="1580702722875"></p><h3 id="cls-清屏"><a class="markdownIt-Anchor" href="#cls-清屏"></a> cls 清屏</h3><p><img src="/images/javawz/0001.png" alt="0001"><br><br><br><img src="/images/javawz/0002.png" alt="0002"></p><h3 id="exit-退出dos系统"><a class="markdownIt-Anchor" href="#exit-退出dos系统"></a> exit 　　退出DOS系统</h3><p><img src="/images/javawz/1580702811177.png" alt="1580702811177"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;计算机基础知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#计算机基础知识&quot;&gt;&lt;/a&gt; 计算机基础知识&lt;/h1&gt;
&lt;h2 id=&quot;二进制&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#二进制&quot;&gt;&lt;/a&gt; 二
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>Java编译和运行</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/03/java00000Java%E7%BC%96%E8%AF%91%E5%92%8C%E8%BF%90%E8%A1%8C/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/03/java00000Java编译和运行/</id>
    <published>2020-02-03T03:22:30.000Z</published>
    <updated>2020-02-03T07:22:02.503Z</updated>
    
    <content type="html"><![CDATA[<h1 id="div-idkt目录div"><a class="markdownIt-Anchor" href="#div-idkt目录div"></a> <div id="kt">目录:</div></h1><h5 id="a-styletext-decoration-nonecolorblack-hrefmd1-源文件后缀名a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd1-源文件后缀名a"></a> <a style="text-decoration: none;color:black;" href="#md1"> 源文件后缀名</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd2编写java源文件模板a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd2编写java源文件模板a"></a> <a style="text-decoration: none;color:black;" href="#md2">编写java源文件模板</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd3编译和运行a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd3编译和运行a"></a> <a style="text-decoration: none;color:black;" href="#md3">编译和运行</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd4注释a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd4注释a"></a> <a style="text-decoration: none;color:black;" href="#md4">注释</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd5关键字a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd5关键字a"></a> <a style="text-decoration: none;color:black;" href="#md5">关键字</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd6标识符a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd6标识符a"></a> <a style="text-decoration: none;color:black;" href="#md6">标识符</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd7常量a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd7常量a"></a> <a style="text-decoration: none;color:black;" href="#md7">常量</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd8数据类型a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd8数据类型a"></a> <a style="text-decoration: none;color:black;" href="#md8">数据类型</a></h5><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefkt-div-idmd1源文件后缀名div-a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefkt-div-idmd1源文件后缀名div-a"></a> <a style="text-decoration: none;color:black;" href="#kt"> <div id="md1">源文件后缀名</div> </a></h3><p>java的源文件后缀名为  *.java</p><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd2编写java源文件模板diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd2编写java源文件模板diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md2">编写java源文件模板</div></a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Hello World....."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中filename对应着源文件名</p><p>System.out.println为输出函数 ,输出内容,结尾时换行</p><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd3编译和运行diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd3编译和运行diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md3">编译和运行</div></a></h3><p>编译　javac 文件名　　　　编译成功会生成一个class文件</p><p>运行　java 文件名　　　　　文件名后面不要带class后缀</p><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd4注释diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd4注释diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md4">注释</div></a></h3><p>// 单行注释</p><p>/**/多行注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//我是单行注释</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd5关键字diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd5关键字diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md5">关键字</div></a></h3><ul><li>​特征<ul><li>​全部小写</li><li>​在增强版记事本中有颜色</li></ul></li></ul><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd6标识符diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd6标识符diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md6">标识符</div></a></h3><ul><li><h5 id="命名规则"><a class="markdownIt-Anchor" href="#命名规则"></a> 命名规则</h5><ul><li>可以包含字母，数字，下划线，$</li><li>不能以数字开头</li><li>标识符不能是关键字</li></ul></li><li><h5 id="命名规范"><a class="markdownIt-Anchor" href="#命名规范"></a> 命名规范</h5><ul><li>类名　　大驼峰式 :首字母大写，后面每个单词首字母大写 MyNmae</li><li>变量名　　小驼峰式：首字母小写，后面每个单词首字母大写nameSize</li><li>方法名　　小驼峰式：首字母小写，后面每个单词首字母大写nameSize</li></ul></li></ul><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd7常量diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd7常量diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md7">常量</div></a></h3><p>程序运行期间，固定不变的量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mian</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String a = <span class="string">"abc"</span>;<span class="comment">//字符串常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> iZhengXing = <span class="number">123</span>;<span class="comment">//整型常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> fXiaoShu = <span class="number">123.2F</span>;<span class="comment">//浮点型常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">char</span> cZifu = <span class="string">'c'</span>;<span class="comment">//字符常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">boolean</span> isBool = <span class="keyword">true</span>;<span class="comment">//布尔型常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//还有一个null  空常量</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd8数据类型diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd8数据类型diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md8">数据类型</div></a></h3><h4 id="整型"><a class="markdownIt-Anchor" href="#整型"></a> 整型</h4><p>byte，　short，　int，　long</p><h4 id="浮点型"><a class="markdownIt-Anchor" href="#浮点型"></a> 浮点型</h4><p>​float，double</p><h4 id="布尔型"><a class="markdownIt-Anchor" href="#布尔型"></a> 布尔型</h4><p>​boolean</p><h4 id="字符型"><a class="markdownIt-Anchor" href="#字符型"></a> 字符型</h4><p>​char<br>​</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mian</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       <span class="comment">/***********整型************/</span></span><br><span class="line">       <span class="keyword">byte</span> bXinBie;<span class="comment">//1个字节</span></span><br><span class="line">       <span class="keyword">short</span>sXiaoZheng;<span class="comment">//2个字节</span></span><br><span class="line">       <span class="keyword">int</span>iRenLei;<span class="comment">//4个字节</span></span><br><span class="line">       <span class="keyword">long</span>lShaZi;<span class="comment">//4个字节</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**********浮点型************/</span></span><br><span class="line">        <span class="keyword">float</span> fFengShu;<span class="comment">//4个字节</span></span><br><span class="line">        <span class="keyword">double</span> dYuanZhouLv;<span class="comment">//8个字节</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**********布尔型************/</span></span><br><span class="line">        <span class="keyword">boolean</span> isOk;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**********字符型************/</span></span><br><span class="line">        <span class="keyword">char</span> cPingFen;<span class="comment">//1个字节</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h4><ol><li>​字符串不是基本类型，而是引用类型</li><li>​浮点型可能只是一个近似值，并非精确值</li><li>​数据范围与字节数不一定相关，例如float数据比long更加广泛，但是float更加广泛</li><li>​浮点数默认是double类型，如果要用float类型要加后缀F</li><li>​整数默认类型是int，如果要用long，后缀要加L</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;div-idkt目录div&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#div-idkt目录div&quot;&gt;&lt;/a&gt; &lt;div id=&quot;kt&quot;&gt;目录:&lt;/div&gt;&lt;/h1&gt;
&lt;h5 id=&quot;a-styletext-decoration-no
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>个人简历</title>
    <link href="https://xiaowuyoucy.github.io/2019/12/07/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    <id>https://xiaowuyoucy.github.io/2019/12/07/个人简历/</id>
    <published>2019-12-07T10:59:46.000Z</published>
    <updated>2019-12-07T10:59:46.442Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>个人经历</title>
    <link href="https://xiaowuyoucy.github.io/2019/12/07/%E4%B8%AA%E4%BA%BA%E7%BB%8F%E5%8E%86/"/>
    <id>https://xiaowuyoucy.github.io/2019/12/07/个人经历/</id>
    <published>2019-12-07T10:57:37.000Z</published>
    <updated>2019-12-07T10:57:37.110Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
