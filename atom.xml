<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanChen</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaowuyoucy.github.io/"/>
  <updated>2020-02-15T14:11:15.184Z</updated>
  <id>https://xiaowuyoucy.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>字符串的构造和直接创建</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/java00053%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9E%84%E9%80%A0%E5%92%8C%E7%9B%B4%E6%8E%A5%E5%88%9B%E5%BB%BA/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/java00053字符串的构造和直接创建/</id>
    <published>2020-02-15T14:01:21.000Z</published>
    <updated>2020-02-15T14:11:15.184Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串的构造和直接创建"><a class="markdownIt-Anchor" href="#字符串的构造和直接创建"></a> 字符串的构造和直接创建</h1><h2 id="创建字符串的常见31种方式"><a class="markdownIt-Anchor" href="#创建字符串的常见31种方式"></a> 创建字符串的常见3+1种方式.</h2><h3 id="三种构造方法"><a class="markdownIt-Anchor" href="#三种构造方法"></a> 三种构造方法:</h3><p>1.创建一个空白字符串,不含有任何内容.</p><p><code>public String();</code></p><br><p>2.根据字符数组的内容,来创建对呀的字符串.</p><p><code>public String(char[] array);</code></p><br><p>3.根据字节数组的内容,来创建对应的字符串.</p><p><code>public String(byte[] array);</code></p><br><br><h3 id="一种直接创建"><a class="markdownIt-Anchor" href="#一种直接创建"></a> 一种直接创建:</h3><p><code>String str = &quot;abc&quot;; //右边直接用双引号</code></p><br><br><h3 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意:</h3><p>直接写上双引号,就是字符串对象了</p><br><br><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo06</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//直接创建</span></span><br><span class="line">        String str1 = <span class="string">"qqqqq"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个空白字符串</span></span><br><span class="line">        String str2 = <span class="keyword">new</span> String();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据字符数组创建</span></span><br><span class="line">        <span class="keyword">char</span>[] charv  = &#123;<span class="string">'w'</span>,<span class="string">'w'</span>,<span class="string">'w'</span>,<span class="string">'w'</span>&#125;;</span><br><span class="line">        String str3 = <span class="keyword">new</span> String(charv);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据byte数组创建</span></span><br><span class="line">        <span class="keyword">byte</span>[] bt = &#123;(<span class="keyword">int</span>)<span class="string">'a'</span>,<span class="number">65</span>,<span class="number">67</span>,<span class="number">77</span>,<span class="number">69</span>&#125;;</span><br><span class="line">        String str4 = <span class="keyword">new</span> String(bt);</span><br><span class="line"></span><br><span class="line">        System.out.println(str1);</span><br><span class="line">        System.out.println(str2);</span><br><span class="line">        System.out.println(str3);</span><br><span class="line">        System.out.println(str4);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串的构造和直接创建&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串的构造和直接创建&quot;&gt;&lt;/a&gt; 字符串的构造和直接创建&lt;/h1&gt;
&lt;h2 id=&quot;创建字符串的常见31种方式&quot;&gt;&lt;a class=&quot;markdownIt-Anch
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串概述和特点</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/java00052%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A6%82%E8%BF%B0%E5%92%8C%E7%89%B9%E7%82%B9/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/java00052字符串概述和特点/</id>
    <published>2020-02-15T13:53:47.000Z</published>
    <updated>2020-02-15T14:00:14.121Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串概述和特点"><a class="markdownIt-Anchor" href="#字符串概述和特点"></a> 字符串概述和特点</h1><h3 id="字符串概述"><a class="markdownIt-Anchor" href="#字符串概述"></a> 字符串概述</h3><p>java.lang.String类代表字符串</p><p>API当中说,Java程序中所有的字符串字面值(如 “abcd”) 都作为此类的实例实现.</p><p>其实就是说:程序当中所有的双引号字符串,都是String类的对象.(就算没有 nwe,也照样是.)</p><h3 id="字符串的特点"><a class="markdownIt-Anchor" href="#字符串的特点"></a> 字符串的特点</h3><p>1.字符串的内容永不可变.【重点】</p><p>2.因为字符串不可以改变，所以字符串是可以共享使用的。</p><p>3.字符串效果上相当于是char[]字符数组，但是底层原理是byte[]字节数组.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串概述和特点&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串概述和特点&quot;&gt;&lt;/a&gt; 字符串概述和特点&lt;/h1&gt;
&lt;h3 id=&quot;字符串概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串概述&quot;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>用ArrayList类型做函数返回类型</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/java00051%E7%94%A8ArrayList%E7%B1%BB%E5%9E%8B%E5%81%9A%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/java00051用ArrayList类型做函数返回类型/</id>
    <published>2020-02-15T13:44:45.000Z</published>
    <updated>2020-02-15T13:51:01.494Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用arraylist类型做函数返回类型"><a class="markdownIt-Anchor" href="#用arraylist类型做函数返回类型"></a> 用ArrayList类型做函数返回类型</h1><h3 id="格式"><a class="markdownIt-Anchor" href="#格式"></a> 格式:</h3><p><code>public static ArrayList&lt;引用类型&gt; 函数名(类型名 变量名 )</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">随机存储20位数到ArrayList中,通过函数调用筛选偶数出来,并存储在一个集合中,然后返回一个只装有偶数的集合.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo05</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; intList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        ArrayList&lt;Integer&gt; smallList;</span><br><span class="line">        Random r = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            intList.add(r.nextInt(<span class="number">1000</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        smallList = isOuShu(intList);</span><br><span class="line">        System.out.println(<span class="string">"偶数总个数: "</span> + smallList.size());</span><br><span class="line">        System.out.println(smallList);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//用 ArrayList&lt;Integer&gt;做函数返回类型</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;Integer&gt; <span class="title">isOuShu</span><span class="params">(ArrayList&lt;Integer&gt; intList)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; smallList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; intList.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> num = intList.get(i);</span><br><span class="line">            <span class="keyword">if</span>(num % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                smallList.add(num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> smallList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;用arraylist类型做函数返回类型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#用arraylist类型做函数返回类型&quot;&gt;&lt;/a&gt; 用ArrayList类型做函数返回类型&lt;/h1&gt;
&lt;h3 id=&quot;格式&quot;&gt;&lt;a class=&quot;ma
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>用ArrayList类型做函数参数</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/java00050%E7%94%A8ArrayList%E7%B1%BB%E5%9E%8B%E5%81%9A%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/java00050用ArrayList类型做函数参数/</id>
    <published>2020-02-15T13:29:09.000Z</published>
    <updated>2020-02-15T13:46:00.025Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用arraylist类型做函数参数"><a class="markdownIt-Anchor" href="#用arraylist类型做函数参数"></a> 用ArrayList类型做函数参数</h1><h3 id="格式"><a class="markdownIt-Anchor" href="#格式"></a> 格式:</h3><p><code>public static 返回值类型 函数名(ArrayList&lt;引用类型&gt; 变量名 )</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo04</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Student&gt; std = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        std.add(<span class="keyword">new</span> Student(<span class="string">"张三丰"</span>,<span class="number">99</span>));</span><br><span class="line">        std.add(<span class="keyword">new</span> Student(<span class="string">"张无忌"</span>,<span class="number">19</span>));</span><br><span class="line">        std.add(<span class="keyword">new</span> Student(<span class="string">"宋远桥"</span>,<span class="number">39</span>));</span><br><span class="line">        std.add(<span class="keyword">new</span> Student(<span class="string">"张翠山"</span>,<span class="number">44</span>));</span><br><span class="line">        printArrayList(std);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//用ArrayList&lt;Student&gt;做函数参数,传递过来的是一个引用的地址</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArrayList</span><span class="params">(ArrayList&lt;Student&gt; std)</span></span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"&#123;"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; std.size(); i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i == std.size() - <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(std.get(i).getName() + <span class="string">"&#125;"</span>);</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                System.out.print(std.get(i).getName() + <span class="string">"@"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;用arraylist类型做函数参数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#用arraylist类型做函数参数&quot;&gt;&lt;/a&gt; 用ArrayList类型做函数参数&lt;/h1&gt;
&lt;h3 id=&quot;格式&quot;&gt;&lt;a class=&quot;markdown
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>ArrayList集合存储基本数据</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/java00049ArrayList%E9%9B%86%E5%90%88%E5%AD%98%E5%82%A8%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/java00049ArrayList集合存储基本数据/</id>
    <published>2020-02-15T13:10:36.000Z</published>
    <updated>2020-02-15T13:25:16.632Z</updated>
    
    <content type="html"><![CDATA[<h1 id="arraylist集合存储基本数据"><a class="markdownIt-Anchor" href="#arraylist集合存储基本数据"></a> ArrayList集合存储基本数据</h1><p>泛型只能是引用类型,不能是基本类型</p><p>如果希望向集合ArrayList当中存储基本类型对应的&quot;包装类&quot;。</p><table><thead><tr><th style="text-align:center">基本类型</th><th style="text-align:center">包装类(引用类型,包装类都位于java.lang包下)</th></tr></thead><tbody><tr><td style="text-align:center">byte</td><td style="text-align:center">Byte</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">Short</td></tr><tr><td style="text-align:center">int</td><td style="text-align:center">Integer</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">Long</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">Float</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">Double</td></tr><tr><td style="text-align:center">char</td><td style="text-align:center">Character</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center">Boolean</td></tr></tbody></table><p>从JDK 1.5+开始,支持自动装箱和自动拆箱</p><p>自动装箱:基本类型自动转换到包装类型</p><p>自动拆箱:包装类型自动转换到基本类型</p><p>使用格式:</p><p><code>ArrayList&lt;Integer&gt; intVal = new ArrayList&lt;&gt;();</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//使用包装类</span></span><br><span class="line">        ArrayList&lt;Integer&gt; intList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//向列表加入元素</span></span><br><span class="line">        intList.add(<span class="number">888</span>);</span><br><span class="line">        intList.add(<span class="number">89</span>);</span><br><span class="line">        intList.add(sc.nextInt());</span><br><span class="line">        <span class="comment">//输出列表</span></span><br><span class="line">        System.out.println(intList);</span><br><span class="line">        System.out.println(intList.get(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;arraylist集合存储基本数据&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#arraylist集合存储基本数据&quot;&gt;&lt;/a&gt; ArrayList集合存储基本数据&lt;/h1&gt;
&lt;p&gt;泛型只能是引用类型,不能是基本类型&lt;/p&gt;
&lt;p&gt;如果
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>图片的格式</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/html-css00010%E5%9B%BE%E7%89%87%E7%9A%84%E6%A0%BC%E5%BC%8F/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/html-css00010图片的格式/</id>
    <published>2020-02-15T03:21:22.000Z</published>
    <updated>2020-02-15T03:43:08.487Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图片的格式"><a class="markdownIt-Anchor" href="#图片的格式"></a> 图片的格式</h1><p>常用的图片格式有三种,分别是：JPG、GIF、PNG.</p><h2 id="jpegjpg"><a class="markdownIt-Anchor" href="#jpegjpg"></a> JPEG(JPG)</h2><p>JPEG图片支持的颜色比较多,图片可以压缩,但是不支持透明</p><p>一般使用JPEG来保存颜色比较丰富的图片.</p><br><br><h2 id="gif"><a class="markdownIt-Anchor" href="#gif"></a> GIF</h2><p>GIF支持的颜色少,只支持简单的透明,支持动态图</p><p>图片颜色单一或者是动态图时可以使用gif</p><br><br><h2 id="png"><a class="markdownIt-Anchor" href="#png"></a> PNG</h2><p>PNG支持的颜色多,并且支持复杂的透明</p><p>可以用来显示颜色复杂的透明的图片</p><br><br><h2 id="图片的使用原则"><a class="markdownIt-Anchor" href="#图片的使用原则"></a> 图片的使用原则</h2><p>效果不一致,使用效果好的.</p><p>效果一致,使用内存小的.</p><p><img src="/images/javawz/PS000001A-1581738121596.png" alt="PS000001A"></p><br><br><br><br><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;图片的格式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#图片的格式&quot;&gt;&lt;/a&gt; 图片的格式&lt;/h1&gt;
&lt;p&gt;常用的图片格式有三种,分别是：JPG、GIF、PNG.&lt;/p&gt;
&lt;h2 id=&quot;jpegjpg&quot;&gt;&lt;a class=&quot;mark
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>相对路径</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/html-css00009%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/html-css00009相对路径/</id>
    <published>2020-02-15T03:05:21.000Z</published>
    <updated>2020-02-15T03:52:44.737Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相对路径"><a class="markdownIt-Anchor" href="#相对路径"></a> 相对路径</h1><p><code>src</code>属性配置的是图片的路径,目前我们所要使用的路径全都是相对路径.</p><p>相对路径:</p><p>相对路径指相对于当前资源所在目录的位置.</p><br><p>当前文件目录的文件直接写文件名</p><p><code>&lt;img src=&quot;1.jpg&quot; alt=&quot;哈哈哈&quot;&gt;</code></p><br><p>可以使用<code>../</code>来返回上一级目录.</p><p><code>&lt;img src=&quot;../1.jpg&quot; alt=&quot;哈哈哈&quot;&gt;</code></p><br><p>返回上上级目录.</p><p><code>&lt;img src=&quot;../../1.jpg&quot; alt=&quot;哈哈哈&quot;&gt;</code></p><p>返回几级目录就用几个<code>../</code></p><br><p>当前文件的下一级目录.</p><p><code>&lt;img src=&quot;abc/123.jpg&quot; alt=&quot;老师&quot;&gt;</code></p><br><br><br><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;相对路径&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#相对路径&quot;&gt;&lt;/a&gt; 相对路径&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;src&lt;/code&gt;属性配置的是图片的路径,目前我们所要使用的路径全都是相对路径.&lt;/p&gt;
&lt;p&gt;相对路径:&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>图片标签</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/html-css00008%E5%9B%BE%E7%89%87%E6%A0%87%E7%AD%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/html-css00008图片标签/</id>
    <published>2020-02-15T02:28:07.000Z</published>
    <updated>2020-02-15T02:45:34.126Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图片标签"><a class="markdownIt-Anchor" href="#图片标签"></a> 图片标签</h1><p>使用<code>img</code>标签来向网页中引入一个外部图片.</p><p><code>img</code>标签也是一个自结束标签</p><h2 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性</h2><p><code>src</code>: 设置一个外部图片的路径</p><p><code>&lt;img src=&quot;图片路径&quot; /&gt;</code></p><br><p><code>alt</code>: <code>&lt;img src=&quot;图片路径&quot; alt=&quot;描述信息&quot; /&gt;</code></p><p>  1.可以用来设置在图片不能显示时,对图片的描述</p><p>  2.搜索引擎可以通过<code>alt</code>属性来识别不同的图片.</p><p>  3如果不写<code>alt</code>属性,则搜索引擎不会对<code>img</code>中的图片进行收录</p><br><p><code>width</code>:可以用来修改图片宽度</p><p><code>&lt;img src=&quot;图片路径&quot; alt=&quot;描述信息&quot; width=&quot;100px&quot;/&gt;</code></p><br><p><code>height</code>:可以用来修改图片的高度</p><p><code>&lt;img src=&quot;图片路径&quot; alt=&quot;描述信息&quot; height=&quot;100px&quot; /&gt;</code></p><br><p><code>注意</code>:</p><p>1.如果宽度和高度两个属性只设置一个,另一个也会同时等比例调整大小.</p><p>2.如果两个值同时指定,则按照你指定的值来设置.</p><p>3.一般开发中除了自适应的页面,不建议设置<code>width</code>和<code>height</code>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;图片标签&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#图片标签&quot;&gt;&lt;/a&gt; 图片标签&lt;/h1&gt;
&lt;p&gt;使用&lt;code&gt;img&lt;/code&gt;标签来向网页中引入一个外部图片.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;img&lt;/code&gt;标签也是一个自结
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>实体</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/html-css00007%E5%AE%9E%E4%BD%93/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/html-css00007实体/</id>
    <published>2020-02-15T02:15:49.000Z</published>
    <updated>2020-02-15T02:26:21.630Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实体"><a class="markdownIt-Anchor" href="#实体"></a> 实体</h1><p>在<code>HTML</code>中,一些如&lt;&gt;这种特殊字符是不能直接使用的,需要使用一些特殊的符号来表示这些特殊字符,这些特殊符号,我们称为<code>实体(转义字符)</code>.</p><p>浏览器解析到<code>实体</code>时,会自动将实体转换为对应的字符.</p><h2 id="实体语法"><a class="markdownIt-Anchor" href="#实体语法"></a> 实体语法</h2><p><code>&amp;实体名字;</code></p><p>&lt; 对应的实体是:<code>&amp;lt;</code></p><p>&gt;对应的实体是:<code>&amp;gt;</code></p><p>空格实体: <code>&amp;nbsp;</code></p><p>版权符号:<code>&amp;copy;</code></p><p>tab制表符实体: <code>&amp;emsp;</code></p><p>其余的可以去查看一些官方的手册.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;实体&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#实体&quot;&gt;&lt;/a&gt; 实体&lt;/h1&gt;
&lt;p&gt;在&lt;code&gt;HTML&lt;/code&gt;中,一些如&amp;lt;&amp;gt;这种特殊字符是不能直接使用的,需要使用一些特殊的符号来表示这些特殊字符,这些特殊符
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>常用的标签</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/14/html-css00006%E5%B8%B8%E7%94%A8%E7%9A%84%E6%A0%87%E7%AD%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/14/html-css00006常用的标签/</id>
    <published>2020-02-14T13:59:23.000Z</published>
    <updated>2020-02-15T01:05:16.646Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用的标签"><a class="markdownIt-Anchor" href="#常用的标签"></a> 常用的标签</h1><h2 id="标签"><a class="markdownIt-Anchor" href="#标签"></a> 标签</h2><p><code>HTML</code>中的标记指的就是标签.</p><p><code>HTML</code>使用标记标签来描述网页</p><h3 id="结构"><a class="markdownIt-Anchor" href="#结构"></a> 结构:</h3><p><code>&lt;标签名&gt; 标签内容 &lt;/标签名&gt;</code></p><p><code>&lt;标签名 /&gt;</code></p><h3 id="元素"><a class="markdownIt-Anchor" href="#元素"></a> 元素:</h3><p>元素和标签都是等价的,说白了元素就是标签…</p><p>但我们也可以理解成一个完整的标签称为<code>元素</code>.</p><p>如上面的结构所述的就是完整的标签</p><p>例如:<code>&lt;h1&gt;我是一个完整的元素&lt;/h1&gt;</code></p><h3 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性:</h3><p>可以为<code>HTML</code>标签设置属性</p><p>通过属性为<code>HTML</code>元素提供附加信息</p><p>属性需要设置在<code>开始标签</code>或<code>自结束标签</code>中</p><p>属性总是以<code>名称/值对</code>的形式出现的</p><p>比如:<code>name =&quot;value&quot;</code></p><p><code>&lt;img src=&quot;&quot; alt=&quot;&quot; /&gt;</code></p><h2 id="标题标签"><a class="markdownIt-Anchor" href="#标题标签"></a> 标题标签</h2><p>在<code>HTML</code>中一共有6级标题标签</p><p><code>h1~h6</code>,其中h1最大,<code>h6</code>最小</p><p>使用<code>html</code>标签时,关心的是标签的语义,我们使用的标签都是语义化标签.</p><p>6级标题中,<code>h1</code>的最重要,h1的重要性仅次于<code>title</code>,搜索引擎检索完<code>title</code>之后,会立即查看<code>h1</code>中的内容</p><p><code>h1</code>标签非常重要,他会影响到页面在搜索引擎中的排名,页面只能写一个<code>h1</code></p><p>一般页面中标题标签只使用<code>h1~h3</code>标题标签,<code>h3</code>以后的基本不使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是1级标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是2级标签<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是3级标签<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>我是4级标签<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>我是5级标签<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>我是6级标签<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="段落标签"><a class="markdownIt-Anchor" href="#段落标签"></a> 段落标签</h2><p>段落标签,段落标签用于表示内容中的一个自然段</p><p>使用<code>p</code>标签来表示一个段落</p><p><code>p</code>标签中的文字,默认会独占一行,并且段与段之间会有一个间距</p><p><code>&lt;p&gt;我是一个段落标签,用来表示一个自然段.&lt;/p&gt;</code></p><p>在<code>HTML</code>中,字符之间写再多的空格,浏览器也会当成一个空格解析,换行也会当成一个空格解析</p><h2 id="br换行标签"><a class="markdownIt-Anchor" href="#br换行标签"></a> &lt;br&gt;换行标签</h2><p>在页面中使用<code>br</code>标签来表示一个换行,br标签是一个自结束标签.</p><p><code>&lt;br /&gt;</code></p><h2 id="hr水平标签"><a class="markdownIt-Anchor" href="#hr水平标签"></a> &lt;hr&gt;水平标签</h2><p><code>hr</code>也是一个自结束标签,可以在页面中生成一条水平线.</p><p><code>&lt;hr /&gt;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常用的标签&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#常用的标签&quot;&gt;&lt;/a&gt; 常用的标签&lt;/h1&gt;
&lt;h2 id=&quot;标签&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#标签&quot;&gt;&lt;/a&gt; 标签&lt;/h2&gt;
&lt;
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>乱码问题</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/14/html-css00005%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/14/html-css00005乱码问题/</id>
    <published>2020-02-14T13:08:01.000Z</published>
    <updated>2020-02-14T13:26:46.712Z</updated>
    
    <content type="html"><![CDATA[<h1 id="乱码问题"><a class="markdownIt-Anchor" href="#乱码问题"></a> 乱码问题</h1><h3 id="编码"><a class="markdownIt-Anchor" href="#编码"></a> 编码:</h3><p>依据一定的规则,将字符转换为二进制编码的过程称之为编码.</p><h3 id="解码"><a class="markdownIt-Anchor" href="#解码"></a> 解码:</h3><p>依据一定的规则,将二进制编码转换为字符的过程称之为解码.</p><h3 id="字符集"><a class="markdownIt-Anchor" href="#字符集"></a> 字符集:</h3><p>编码和解码所采用的规则,我们称之为字符集</p><h5 id="常见字符集"><a class="markdownIt-Anchor" href="#常见字符集"></a>   常见字符集:</h5><h5 id="1ascii"><a class="markdownIt-Anchor" href="#1ascii"></a>     1.ASCII</h5><h5 id="2iso-8859-1"><a class="markdownIt-Anchor" href="#2iso-8859-1"></a>     2.ISO-8859-1</h5><h5 id="3gbk"><a class="markdownIt-Anchor" href="#3gbk"></a>     3.GBK</h5><h5 id="4gb2312-中文系统默认编码"><a class="markdownIt-Anchor" href="#4gb2312-中文系统默认编码"></a>     4.GB2312 中文系统默认编码</h5><h5 id="5utf-8-万国码支持地球上所有的文字"><a class="markdownIt-Anchor" href="#5utf-8-万国码支持地球上所有的文字"></a>     5.UTF-8 万国码,支持地球上所有的文字</h5><h3 id="乱码原因"><a class="markdownIt-Anchor" href="#乱码原因"></a> 乱码原因:</h3><p>产生乱码的根本原因是,编码和解码所采用的字符集不同</p><p>在中文系统的浏览器中,默认都是使用GB2312进行解码的</p><h3 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决:</h3><p>用<code>&lt;meta charset=&quot;字符集&quot; /&gt;</code>标签告诉浏览器网页所采用的编码字符集</p><p>meta标签用来设置网页的一些元数据,比如网页的字符集,关键字,简介等…</p><p>meta是一个自结束标签,编写一个自结束标签时,可以在开始标签中添加一个 /</p><h3 id="ansi"><a class="markdownIt-Anchor" href="#ansi"></a> ANSI</h3><p>ANSI代表智能字符集,会跟随操作系统默认选择的字符集</p><p>例如中文操作系统默认的字符集是GB2312</p><p><img src="/images/javawz/1581686657431-1581686663189.png" alt="1581686657431"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--告诉浏览器,使用UTF-8进行解码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;乱码问题&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#乱码问题&quot;&gt;&lt;/a&gt; 乱码问题&lt;/h1&gt;
&lt;h3 id=&quot;编码&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#编码&quot;&gt;&lt;/a&gt; 编码:&lt;/h3&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>JS文档声明</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/14/html-css00004%E6%96%87%E6%A1%A3%E5%A3%B0%E6%98%8E/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/14/html-css00004文档声明/</id>
    <published>2020-02-14T12:17:28.000Z</published>
    <updated>2020-02-14T13:07:30.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js文档声明"><a class="markdownIt-Anchor" href="#js文档声明"></a> JS文档声明</h1><p><img src="/images/javawz/1581682714388-1581682719928.png" alt="1581682714388"></p><h3 id="我们需要告诉浏览器我们编写的html是使用哪个版本的"><a class="markdownIt-Anchor" href="#我们需要告诉浏览器我们编写的html是使用哪个版本的"></a> 我们需要告诉浏览器我们编写的html是使用哪个版本的</h3><p><img src="/images/javawz/1581682756531-1581682761895.png" alt="1581682756531"></p><p><img src="/images/javawz/1581682965391-1581682971863.png" alt="1581682965391"></p><h3 id="html5版本的文档声明很简单只需要在顶部添加doctype-html既可"><a class="markdownIt-Anchor" href="#html5版本的文档声明很简单只需要在顶部添加doctype-html既可"></a> HTML5版本的文档声明很简单,只需要在顶部添加<code>&lt;!DOCTYPE html&gt;</code>既可.</h3><h3 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> <code>注意事项</code></h3><h5 id="如果不添加文档声明则会导致有些浏览器会进入一个怪异模式进入怪异模式以后浏览器解析页面会导致页面无法正常显示所以为了避免进入该模式一定要写文档声明"><a class="markdownIt-Anchor" href="#如果不添加文档声明则会导致有些浏览器会进入一个怪异模式进入怪异模式以后浏览器解析页面会导致页面无法正常显示所以为了避免进入该模式一定要写文档声明"></a> 如果不添加文档声明,则会导致有些浏览器会进入一个怪异模式,进入怪异模式以后,浏览器解析页面会导致页面无法正常显示,所以为了避免进入该模式,一定要写文档声明</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--我是文档声明--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;js文档声明&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js文档声明&quot;&gt;&lt;/a&gt; JS文档声明&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/javawz/1581682714388-1581682719928.png&quot; al
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>Null和Undefined</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/14/JS00010Null%E5%92%8CUndefined/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/14/JS00010Null和Undefined/</id>
    <published>2020-02-14T01:22:09.000Z</published>
    <updated>2020-02-14T04:39:21.635Z</updated>
    
    <content type="html"><![CDATA[<h1 id="null和undefined"><a class="markdownIt-Anchor" href="#null和undefined"></a> Null和Undefined</h1><p><code>Null(空值)</code>类型只有一个值,就是<code>null</code></p><p><code>null</code>这个值专门用来表示一个为空的对象</p><p>使用<code>typeof</code>检查一个<code>null</code>值时,会返回<code>object</code></p><p><code>Undefined(未定义)</code>类型的值只有一个,就<code>Undefined</code></p><p>当声明一个变量,但未初始化时,他的值就是<code>Undefined</code></p><p>使用<code>typeof</code>检查一个<code>Undefined</code>值时,也会返回一个<code>undefined</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//定义一个空类型变量,和一个Undefined变量</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> a = <span class="literal">null</span>;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> b;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(a); <span class="comment">// 输出object</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(b); <span class="comment">// 输出undefined</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//输出object</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);</span></span><br><span class="line"><span class="actionscript"><span class="comment">//输出 undefined</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> b);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;null和undefined&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#null和undefined&quot;&gt;&lt;/a&gt; Null和Undefined&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Null(空值)&lt;/code&gt;类型只有一个值,就是&lt;code
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
      <category term="Null和Undefined" scheme="https://xiaowuyoucy.github.io/tags/Null%E5%92%8CUndefined/"/>
    
  </entry>
  
  <entry>
    <title>JS_Boolean类型</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/14/JS00009-Boolean%E5%80%BC%E7%B1%BB%E5%9E%8B/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/14/JS00009-Boolean值类型/</id>
    <published>2020-02-14T01:12:57.000Z</published>
    <updated>2020-02-14T04:39:14.528Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js_boolean类型"><a class="markdownIt-Anchor" href="#js_boolean类型"></a> JS_Boolean类型</h1><h3 id="boolean布尔值"><a class="markdownIt-Anchor" href="#boolean布尔值"></a> Boolean布尔值</h3><h4 id="布尔值有两个主要用来做逻辑判断"><a class="markdownIt-Anchor" href="#布尔值有两个主要用来做逻辑判断"></a> 布尔值有两个,主要用来做逻辑判断</h4><h4 id="true"><a class="markdownIt-Anchor" href="#true"></a> <code>true</code></h4><h4 id="表示真"><a class="markdownIt-Anchor" href="#表示真"></a>   表示真</h4><h4 id="false"><a class="markdownIt-Anchor" href="#false"></a> <code>false</code></h4><h4 id="表示假"><a class="markdownIt-Anchor" href="#表示假"></a>   表示假</h4><h5 id="使用typeof检查一个布尔值时会返回一个boolean"><a class="markdownIt-Anchor" href="#使用typeof检查一个布尔值时会返回一个boolean"></a> 使用<code>typeof</code>检查一个布尔值时,会返回一个<code>boolean</code></h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> isBingo = <span class="literal">false</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(isBingo);  </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;js_boolean类型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js_boolean类型&quot;&gt;&lt;/a&gt; JS_Boolean类型&lt;/h1&gt;
&lt;h3 id=&quot;boolean布尔值&quot;&gt;&lt;a class=&quot;markdownIt-Anch
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>JS_Number类型</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/14/JS00008-Number%E7%B1%BB%E5%9E%8B/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/14/JS00008-Number类型/</id>
    <published>2020-02-14T00:29:49.000Z</published>
    <updated>2020-02-14T04:39:08.846Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js_number类型"><a class="markdownIt-Anchor" href="#js_number类型"></a> JS_Number类型</h1><h3 id="基本概念及使用"><a class="markdownIt-Anchor" href="#基本概念及使用"></a> 基本概念及使用</h3><p>在<code>JS</code>中所有的数值都是<code>Number</code>类型,包括整数和浮点数</p><p>可以使用一个运算符<code>typeof</code>来检查变量类型,使用格式<code>typeof 变量名</code>会返回一个变量类型的字符串</p><p><code>JS</code>中可以表示的数值的最大值是:<code>Number.MAX_VALUE</code></p><p><code>JS</code>中可以表示大于0的最小值<code>Number.MIN_VALUE</code></p><p>如果使用<code>Number</code>类型的变量超过了<code>Number.MAX_VALUE</code>则会返回一个<code>Infinity</code>,表示正无穷.</p><p><code>Infinity</code>表示正无穷</p><p><code>-Infinity</code>表示符无穷</p><p>使用<code>typeof</code>检查<code>Infinity</code>也会返回<code>Number</code></p><p><code>NaN</code>是一个特殊的数字,表示Not A Number</p><p>用<code>typeof</code>检查<code>NaN</code>时也会返回<code>number</code></p><h3 id="精度"><a class="markdownIt-Anchor" href="#精度"></a> 精度:</h3><p>在<code>JS</code>中整数的基本运算可以保证精确的.</p><p>如果使用<code>JS</code>进行浮点运算,可能会得到一个不精确的结果</p><p>所以不要使用<code>JS</code>进行对精确度要求比较高的运算</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//声明一个整型变量和浮点型变量</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> intNumber = <span class="number">100</span>;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> floatNumber = <span class="number">1.23</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//在控制台输出两个变量的值</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(intNumber);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(floatNumber);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//在控制台输出两个变量的类型</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> intNumber);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> floatNumber);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//在控制台输出最大数值和&gt;0的最大数值</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">Number</span>.MAX_VALUE);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">Number</span>.MIN_VALUE);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//超过最大值会返回一个Infinity</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> a = <span class="built_in">Number</span>.MAX_VALUE;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(a * a);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="built_in">Number</span>.MIN_VALUE * <span class="number">1</span> / <span class="number">2</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//Infinity也是属于Number类型</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">Infinity</span>); </span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//会返回一个NaN,表示不是一个数字</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"basd"</span> * <span class="string">"abad"</span>); </span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;js_number类型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js_number类型&quot;&gt;&lt;/a&gt; JS_Number类型&lt;/h1&gt;
&lt;h3 id=&quot;基本概念及使用&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hr
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>JS字符串</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/14/JS00007%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/14/JS00007字符串/</id>
    <published>2020-02-13T23:57:44.000Z</published>
    <updated>2020-02-14T04:39:04.728Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js字符串数据"><a class="markdownIt-Anchor" href="#js字符串数据"></a> JS字符串数据</h1><h3 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型:</h3><h4 id="在js中一共有六种数据类型"><a class="markdownIt-Anchor" href="#在js中一共有六种数据类型"></a> 在JS中一共有六种数据类型</h4><h5 id="string-字符串类型"><a class="markdownIt-Anchor" href="#string-字符串类型"></a>   <code>String</code>:  字符串类型</h5><h5 id="number-数值类型"><a class="markdownIt-Anchor" href="#number-数值类型"></a>   <code>Number</code>: 数值类型</h5><h5 id="boolean-布尔类型"><a class="markdownIt-Anchor" href="#boolean-布尔类型"></a>   <code>Boolean</code>: 布尔类型</h5><h5 id="null-空值"><a class="markdownIt-Anchor" href="#null-空值"></a>   <code>Null</code>:   空值</h5><h5 id="undefined-未定义"><a class="markdownIt-Anchor" href="#undefined-未定义"></a>   <code>Undefined</code>: 未定义</h5><h5 id="object-对象类型"><a class="markdownIt-Anchor" href="#object-对象类型"></a>   <code>Object</code>:  对象类型</h5><h5 id="其中stringnumberbooleannullundefined属于基本数据类型"><a class="markdownIt-Anchor" href="#其中stringnumberbooleannullundefined属于基本数据类型"></a>   其中<code>String</code>,<code>Number</code>,<code>Boolean</code>,<code>Null</code>,<code>Undefined</code>属于<code>基本数据类型</code></h5><h5 id="而object属于引用数据类型"><a class="markdownIt-Anchor" href="#而object属于引用数据类型"></a>   而<code>Object</code>属于引用数据类型.</h5><h2 id="string字符串"><a class="markdownIt-Anchor" href="#string字符串"></a> String字符串</h2><p>在<code>JS</code>中字符串需要使用引号引起来,例如&quot;abc&quot;</p><p>使用双引号和单引号都可以,但是不能混用,例如<code>&quot; abc ' 这样是错误的</code>.</p><p>引号不能嵌套,双引号不能放在双引号中,单引号也不能放在单引号中</p><p>在字符串中我们可以使用\作为转义字符.</p><p>输出两个双引号可以用两个单引号引起来:<code>' &quot;abc&quot; '</code></p><p>当表示一些特殊字符时可以使用\进行转义,例如:</p><table><thead><tr><th>\n</th><th>表示换行符</th></tr></thead><tbody><tr><td>\t</td><td>表示一个制表符</td></tr><tr><td>\\</td><td>表示\</td></tr><tr><td>\’</td><td>表示’</td></tr><tr><td>\&quot;</td><td>表示&quot;</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//声明字符串变量</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> str = <span class="string">"abcd"</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//使用用单引号输出双引号</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> str1 = <span class="string">'"1234"'</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//使用转义字符</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> str2 = <span class="string">"\'qqqqqqq\'"</span>;</span></span><br><span class="line"><span class="undefined">            </span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(str);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> str);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(str1)</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> str1);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;js字符串数据&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js字符串数据&quot;&gt;&lt;/a&gt; JS字符串数据&lt;/h1&gt;
&lt;h3 id=&quot;数据类型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据类型&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>JS标识符</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/14/JS00006%E6%A0%87%E8%AF%86%E7%AC%A6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/14/JS00006标识符/</id>
    <published>2020-02-13T23:44:01.000Z</published>
    <updated>2020-02-14T04:38:59.770Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js标识符"><a class="markdownIt-Anchor" href="#js标识符"></a> JS标识符</h1><h3 id="标识符"><a class="markdownIt-Anchor" href="#标识符"></a> 标识符</h3><h4 id="在js中所有可以由我们自主命名的都可以称为是标识符"><a class="markdownIt-Anchor" href="#在js中所有可以由我们自主命名的都可以称为是标识符"></a> 在JS中所有可以由我们自主命名的都可以称为是标识符.</h4><p>例如:变量名,函数名,属性名等都属于标识符.</p><h4 id="命名一个标识符时需要遵守如下规则"><a class="markdownIt-Anchor" href="#命名一个标识符时需要遵守如下规则"></a> 命名一个标识符时需要遵守如下规则:</h4><p>  1.标识符中可以含有字母,数字,下划线<code>_</code>,<code>$</code></p><p>  2.标识符不能以数字开头.</p><p>  3.标识符不能是<code>ES</code>中的关键字或保留字</p><p>  4.标识符一般都采用小驼峰式法</p><p>   -开头首字母小写,往后每个单词的首字母都是大写,其余的都是小写,例如helloWorld</p><p>   -JS底层保存标识符时实际上是采用Unicode的编码,也就是说标识符可以用中文,但不建议这样做.</p><p><img src="/images/javawz/1581637707599-1581637727579.png" alt="1581637707599"></p><p><img src="/images/javawz/1581637799810-1581637805000.png" alt="1581637799810"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;js标识符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js标识符&quot;&gt;&lt;/a&gt; JS标识符&lt;/h1&gt;
&lt;h3 id=&quot;标识符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#标识符&quot;&gt;&lt;/a&gt; 标识符&lt;/h3
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>JS字面常量和变量</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/14/JS00005%E5%AD%97%E9%9D%A2%E5%B8%B8%E9%87%8F%E5%92%8C%E5%8F%98%E9%87%8F/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/14/JS00005字面常量和变量/</id>
    <published>2020-02-13T23:32:00.000Z</published>
    <updated>2020-02-14T04:38:55.168Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js字面常量和变量"><a class="markdownIt-Anchor" href="#js字面常量和变量"></a> JS字面常量和变量</h1><h3 id="字面常量"><a class="markdownIt-Anchor" href="#字面常量"></a> 字面常量:</h3><p>字面常量 都是一些不能改变的值,例如1,2,3,4;</p><p>字面常量都是可以直接使用的,但是我们一般不会直接使用;</p><h3 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量:</h3><p>变量可以用来保存字面量,而且变量的值是可以任意改变的.</p><p>变量在<code>JS</code>中使用<code>var</code>关键字来声明一个变量;</p><p>变量声明格式:<code>var 变量名 = 初始值;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">//声明一个变量</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> a;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//声明一个变量,并赋初始值</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> age = <span class="number">11</span>;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> height = <span class="number">168.8</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//对变量进行修改</span></span></span><br><span class="line"><span class="undefined">age = 14;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(age);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(height);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;js字面常量和变量&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js字面常量和变量&quot;&gt;&lt;/a&gt; JS字面常量和变量&lt;/h1&gt;
&lt;h3 id=&quot;字面常量&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字面常量
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>JS基本语法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/14/JS00004%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/14/JS00004基本语法/</id>
    <published>2020-02-13T23:07:44.000Z</published>
    <updated>2020-02-14T04:38:50.703Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js基本语法"><a class="markdownIt-Anchor" href="#js基本语法"></a> JS基本语法</h1><h2 id="js注释"><a class="markdownIt-Anchor" href="#js注释"></a> JS注释</h2><p>多行注释: 用  /*  */</p><p>单行注释: 用  //</p><h2 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意</h2><h5 id="1js中严格区分大小写"><a class="markdownIt-Anchor" href="#1js中严格区分大小写"></a> 1.JS中严格区分大小写</h5><h5 id="2js中每一条语句以分号-结尾"><a class="markdownIt-Anchor" href="#2js中每一条语句以分号-结尾"></a> 2.JS中每一条语句以分号（ ；）结尾</h5><h6 id="如果不写分号浏览器会自动添加但是会消耗一些系统资源而且有些时候浏览器会加错分号所以在开发中分号必须要写"><a class="markdownIt-Anchor" href="#如果不写分号浏览器会自动添加但是会消耗一些系统资源而且有些时候浏览器会加错分号所以在开发中分号必须要写"></a>   如果不写分号,浏览器会自动添加,但是会消耗一些系统资源,而且有些时候,浏览器会加错分号,所以在开发中分号必须要写</h6><h5 id="3js中会忽略多个空格和换行所以我们可以利用空格和换行对代码进行格式化"><a class="markdownIt-Anchor" href="#3js中会忽略多个空格和换行所以我们可以利用空格和换行对代码进行格式化"></a> 3.JS中会忽略多个空格和换行，所以我们可以利用空格和换行对代码进行格式化。</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//年龄</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> age = <span class="number">11</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//身高</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> height = <span class="number">168.8</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//在控制台上输出年龄</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(age);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">/* 在控制台上输出身高*/</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(height);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;js基本语法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js基本语法&quot;&gt;&lt;/a&gt; JS基本语法&lt;/h1&gt;
&lt;h2 id=&quot;js注释&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#js注释&quot;&gt;&lt;/a&gt; JS
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>JavaScript的编写位置</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/14/JS00003JavaScript%E7%9A%84%E7%BC%96%E5%86%99%E4%BD%8D%E7%BD%AE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/14/JS00003JavaScript的编写位置/</id>
    <published>2020-02-13T16:32:04.000Z</published>
    <updated>2020-02-14T04:38:46.177Z</updated>
    
    <content type="html"><![CDATA[<h1 id="javascript的编写位置"><a class="markdownIt-Anchor" href="#javascript的编写位置"></a> JavaScript的编写位置</h1><h5 id="可以将js代码写在button标签中的onclick属性中"><a class="markdownIt-Anchor" href="#可以将js代码写在button标签中的onclick属性中"></a> 可以将js代码写在button标签中的onclick属性中</h5><p><code>&lt;button onclick=&quot;alert('我爱你');&quot; &gt;点我一下&lt;/button&gt;</code></p><h5 id="可以将js代码写在超链接的href属性中这样当点击超链接时就会执行js代码"><a class="markdownIt-Anchor" href="#可以将js代码写在超链接的href属性中这样当点击超链接时就会执行js代码"></a> 可以将js代码写在超链接的href属性中,这样当点击超链接时,就会执行js代码.</h5><p><code>&lt;a href=&quot;javascript:alert('我太爱你了');&quot;&gt;1234&lt;/a&gt;</code></p><p><code>&lt;a href=&quot;javascript:;&quot;&gt;1234&lt;/a&gt;</code></p><h5 id="可以将js代码写到script标签-推荐使用的方式"><a class="markdownIt-Anchor" href="#可以将js代码写到script标签-推荐使用的方式"></a> 可以将js代码写到script标签 ( 推荐使用的方式 )</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="comment">/*代码块*/</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h5 id="可以将js-代码编写到外部js文件中然后通过script标签引入"><a class="markdownIt-Anchor" href="#可以将js-代码编写到外部js文件中然后通过script标签引入"></a> 可以将js 代码编写到外部js文件中,然后通过script标签引入</h5><h5 id="外部文件后缀名以js结尾"><a class="markdownIt-Anchor" href="#外部文件后缀名以js结尾"></a> 外部文件后缀名以.js结尾</h5><h5 id="js代码写到外部文件中可以在不同的页面中同时引用也可以利用浏览器的缓存机制"><a class="markdownIt-Anchor" href="#js代码写到外部文件中可以在不同的页面中同时引用也可以利用浏览器的缓存机制"></a> js代码写到外部文件中可以在不同的页面中同时引用,也可以利用浏览器的缓存机制.</h5><h5 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意:</h5><h5 id="script标签一旦用于引入外部文件了就不能再编写代码在标签内部了即使编写了浏览器也会忽略"><a class="markdownIt-Anchor" href="#script标签一旦用于引入外部文件了就不能再编写代码在标签内部了即使编写了浏览器也会忽略"></a> <code>&lt;Script&gt;</code>标签一旦用于引入外部文件了,就不能再编写代码在标签内部了,即使编写了浏览器也会忽略</h5><h5 id="如果需要插入其他js代码则可以再创建一个新的script标签用于编写内部代码"><a class="markdownIt-Anchor" href="#如果需要插入其他js代码则可以再创建一个新的script标签用于编写内部代码"></a> 如果需要插入其他js代码,则可以再创建一个新的<code>script</code>标签用于编写内部代码</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"demo001.js"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;javascript的编写位置&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#javascript的编写位置&quot;&gt;&lt;/a&gt; JavaScript的编写位置&lt;/h1&gt;
&lt;h5 id=&quot;可以将js代码写在button标签中的onclick属性
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
</feed>
