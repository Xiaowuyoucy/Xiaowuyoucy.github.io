<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanChen</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaowuyoucy.github.io/"/>
  <updated>2020-02-17T22:39:32.645Z</updated>
  <id>https://xiaowuyoucy.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>内联框架</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/18/html-css00013%E5%86%85%E8%81%94%E6%A1%86%E6%9E%B6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/18/html-css00013内联框架/</id>
    <published>2020-02-17T22:29:31.000Z</published>
    <updated>2020-02-17T22:39:32.645Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内联框架"><a class="markdownIt-Anchor" href="#内联框架"></a> 内联框架</h1><h5 id="使用内联框架可以引入一个外部的页面"><a class="markdownIt-Anchor" href="#使用内联框架可以引入一个外部的页面"></a> 使用内联框架可以引入一个外部的页面.</h5><p>使用iframe来创建一个内联框架</p><br><h5 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性:</h5><p> src:指向一个外部页面的路径,可以使用相对路径</p><p> width:设置宽度</p><p> height:设置高度</p><p>不会按比例缩放</p><p> name:可以为内联框架指定一个name属性(给框架起名字)</p><br><br><br><p><code>在现实开发中不推荐使用内联框架</code>,因为内联框架中的内容不会被搜索引擎所检索,但可以在内网使用;</p><p>一般放在body标签内</p><br><br><p>格式:<code>&lt;iframe scr=&quot;目标路径&quot; name=&quot;名字&quot;&gt;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">scr</span>=<span class="string">"demo.html"</span> <span class="attr">name</span>=<span class="string">"tom"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;内联框架&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#内联框架&quot;&gt;&lt;/a&gt; 内联框架&lt;/h1&gt;
&lt;h5 id=&quot;使用内联框架可以引入一个外部的页面&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#使用内联框架
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>xHtml的语法规范</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/18/html-css00012xHtml%E7%9A%84%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/18/html-css00012xHtml的语法规范/</id>
    <published>2020-02-17T21:25:32.000Z</published>
    <updated>2020-02-17T22:20:46.608Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xhtml的语法规范"><a class="markdownIt-Anchor" href="#xhtml的语法规范"></a> xHtml的语法规范</h1><h5 id="浏览器会尽最大的努力正确解析错误的语法你所有的不符合语法规范的内容浏览器都会为你自动修正但是有些情况会修正错误"><a class="markdownIt-Anchor" href="#浏览器会尽最大的努力正确解析错误的语法你所有的不符合语法规范的内容浏览器都会为你自动修正但是有些情况会修正错误"></a> 浏览器会尽最大的努力正确解析错误的语法,你所有的不符合语法规范的内容,浏览器都会为你自动修正,但是有些情况会修正错误.</h5><br><br><p>1.HTML中不区分大小写,但是我们一般都使用小写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaaaaaaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.HTML中的注释不能嵌套</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">--正确写法--</span>&gt;</span></span><br><span class="line"></span><br><span class="line">=================================================</span><br><span class="line">错误写法</span><br><span class="line"><span class="tag">&lt;<span class="name">--</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line">&lt;--</span><br><span class="line"></span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>3.HTML标签必须结构完整,要么成对出现,要么自结束标签.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">--正确写法--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">--错误写法--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>asdfdsf</span><br></pre></td></tr></table></figure><p>4.HTML标签可以嵌套,但是不能交叉嵌套.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">--正确写法--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaa<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red;"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">font</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">--错误写法--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaa<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red;"</span>&gt;</span>aaaaaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5.HTML标签中的属性必须有值,且值必须加引号(双引号,单引号都可以)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">--正确写法--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaa<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red;"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">font</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">--错误写法--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>aaaa<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">font</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;xhtml的语法规范&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#xhtml的语法规范&quot;&gt;&lt;/a&gt; xHtml的语法规范&lt;/h1&gt;
&lt;h5 id=&quot;浏览器会尽最大的努力正确解析错误的语法你所有的不符合语法规范的内容浏览器都会为你自动修
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>meta标签</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/18/html-css00011meta%E6%A0%87%E7%AD%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/18/html-css00011meta标签/</id>
    <published>2020-02-17T21:09:02.000Z</published>
    <updated>2020-02-17T21:24:26.467Z</updated>
    
    <content type="html"><![CDATA[<h1 id="meta标签"><a class="markdownIt-Anchor" href="#meta标签"></a> meta标签</h1><h3 id="使用meta标签还可以用来设置网页的关键字"><a class="markdownIt-Anchor" href="#使用meta标签还可以用来设置网页的关键字"></a> 使用meta标签还可以用来设置网页的关键字</h3><h5 id="格式meta-namekeywords-content-关键字"><a class="markdownIt-Anchor" href="#格式meta-namekeywords-content-关键字"></a> 格式:<code>&lt;meta name=&quot;keywords&quot; content = &quot;关键字&quot; /&gt;</code></h5><p>如果是多个关键字,就用逗号隔开.</p><p>关键字是被搜索引擎识别的.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"HTML5,JavaScript,前端,Java"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用meta标签用来指定网页的描述"><a class="markdownIt-Anchor" href="#使用meta标签用来指定网页的描述"></a> 使用meta标签用来指定网页的描述</h3><p>搜索引擎在检索页面时,会同时检索页面中的关键字和描述,但是这两个值不会影响页面在搜索引擎中的排名.</p><h3 id="格式meta-namedescription-content描述信息"><a class="markdownIt-Anchor" href="#格式meta-namedescription-content描述信息"></a> 格式:<code>&lt;meta name=&quot;description&quot; content=&quot;描述信息&quot; /&gt;</code></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"发布h5,js前端等相关信息"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用meta可以用来做请求重定向页面跳转"><a class="markdownIt-Anchor" href="#使用meta可以用来做请求重定向页面跳转"></a> 使用meta可以用来做请求重定向(页面跳转).</h3><h5 id="格式meta-http-equivrefresh-content秒数url目标路径"><a class="markdownIt-Anchor" href="#格式meta-http-equivrefresh-content秒数url目标路径"></a> 格式:<code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;秒数;url=目标路径&quot; /&gt;</code></h5><p>目标路径可以是相对地址</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"5;http://www.baidu.com"</span>  /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;meta标签&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#meta标签&quot;&gt;&lt;/a&gt; meta标签&lt;/h1&gt;
&lt;h3 id=&quot;使用meta标签还可以用来设置网页的关键字&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hre
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>算数运算符</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/JS00015%E7%AE%97%E6%95%B0%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/JS00015算数运算符/</id>
    <published>2020-02-17T09:11:12.000Z</published>
    <updated>2020-02-17T09:47:55.146Z</updated>
    
    <content type="html"><![CDATA[<h1 id="算数运算符"><a class="markdownIt-Anchor" href="#算数运算符"></a> 算数运算符</h1><p>运算符也叫操作符</p><p>通过运算符可以对一个或多个值进行运算,并获取运算结果</p><p>比如:<code>typeof</code>就是运算符,可以来获得一个值的类型,它会将该值的类型以字符串的形式返回<code>number string boolean undefined object</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="string">"123"</span>));<span class="comment">//string</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="number">1</span>));<span class="comment">//number</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="number">1.6</span>));<span class="comment">//number</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">null</span>));<span class="comment">//object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">undefined</span>));<span class="comment">//undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">NaN</span>));<span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(<span class="literal">true</span>));<span class="comment">//boolean</span></span><br></pre></td></tr></table></figure><p>算数运算符: <code>+ - * / %</code></p><p>当对非<code>Number</code>类型的值进行运算时,会将这些值转换为<code>Number</code>然后在运算.</p><p>任何值和<code>NaN</code>做运算都得<code>NaN</code></p><p>1.  <code>+</code>可以对两个值进行加法运算,并将结果返回.</p><p>如果对两个字符串做加法,则会拼接在一起</p><p>任何值和字符串做加法运算,都会先转换为字符串,然后再拼接</p><p>我们可以利用这一点特性来为任何数据类型做String转换.</p><p>这是一种隐式类型转换,实际上也是调用了<code>String()</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br><span class="line">a = <span class="number">123</span> + <span class="number">2</span>;<span class="comment">//125</span></span><br><span class="line"></span><br><span class="line">a = <span class="literal">true</span> + <span class="number">1</span>;<span class="comment">//2</span></span><br><span class="line"></span><br><span class="line">a = <span class="literal">true</span> + <span class="literal">false</span>;<span class="comment">//1</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">2</span> + <span class="literal">null</span>;<span class="comment">//2</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">2</span> + <span class="literal">NaN</span>;<span class="comment">//NaN</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">"aaa"</span> + <span class="string">"bbb"</span>;<span class="comment">//aaabbb</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">100</span> + <span class="string">"aa"</span>;<span class="comment">//100aa</span></span><br></pre></td></tr></table></figure><p>2.  <code>-</code>可以对两个值进行减法运算,并将结果返回</p><p>任何数据类型和数字做减法都会先转换为<code>Number</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line">a = <span class="number">100</span> - <span class="number">1</span>;<span class="comment">//99</span></span><br><span class="line">a = <span class="number">100</span> - <span class="string">"1"</span>;<span class="comment">//99</span></span><br><span class="line"><span class="built_in">console</span>.log(a - <span class="literal">NaN</span>);<span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(a - <span class="literal">null</span>);<span class="comment">//100</span></span><br><span class="line"><span class="built_in">console</span>.log(a - <span class="literal">undefined</span>);<span class="comment">//NaN</span></span><br></pre></td></tr></table></figure><p>3.  <code>*</code>可以对两个值进行乘法运算,并将结果返回</p><p>任何数据类型和数字做乘法都会先转换为<code>Number</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line">a = <span class="number">100</span> * <span class="number">1</span>;<span class="comment">//99</span></span><br><span class="line">a = <span class="number">100</span> * <span class="string">"1"</span>;<span class="comment">//99</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">NaN</span>);<span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">null</span>);<span class="comment">//100</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">undefined</span>);<span class="comment">//NaN</span></span><br></pre></td></tr></table></figure><p>4.  <code>/</code>可以对两个值进行除法运算,并将结果返回</p><p>任何数据类型和数字做除法都会先转换为<code>Number</code></p><p>可以通过为一个值<code>0 *1 /1</code>来将其转换为<code>Number</code></p><p>原理和<code>Number()</code>函数一样,使用起来更加简单</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">100</span>;</span><br><span class="line">a = <span class="number">100</span> * <span class="number">1</span>;<span class="comment">//99</span></span><br><span class="line">a = <span class="number">100</span> * <span class="string">"1"</span>;<span class="comment">//99</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">NaN</span>);<span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">null</span>);<span class="comment">//100</span></span><br><span class="line"><span class="built_in">console</span>.log(a * <span class="literal">undefined</span>);<span class="comment">//NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(a + <span class="string">"1"</span>);<span class="comment">//101</span></span><br></pre></td></tr></table></figure><p>5.<code>%</code>取模运算符(取余数)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">a = a % <span class="number">9</span>;<span class="comment">//1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;算数运算符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#算数运算符&quot;&gt;&lt;/a&gt; 算数运算符&lt;/h1&gt;
&lt;p&gt;运算符也叫操作符&lt;/p&gt;
&lt;p&gt;通过运算符可以对一个或多个值进行运算,并获取运算结果&lt;/p&gt;
&lt;p&gt;比如:&lt;code&gt;type
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>转换为Boolean</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/JS00014%E8%BD%AC%E6%8D%A2%E4%B8%BABoolean/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/JS00014转换为Boolean/</id>
    <published>2020-02-17T08:58:33.000Z</published>
    <updated>2020-02-17T09:10:07.684Z</updated>
    
    <content type="html"><![CDATA[<h1 id="转换为boolean"><a class="markdownIt-Anchor" href="#转换为boolean"></a> 转换为Boolean</h1><h3 id="将其他类型转换为boolean"><a class="markdownIt-Anchor" href="#将其他类型转换为boolean"></a> 将其他类型转换为Boolean</h3><p>使用<code>Boolean()函数</code></p><p>除了0和NaN,其他的都为<code>true</code></p><p>字符串转布尔,除了空串,其余的都是<code>true.</code></p><p><code>null</code>和<code>undefined</code>都会转换为<code>false</code></p><p>对象也会转换为<code>true</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> c = <span class="literal">NaN</span>;</span><br><span class="line"><span class="keyword">var</span> d = <span class="string">""</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(a));<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(b);<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(c));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(d));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="literal">null</span>));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Boolean</span>(<span class="literal">undefined</span>));<span class="comment">//false</span></span><br></pre></td></tr></table></figure><br><br><br><br><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;转换为boolean&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#转换为boolean&quot;&gt;&lt;/a&gt; 转换为Boolean&lt;/h1&gt;
&lt;h3 id=&quot;将其他类型转换为boolean&quot;&gt;&lt;a class=&quot;markdownIt-Ancho
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>其他进制的数字</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/JS00013%E5%85%B6%E4%BB%96%E8%BF%9B%E5%88%B6%E7%9A%84%E6%95%B0%E5%AD%97/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/JS00013其他进制的数字/</id>
    <published>2020-02-17T08:33:11.000Z</published>
    <updated>2020-02-17T08:57:07.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="其他进制的数字"><a class="markdownIt-Anchor" href="#其他进制的数字"></a> 其他进制的数字</h1><p>在JS中,如果需要表示16进制的数字,则需要以0x开头.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">0x12334</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p>如果需要表示8进制,则用0开头</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">010</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p>如果需要表示二进制,用0b开头.但不是所有浏览器都支持.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">0b010</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure><p>有些浏览器会把&quot;070&quot;这种字符串当成10进制</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">"070"</span>;</span><br><span class="line"><span class="built_in">parseInt</span>(a);<span class="comment">//有些浏览器会把这种字符串当成10进制</span></span><br><span class="line"><span class="comment">//解决方法</span></span><br><span class="line"><span class="built_in">parseInt</span>(a,<span class="number">8</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;其他进制的数字&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#其他进制的数字&quot;&gt;&lt;/a&gt; 其他进制的数字&lt;/h1&gt;
&lt;p&gt;在JS中,如果需要表示16进制的数字,则需要以0x开头.&lt;/p&gt;
&lt;figure class=&quot;highlight
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>强制类型转换-Number</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/JS00012%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2Number/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/JS00012强制类型转换Number/</id>
    <published>2020-02-17T07:48:04.000Z</published>
    <updated>2020-02-17T08:20:46.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="强制类型转换-number"><a class="markdownIt-Anchor" href="#强制类型转换-number"></a> 强制类型转换-Number</h1><p>将其他数据类型转换为``Number`</p><p>字符串----&gt;数字</p><h4 id="转换方式一"><a class="markdownIt-Anchor" href="#转换方式一"></a> 转换方式一:</h4><p>使用<code>Number()</code>函数;</p><p><code>Number(变量)</code></p><p>1.如果是纯数字的字符串,则直接将其转换为数字</p><p>2.如果是字符串中有非数字的内容,则转换为NaN</p><p>3.如果字符串是一个空串或者是一个全空格的字符串,则转换为0</p><p>4.布尔类型转Number,true会转换为1,false转换为0</p><p>5.null ----&gt; 数字0</p><p>6.Undefined —&gt; 数字:NaN</p><h4 id="转换方式二"><a class="markdownIt-Anchor" href="#转换方式二"></a> 转换方式二:</h4><p>这种方式专门用来转换字符串</p><p><code>parseInt()</code>把一个字符串转换为一个整数.</p><p><code>parseInt()</code>可以将一个字符串中的有效的整数内容取出来.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">"1234px"</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="built_in">parseInt</span>(a);<span class="comment">//1234</span></span><br></pre></td></tr></table></figure><p><code>parseFloat()</code>把一个字符串转换为一个浮点数.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">"1234.111px"</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="built_in">parseInt</span>(a);<span class="comment">//1234.111</span></span><br></pre></td></tr></table></figure><p>如果对非<code>String`使用`parseInt()</code>或``parseFloat()`,他会先将其转换为String,然后在操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> b = perseInt(<span class="literal">true</span>);<span class="comment">//返回NaN</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/Number()</span></span><br><span class="line"><span class="regexp">var a = "123";</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a); /</span><span class="regexp">/123</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = true;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/1</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = NaN;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/NaN</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = undefined;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/NaN</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = null;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/ 0</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/parseInt() || parseFloat();</span></span><br><span class="line"><span class="regexp">console.log("=========================");</span></span><br><span class="line"><span class="regexp">var a = "123a";</span></span><br><span class="line"><span class="regexp">a = parseInt(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/123</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">var a = "123";</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/123</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = true;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/1</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = NaN;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/NaN</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = undefined;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/NaN</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">a = null;</span></span><br><span class="line"><span class="regexp">a = Number(a);</span></span><br><span class="line"><span class="regexp">console.log(a);/</span><span class="regexp">/0</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;强制类型转换-number&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#强制类型转换-number&quot;&gt;&lt;/a&gt; 强制类型转换-Number&lt;/h1&gt;
&lt;p&gt;将其他数据类型转换为``Number`&lt;/p&gt;
&lt;p&gt;字符串----&amp;gt;数
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>强制类型转换-String</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/JS00011%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2-String/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/JS00011强制类型转换-String/</id>
    <published>2020-02-17T07:30:25.000Z</published>
    <updated>2020-02-17T07:48:42.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="强制类型转换-string"><a class="markdownIt-Anchor" href="#强制类型转换-string"></a> 强制类型转换-String</h1><p>强制转换类型是指将一个数据类型强制转换为其他的数据类型</p><p>类型转换主要指,将其他的数据类型,转换为</p><p>String   Number    Boolean</p><h3 id="方式一"><a class="markdownIt-Anchor" href="#方式一"></a> 方式一:</h3><p>调用被转换数据类型的toString()方法</p><p>例如 :</p><p><code>a.toString()</code></p><p>该方法不会影响到原变量,他会将转换结果返回.</p><h4 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意:</h4><p>如果将null和Undefined这两个值用转换toString()方法就会出错</p><h3 id="方式二"><a class="markdownIt-Anchor" href="#方式二"></a> 方式二</h3><p>调用String()函数,并将转换的数据作为参数传递函数</p><p>例如:<code>String(123);</code>----<code>String(123);</code></p><p>使用String();函数做强制转换时:</p><p>对于Number和Boolean实际上就是调用toString()方法</p><p>但是对于null和undefined,就不会调用toString()方法</p><p>他会将null直接转换为&quot;null&quot;</p><p>将Undefined直接转换为&quot;Undefined&quot;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">var str = 123; </span></span><br><span class="line"><span class="regexp">console.log(str.toString()); </span></span><br><span class="line"><span class="regexp">/</span><span class="comment">///str = null; 出错</span></span><br><span class="line"><span class="comment">//console.log(str.toString());</span></span><br><span class="line"><span class="comment">//str = undefined;出错</span></span><br><span class="line"><span class="comment">//console.log(str.toString());</span></span><br><span class="line">str = <span class="number">123.3</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.toString());</span><br><span class="line">str = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.toString());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str = <span class="number">1231</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"================="</span>);</span><br><span class="line">str = <span class="number">123.2</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str = <span class="literal">null</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str = <span class="literal">undefined</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">str = <span class="literal">null</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str = <span class="literal">true</span>;</span><br><span class="line">str = <span class="built_in">String</span>(str);</span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;强制类型转换-string&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#强制类型转换-string&quot;&gt;&lt;/a&gt; 强制类型转换-String&lt;/h1&gt;
&lt;p&gt;强制转换类型是指将一个数据类型强制转换为其他的数据类型&lt;/p&gt;
&lt;p&gt;类型转换
      
    
    </summary>
    
      <category term="JS" scheme="https://xiaowuyoucy.github.io/categories/JS/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串的获取相关方法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/java00056%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E8%8E%B7%E5%8F%96%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/java00056字符串的获取相关方法/</id>
    <published>2020-02-16T17:44:12.000Z</published>
    <updated>2020-02-16T18:01:08.023Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串的获取相关方法"><a class="markdownIt-Anchor" href="#字符串的获取相关方法"></a> 字符串的获取相关方法</h1><h3 id="常用方法有"><a class="markdownIt-Anchor" href="#常用方法有"></a> 常用方法有:</h3><p><code>public int lenght();</code> 获取字符串长度</p><p><code>public String concat(String str);</code>拼接两个字符串</p><p><code>public char charAt(int index);</code>返回指定索引的字符</p><p><code>public int indexOf(String str);</code>查找子字符串出现在本字符串的首字符索引值,如果没有则返回-1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo09</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str = <span class="keyword">new</span> String(<span class="string">"abc"</span>);</span><br><span class="line">        String str1;</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line"></span><br><span class="line">        len = str.length();<span class="comment">//获取字符串长度</span></span><br><span class="line">        ch = str.charAt(<span class="number">0</span>);<span class="comment">//获取str的第0个索引的字符</span></span><br><span class="line">        str1 = str.concat(<span class="string">"def"</span>);<span class="comment">//拼接两个字符串</span></span><br><span class="line">        index = str.indexOf(<span class="string">"ab"</span>);<span class="comment">//查找子字符串第一次出现的索引值</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"字符串长度:"</span> + len);</span><br><span class="line">        System.out.println(<span class="string">"第0个字符是:"</span> + ch);</span><br><span class="line">        System.out.println(<span class="string">"拼接字符:"</span> + str1);</span><br><span class="line">        System.out.println(<span class="string">"字符串出现的"</span> + index);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串的获取相关方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串的获取相关方法&quot;&gt;&lt;/a&gt; 字符串的获取相关方法&lt;/h1&gt;
&lt;h3 id=&quot;常用方法有&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串的比较方法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/java00055%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%AF%94%E8%BE%83%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/java00055字符串的比较方法/</id>
    <published>2020-02-16T17:14:16.000Z</published>
    <updated>2020-02-16T17:42:58.762Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串的比较方法"><a class="markdownIt-Anchor" href="#字符串的比较方法"></a> 字符串的比较方法</h1><p>想让两个字符串进行比较,就用:</p><p><code>public boolean equals(Object obj);</code>方法,区分大小写</p><p><code>public boolean equalsIgnoreCase(Object obj);</code>不区分字母大小写</p><p>参数可以是任何对象,只有参数是一个字符串并且内容相同的才会返回一个true,否者返回false.</p><p>1.任何对象都可以用Object来接收.</p><p>2.equals方法具有对称性,也就是<code>a.equals(b)</code>和<code>b.equals(a)</code>是一样的</p><p>3.如果比较两个字符串一个是字符串常量,另一个是字符串变量,推荐把字符串常量写在前面.</p><p>推荐:<code>&quot;zzz&quot;.equals(str);</code> 不推荐 <code>abc.equals(&quot;zzz&quot;);</code></p><p>因为如果<code>abc</code>是一个<code>null</code>又调用<code>equals()</code>就会抛出异常.</p><p>如果是<code>zzz.equals(str)</code>则会返回一个<code>false</code>;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo08</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str1 = <span class="keyword">new</span> String(<span class="string">"123"</span>);</span><br><span class="line">        String str2 = <span class="keyword">new</span> String(<span class="string">"123"</span>);</span><br><span class="line">        String str3 = <span class="keyword">new</span> String(<span class="string">"456"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(str1.equals(str2));<span class="comment">//true</span></span><br><span class="line">        System.out.println(str1.equals(str3));<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="string">"ABC"</span>.equalsIgnoreCase(<span class="string">"abc"</span>));<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串的比较方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串的比较方法&quot;&gt;&lt;/a&gt; 字符串的比较方法&lt;/h1&gt;
&lt;p&gt;想让两个字符串进行比较,就用:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;public boolean equals(Obj
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串的常量池</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/17/java00054%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B8%B8%E9%87%8F%E6%B1%A0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/17/java00054字符串的常量池/</id>
    <published>2020-02-16T16:51:33.000Z</published>
    <updated>2020-02-16T17:24:17.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串的常量池"><a class="markdownIt-Anchor" href="#字符串的常量池"></a> 字符串的常量池</h1><p>字符串常量池:程序当中直接写上的双引号字符串,就在字符串常量池中.</p><p>对于基本类型来说, == 是用来进行数值比较的.</p><p>对于引用类型来说,== 是进行<code>地址值</code>的比较.</p><p>String引用声明出来的字符串是不能直接修改的,修改的只是是地址值.</p><p><img src="/images/javawz/1581872109494-1581872125024.png" alt="1581872109494"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串的常量池&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串的常量池&quot;&gt;&lt;/a&gt; 字符串的常量池&lt;/h1&gt;
&lt;p&gt;字符串常量池:程序当中直接写上的双引号字符串,就在字符串常量池中.&lt;/p&gt;
&lt;p&gt;对于基本类型来说, == 是用来
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串的构造和直接创建</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/java00053%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9E%84%E9%80%A0%E5%92%8C%E7%9B%B4%E6%8E%A5%E5%88%9B%E5%BB%BA/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/java00053字符串的构造和直接创建/</id>
    <published>2020-02-15T14:01:21.000Z</published>
    <updated>2020-02-15T14:20:47.169Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串的构造和直接创建"><a class="markdownIt-Anchor" href="#字符串的构造和直接创建"></a> 字符串的构造和直接创建</h1><h2 id="创建字符串的常见31种方式"><a class="markdownIt-Anchor" href="#创建字符串的常见31种方式"></a> 创建字符串的常见3+1种方式.</h2><h3 id="三种构造方法"><a class="markdownIt-Anchor" href="#三种构造方法"></a> 三种构造方法:</h3><p>1.创建一个空白字符串,不含有任何内容.</p><p><code>public String();</code></p><br><p>2.根据字符数组的内容,来创建对应的字符串.</p><p><code>public String(char[] array);</code></p><br><p>3.根据字节数组的内容,来创建对应的字符串.</p><p><code>public String(byte[] array);</code></p><br><br><h3 id="一种直接创建"><a class="markdownIt-Anchor" href="#一种直接创建"></a> 一种直接创建:</h3><p><code>String str = &quot;abc&quot;; //右边直接用双引号</code></p><br><br><h4 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意:</h4><p>直接写上双引号,就是字符串对象了</p><br><br><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo06</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//直接创建</span></span><br><span class="line">        String str1 = <span class="string">"qqqqq"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个空白字符串</span></span><br><span class="line">        String str2 = <span class="keyword">new</span> String();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据字符数组创建</span></span><br><span class="line">        <span class="keyword">char</span>[] charv  = &#123;<span class="string">'w'</span>,<span class="string">'w'</span>,<span class="string">'w'</span>,<span class="string">'w'</span>&#125;;</span><br><span class="line">        String str3 = <span class="keyword">new</span> String(charv);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据byte数组创建</span></span><br><span class="line">        <span class="keyword">byte</span>[] bt = &#123;(<span class="keyword">int</span>)<span class="string">'a'</span>,<span class="number">65</span>,<span class="number">67</span>,<span class="number">77</span>,<span class="number">69</span>&#125;;</span><br><span class="line">        String str4 = <span class="keyword">new</span> String(bt);</span><br><span class="line"></span><br><span class="line">        System.out.println(str1);</span><br><span class="line">        System.out.println(str2);</span><br><span class="line">        System.out.println(str3);</span><br><span class="line">        System.out.println(str4);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串的构造和直接创建&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串的构造和直接创建&quot;&gt;&lt;/a&gt; 字符串的构造和直接创建&lt;/h1&gt;
&lt;h2 id=&quot;创建字符串的常见31种方式&quot;&gt;&lt;a class=&quot;markdownIt-Anch
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串概述和特点</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/java00052%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A6%82%E8%BF%B0%E5%92%8C%E7%89%B9%E7%82%B9/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/java00052字符串概述和特点/</id>
    <published>2020-02-15T13:53:47.000Z</published>
    <updated>2020-02-15T14:00:14.121Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串概述和特点"><a class="markdownIt-Anchor" href="#字符串概述和特点"></a> 字符串概述和特点</h1><h3 id="字符串概述"><a class="markdownIt-Anchor" href="#字符串概述"></a> 字符串概述</h3><p>java.lang.String类代表字符串</p><p>API当中说,Java程序中所有的字符串字面值(如 “abcd”) 都作为此类的实例实现.</p><p>其实就是说:程序当中所有的双引号字符串,都是String类的对象.(就算没有 nwe,也照样是.)</p><h3 id="字符串的特点"><a class="markdownIt-Anchor" href="#字符串的特点"></a> 字符串的特点</h3><p>1.字符串的内容永不可变.【重点】</p><p>2.因为字符串不可以改变，所以字符串是可以共享使用的。</p><p>3.字符串效果上相当于是char[]字符数组，但是底层原理是byte[]字节数组.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字符串概述和特点&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串概述和特点&quot;&gt;&lt;/a&gt; 字符串概述和特点&lt;/h1&gt;
&lt;h3 id=&quot;字符串概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#字符串概述&quot;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>用ArrayList类型做函数返回类型</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/java00051%E7%94%A8ArrayList%E7%B1%BB%E5%9E%8B%E5%81%9A%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/java00051用ArrayList类型做函数返回类型/</id>
    <published>2020-02-15T13:44:45.000Z</published>
    <updated>2020-02-15T13:51:01.494Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用arraylist类型做函数返回类型"><a class="markdownIt-Anchor" href="#用arraylist类型做函数返回类型"></a> 用ArrayList类型做函数返回类型</h1><h3 id="格式"><a class="markdownIt-Anchor" href="#格式"></a> 格式:</h3><p><code>public static ArrayList&lt;引用类型&gt; 函数名(类型名 变量名 )</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">随机存储20位数到ArrayList中,通过函数调用筛选偶数出来,并存储在一个集合中,然后返回一个只装有偶数的集合.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo05</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; intList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        ArrayList&lt;Integer&gt; smallList;</span><br><span class="line">        Random r = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            intList.add(r.nextInt(<span class="number">1000</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        smallList = isOuShu(intList);</span><br><span class="line">        System.out.println(<span class="string">"偶数总个数: "</span> + smallList.size());</span><br><span class="line">        System.out.println(smallList);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//用 ArrayList&lt;Integer&gt;做函数返回类型</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ArrayList&lt;Integer&gt; <span class="title">isOuShu</span><span class="params">(ArrayList&lt;Integer&gt; intList)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; smallList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; intList.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> num = intList.get(i);</span><br><span class="line">            <span class="keyword">if</span>(num % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                smallList.add(num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> smallList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;用arraylist类型做函数返回类型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#用arraylist类型做函数返回类型&quot;&gt;&lt;/a&gt; 用ArrayList类型做函数返回类型&lt;/h1&gt;
&lt;h3 id=&quot;格式&quot;&gt;&lt;a class=&quot;ma
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>用ArrayList类型做函数参数</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/java00050%E7%94%A8ArrayList%E7%B1%BB%E5%9E%8B%E5%81%9A%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/java00050用ArrayList类型做函数参数/</id>
    <published>2020-02-15T13:29:09.000Z</published>
    <updated>2020-02-15T13:46:00.025Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用arraylist类型做函数参数"><a class="markdownIt-Anchor" href="#用arraylist类型做函数参数"></a> 用ArrayList类型做函数参数</h1><h3 id="格式"><a class="markdownIt-Anchor" href="#格式"></a> 格式:</h3><p><code>public static 返回值类型 函数名(ArrayList&lt;引用类型&gt; 变量名 )</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo04</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;Student&gt; std = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        std.add(<span class="keyword">new</span> Student(<span class="string">"张三丰"</span>,<span class="number">99</span>));</span><br><span class="line">        std.add(<span class="keyword">new</span> Student(<span class="string">"张无忌"</span>,<span class="number">19</span>));</span><br><span class="line">        std.add(<span class="keyword">new</span> Student(<span class="string">"宋远桥"</span>,<span class="number">39</span>));</span><br><span class="line">        std.add(<span class="keyword">new</span> Student(<span class="string">"张翠山"</span>,<span class="number">44</span>));</span><br><span class="line">        printArrayList(std);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//用ArrayList&lt;Student&gt;做函数参数,传递过来的是一个引用的地址</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArrayList</span><span class="params">(ArrayList&lt;Student&gt; std)</span></span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"&#123;"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; std.size(); i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i == std.size() - <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(std.get(i).getName() + <span class="string">"&#125;"</span>);</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                System.out.print(std.get(i).getName() + <span class="string">"@"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;用arraylist类型做函数参数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#用arraylist类型做函数参数&quot;&gt;&lt;/a&gt; 用ArrayList类型做函数参数&lt;/h1&gt;
&lt;h3 id=&quot;格式&quot;&gt;&lt;a class=&quot;markdown
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>ArrayList集合存储基本数据</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/java00049ArrayList%E9%9B%86%E5%90%88%E5%AD%98%E5%82%A8%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/java00049ArrayList集合存储基本数据/</id>
    <published>2020-02-15T13:10:36.000Z</published>
    <updated>2020-02-15T13:25:16.632Z</updated>
    
    <content type="html"><![CDATA[<h1 id="arraylist集合存储基本数据"><a class="markdownIt-Anchor" href="#arraylist集合存储基本数据"></a> ArrayList集合存储基本数据</h1><p>泛型只能是引用类型,不能是基本类型</p><p>如果希望向集合ArrayList当中存储基本类型对应的&quot;包装类&quot;。</p><table><thead><tr><th style="text-align:center">基本类型</th><th style="text-align:center">包装类(引用类型,包装类都位于java.lang包下)</th></tr></thead><tbody><tr><td style="text-align:center">byte</td><td style="text-align:center">Byte</td></tr><tr><td style="text-align:center">short</td><td style="text-align:center">Short</td></tr><tr><td style="text-align:center">int</td><td style="text-align:center">Integer</td></tr><tr><td style="text-align:center">long</td><td style="text-align:center">Long</td></tr><tr><td style="text-align:center">float</td><td style="text-align:center">Float</td></tr><tr><td style="text-align:center">double</td><td style="text-align:center">Double</td></tr><tr><td style="text-align:center">char</td><td style="text-align:center">Character</td></tr><tr><td style="text-align:center">boolean</td><td style="text-align:center">Boolean</td></tr></tbody></table><p>从JDK 1.5+开始,支持自动装箱和自动拆箱</p><p>自动装箱:基本类型自动转换到包装类型</p><p>自动拆箱:包装类型自动转换到基本类型</p><p>使用格式:</p><p><code>ArrayList&lt;Integer&gt; intVal = new ArrayList&lt;&gt;();</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//使用包装类</span></span><br><span class="line">        ArrayList&lt;Integer&gt; intList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//向列表加入元素</span></span><br><span class="line">        intList.add(<span class="number">888</span>);</span><br><span class="line">        intList.add(<span class="number">89</span>);</span><br><span class="line">        intList.add(sc.nextInt());</span><br><span class="line">        <span class="comment">//输出列表</span></span><br><span class="line">        System.out.println(intList);</span><br><span class="line">        System.out.println(intList.get(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;arraylist集合存储基本数据&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#arraylist集合存储基本数据&quot;&gt;&lt;/a&gt; ArrayList集合存储基本数据&lt;/h1&gt;
&lt;p&gt;泛型只能是引用类型,不能是基本类型&lt;/p&gt;
&lt;p&gt;如果
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>图片的格式</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/html-css00010%E5%9B%BE%E7%89%87%E7%9A%84%E6%A0%BC%E5%BC%8F/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/html-css00010图片的格式/</id>
    <published>2020-02-15T03:21:22.000Z</published>
    <updated>2020-02-15T03:43:08.487Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图片的格式"><a class="markdownIt-Anchor" href="#图片的格式"></a> 图片的格式</h1><p>常用的图片格式有三种,分别是：JPG、GIF、PNG.</p><h2 id="jpegjpg"><a class="markdownIt-Anchor" href="#jpegjpg"></a> JPEG(JPG)</h2><p>JPEG图片支持的颜色比较多,图片可以压缩,但是不支持透明</p><p>一般使用JPEG来保存颜色比较丰富的图片.</p><br><br><h2 id="gif"><a class="markdownIt-Anchor" href="#gif"></a> GIF</h2><p>GIF支持的颜色少,只支持简单的透明,支持动态图</p><p>图片颜色单一或者是动态图时可以使用gif</p><br><br><h2 id="png"><a class="markdownIt-Anchor" href="#png"></a> PNG</h2><p>PNG支持的颜色多,并且支持复杂的透明</p><p>可以用来显示颜色复杂的透明的图片</p><br><br><h2 id="图片的使用原则"><a class="markdownIt-Anchor" href="#图片的使用原则"></a> 图片的使用原则</h2><p>效果不一致,使用效果好的.</p><p>效果一致,使用内存小的.</p><p><img src="/images/javawz/PS000001A-1581738121596.png" alt="PS000001A"></p><br><br><br><br><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;图片的格式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#图片的格式&quot;&gt;&lt;/a&gt; 图片的格式&lt;/h1&gt;
&lt;p&gt;常用的图片格式有三种,分别是：JPG、GIF、PNG.&lt;/p&gt;
&lt;h2 id=&quot;jpegjpg&quot;&gt;&lt;a class=&quot;mark
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>相对路径</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/html-css00009%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/html-css00009相对路径/</id>
    <published>2020-02-15T03:05:21.000Z</published>
    <updated>2020-02-15T03:52:44.737Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相对路径"><a class="markdownIt-Anchor" href="#相对路径"></a> 相对路径</h1><p><code>src</code>属性配置的是图片的路径,目前我们所要使用的路径全都是相对路径.</p><p>相对路径:</p><p>相对路径指相对于当前资源所在目录的位置.</p><br><p>当前文件目录的文件直接写文件名</p><p><code>&lt;img src=&quot;1.jpg&quot; alt=&quot;哈哈哈&quot;&gt;</code></p><br><p>可以使用<code>../</code>来返回上一级目录.</p><p><code>&lt;img src=&quot;../1.jpg&quot; alt=&quot;哈哈哈&quot;&gt;</code></p><br><p>返回上上级目录.</p><p><code>&lt;img src=&quot;../../1.jpg&quot; alt=&quot;哈哈哈&quot;&gt;</code></p><p>返回几级目录就用几个<code>../</code></p><br><p>当前文件的下一级目录.</p><p><code>&lt;img src=&quot;abc/123.jpg&quot; alt=&quot;老师&quot;&gt;</code></p><br><br><br><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;相对路径&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#相对路径&quot;&gt;&lt;/a&gt; 相对路径&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;src&lt;/code&gt;属性配置的是图片的路径,目前我们所要使用的路径全都是相对路径.&lt;/p&gt;
&lt;p&gt;相对路径:&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>图片标签</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/html-css00008%E5%9B%BE%E7%89%87%E6%A0%87%E7%AD%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/html-css00008图片标签/</id>
    <published>2020-02-15T02:28:07.000Z</published>
    <updated>2020-02-15T02:45:34.126Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图片标签"><a class="markdownIt-Anchor" href="#图片标签"></a> 图片标签</h1><p>使用<code>img</code>标签来向网页中引入一个外部图片.</p><p><code>img</code>标签也是一个自结束标签</p><h2 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性</h2><p><code>src</code>: 设置一个外部图片的路径</p><p><code>&lt;img src=&quot;图片路径&quot; /&gt;</code></p><br><p><code>alt</code>: <code>&lt;img src=&quot;图片路径&quot; alt=&quot;描述信息&quot; /&gt;</code></p><p>  1.可以用来设置在图片不能显示时,对图片的描述</p><p>  2.搜索引擎可以通过<code>alt</code>属性来识别不同的图片.</p><p>  3如果不写<code>alt</code>属性,则搜索引擎不会对<code>img</code>中的图片进行收录</p><br><p><code>width</code>:可以用来修改图片宽度</p><p><code>&lt;img src=&quot;图片路径&quot; alt=&quot;描述信息&quot; width=&quot;100px&quot;/&gt;</code></p><br><p><code>height</code>:可以用来修改图片的高度</p><p><code>&lt;img src=&quot;图片路径&quot; alt=&quot;描述信息&quot; height=&quot;100px&quot; /&gt;</code></p><br><p><code>注意</code>:</p><p>1.如果宽度和高度两个属性只设置一个,另一个也会同时等比例调整大小.</p><p>2.如果两个值同时指定,则按照你指定的值来设置.</p><p>3.一般开发中除了自适应的页面,不建议设置<code>width</code>和<code>height</code>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;图片标签&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#图片标签&quot;&gt;&lt;/a&gt; 图片标签&lt;/h1&gt;
&lt;p&gt;使用&lt;code&gt;img&lt;/code&gt;标签来向网页中引入一个外部图片.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;img&lt;/code&gt;标签也是一个自结
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>实体</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/15/html-css00007%E5%AE%9E%E4%BD%93/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/15/html-css00007实体/</id>
    <published>2020-02-15T02:15:49.000Z</published>
    <updated>2020-02-15T02:26:21.630Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实体"><a class="markdownIt-Anchor" href="#实体"></a> 实体</h1><p>在<code>HTML</code>中,一些如&lt;&gt;这种特殊字符是不能直接使用的,需要使用一些特殊的符号来表示这些特殊字符,这些特殊符号,我们称为<code>实体(转义字符)</code>.</p><p>浏览器解析到<code>实体</code>时,会自动将实体转换为对应的字符.</p><h2 id="实体语法"><a class="markdownIt-Anchor" href="#实体语法"></a> 实体语法</h2><p><code>&amp;实体名字;</code></p><p>&lt; 对应的实体是:<code>&amp;lt;</code></p><p>&gt;对应的实体是:<code>&amp;gt;</code></p><p>空格实体: <code>&amp;nbsp;</code></p><p>版权符号:<code>&amp;copy;</code></p><p>tab制表符实体: <code>&amp;emsp;</code></p><p>其余的可以去查看一些官方的手册.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;实体&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#实体&quot;&gt;&lt;/a&gt; 实体&lt;/h1&gt;
&lt;p&gt;在&lt;code&gt;HTML&lt;/code&gt;中,一些如&amp;lt;&amp;gt;这种特殊字符是不能直接使用的,需要使用一些特殊的符号来表示这些特殊字符,这些特殊符
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
</feed>
