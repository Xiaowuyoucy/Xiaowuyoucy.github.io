<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanChen</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaowuyoucy.github.io/"/>
  <updated>2020-02-09T06:44:49.507Z</updated>
  <id>https://xiaowuyoucy.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>类的定义</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00027%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00027类的定义/</id>
    <published>2020-02-09T06:37:24.000Z</published>
    <updated>2020-02-09T06:44:49.507Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类的定义"><a class="markdownIt-Anchor" href="#类的定义"></a> 类的定义</h1><h5 id="定义一个类有两个组成部分"><a class="markdownIt-Anchor" href="#定义一个类有两个组成部分"></a> 定义一个类,有两个组成部分:</h5><p>  <b>成员属性:</b> 事物的状态信息.</p><p>  <b>成员行为:</b> 事物的行为.</p><h5 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项:</h5><p>  1.成员变量是直接定义在类当中的,在方法外面.<br>  2.成员方法不要写static关键字.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top.banji;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">定义一个类,用模拟"学生"事物.其中有两个组成部分:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">属性(是什么):</span></span><br><span class="line"><span class="comment">    姓名</span></span><br><span class="line"><span class="comment">    年龄</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">行为(能做什么):</span></span><br><span class="line"><span class="comment">    吃饭</span></span><br><span class="line"><span class="comment">    睡觉</span></span><br><span class="line"><span class="comment">    学习</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">对应到Java的类当中:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">成员变量(属性):</span></span><br><span class="line"><span class="comment">    String name;</span></span><br><span class="line"><span class="comment">    int    age;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">成员方法(行为):</span></span><br><span class="line"><span class="comment">    public void eat()&#123;&#125;; //吃饭</span></span><br><span class="line"><span class="comment">    public void sleep()&#123;&#125;; //睡觉</span></span><br><span class="line"><span class="comment">    public void study()&#123;&#125;; //学习</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student01</span> </span>&#123;</span><br><span class="line">    <span class="comment">//属性(成员变量)</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span>    age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//行为(成员方法)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"吃饭饭"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"睡觉觉"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">study</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"学习!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类的定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#类的定义&quot;&gt;&lt;/a&gt; 类的定义&lt;/h1&gt;
&lt;h5 id=&quot;定义一个类有两个组成部分&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定义一个类有两个组成部
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>对象的创建及其使用</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/Java00028%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E5%8F%8A%E5%85%B6%E4%BD%BF%E7%94%A8/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/Java00028对象的创建及其使用/</id>
    <published>2020-02-09T06:28:42.000Z</published>
    <updated>2020-02-09T06:37:01.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对象的创建及其使用"><a class="markdownIt-Anchor" href="#对象的创建及其使用"></a> 对象的创建及其使用</h1><p>1.<b>导包:</b> 也就是指出需要使用的类,在什么位置.<br>  import 包名称.类名称;<br>  import xiaochenyan.top.banji;<br>对于和当前类属于同一个包的情况,可以省略导包语句不写.</p><p>2.<b>创建,格式</b><br>  类名称 对象名 = new 类名称();<br>  Student01 std = new Student01();</p><p>3.<b>使用,分为两种情况</b><br>  使用成员变量,对象名.成员变量<br>  使用成员方法,对象名.成员方法名(参数)<br>  (也就是,想用谁,就用对象名点谁)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top.banji;</span><br><span class="line"><span class="comment">//导包格式</span></span><br><span class="line"><span class="keyword">import</span> xiaochenyan.top.banji.Student01;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.导包: 也就是指出需要使用的类,在什么位置.</span></span><br><span class="line"><span class="comment">import 包名称.类名称;</span></span><br><span class="line"><span class="comment">import xiaochenyan.top.banji;</span></span><br><span class="line"><span class="comment">对于和当前类属于同一个包的情况,可以省略导包语句不写.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.创建,格式</span></span><br><span class="line"><span class="comment">类名称 对象名 = new 类名称();</span></span><br><span class="line"><span class="comment">Student01 std = new Student01();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3.使用,分为两种情况</span></span><br><span class="line"><span class="comment">使用成员变量,对象名.成员变量</span></span><br><span class="line"><span class="comment">使用成员方法,对象名.成员方法名(参数)</span></span><br><span class="line"><span class="comment">(也就是,想用谁,就用对象名点谁)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test001</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建对象格式</span></span><br><span class="line">        Student01 std = <span class="keyword">new</span> Student01();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员变量格式</span></span><br><span class="line">        System.out.println(std.age);</span><br><span class="line">        System.out.println(std.name);</span><br><span class="line">        <span class="comment">//使用成员方法格式</span></span><br><span class="line">        std.eat();</span><br><span class="line">        std.sleep();</span><br><span class="line">        std.study();</span><br><span class="line">        System.out.println(<span class="string">"==========================="</span>);</span><br><span class="line"></span><br><span class="line">        std.name = <span class="string">"金毛狮王"</span>;</span><br><span class="line">        std.age = <span class="number">52</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员变量格式</span></span><br><span class="line">        System.out.println(std.age);</span><br><span class="line">        System.out.println(std.name);</span><br><span class="line">        <span class="comment">//使用成员方法格式</span></span><br><span class="line">        std.eat();</span><br><span class="line">        std.sleep();</span><br><span class="line">        std.study();</span><br><span class="line">        System.out.println(<span class="string">"==========================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;对象的创建及其使用&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#对象的创建及其使用&quot;&gt;&lt;/a&gt; 对象的创建及其使用&lt;/h1&gt;
&lt;p&gt;1.&lt;b&gt;导包:&lt;/b&gt; 也就是指出需要使用的类,在什么位置.&lt;br&gt;
  import 包名称.类名
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>类的定义</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00026%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00026类的定义/</id>
    <published>2020-02-09T05:52:12.000Z</published>
    <updated>2020-02-09T06:04:59.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类的定义"><a class="markdownIt-Anchor" href="#类的定义"></a> 类的定义</h1><h3 id="事物与类的对比"><a class="markdownIt-Anchor" href="#事物与类的对比"></a> 事物与类的对比</h3><p>现实世界的一类事物:</p><p>  <b>属性:</b> 事物的状态信息</p><p> <b> 行为:</b> 事物能够做什么</p><p>java中用class描述事物也是如此:</p><p><b>  成员变量:</b> 对应事物的<b>属性</b></p><p><b>  成员方法: </b>对应事物的<b>行为</b></p><h3 id="类的定义格式"><a class="markdownIt-Anchor" href="#类的定义格式"></a> 类的定义格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassName</span></span>&#123;</span><br><span class="line"><span class="comment">//成员变量</span></span><br><span class="line"><span class="comment">//成员方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><b>定义类</b>: 就是定义类的成员,包括<b>成员变量</b>和<b>成员方法</b>.</li><li><b>成员变量</b>: 和以前定义变量几乎一样的,只不过位置发生了改变.<b>在类中,在方法外</b>.</li><li><b>成员方法</b>: 和以前定义方法几乎是一样的.只不过<b>把static去掉</b>.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类的定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#类的定义&quot;&gt;&lt;/a&gt; 类的定义&lt;/h1&gt;
&lt;h3 id=&quot;事物与类的对比&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#事物与类的对比&quot;&gt;&lt;/a&gt; 事物
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>类和对象的关系</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00025%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00025类和对象的关系/</id>
    <published>2020-02-09T05:47:30.000Z</published>
    <updated>2020-02-09T05:50:15.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类和对象"><a class="markdownIt-Anchor" href="#类和对象"></a> 类和对象</h1><p><img src="/images/javawz/aa1581227347621.png" alt="1581227347621"></p><p><img src="/images/javawz/aa1581227368817.png" alt="1581227368817"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类和对象&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#类和对象&quot;&gt;&lt;/a&gt; 类和对象&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/javawz/aa1581227347621.png&quot; alt=&quot;1581227347621&quot;&gt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>面向对象思想的举例</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00024%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%9D%E6%83%B3%E7%9A%84%E4%B8%BE%E4%BE%8B/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00024面向对象思想的举例/</id>
    <published>2020-02-09T05:44:02.000Z</published>
    <updated>2020-02-09T05:46:38.927Z</updated>
    
    <content type="html"><![CDATA[<h1 id="举例"><a class="markdownIt-Anchor" href="#举例"></a> 举例</h1><p><img src="/images/javawz/aa1581227107719.png" alt="1581227107719"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;举例&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#举例&quot;&gt;&lt;/a&gt; 举例&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/javawz/aa1581227107719.png&quot; alt=&quot;1581227107719&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>面向对象思想的概述</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00023%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%9D%E6%83%B3%E7%9A%84%E6%A6%82%E8%BF%B0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00023面向对象思想的概述/</id>
    <published>2020-02-09T05:29:23.000Z</published>
    <updated>2020-02-09T05:41:57.338Z</updated>
    
    <content type="html"><![CDATA[<p>面向过程: 当需要实现一个功能的时候,每一个具体的步骤都要亲力亲为,详细处理每一个细节.</p><p>面向对象: 当需要实现一个功能的时候,不关心具体的步骤,而是找一个已经具有该功能的人,来帮我做事儿.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top.banji;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">23</span>,<span class="number">4</span>,<span class="number">15</span>,<span class="number">51</span>,<span class="number">2</span>,<span class="number">52</span>,<span class="number">23</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//要求打印格式为[123,,123,41,123,]</span></span><br><span class="line">        <span class="comment">//使用面向过程,每一个步骤细节都要亲力亲为</span></span><br><span class="line">        System.out.print(<span class="string">"["</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == array.length - <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(array[i] + <span class="string">"]"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.print(array[i] + <span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"======================"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用面向对象</span></span><br><span class="line">        <span class="comment">//找一个JDK给我们提供好的Arrays类</span></span><br><span class="line">        <span class="comment">//其中有一个toString方法,直接就能把数组变成想要的格式字符串</span></span><br><span class="line">        System.out.println(Arrays.toString(array));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;面向过程: 当需要实现一个功能的时候,每一个具体的步骤都要亲力亲为,详细处理每一个细节.&lt;/p&gt;
&lt;p&gt;面向对象: 当需要实现一个功能的时候,不关心具体的步骤,而是找一个已经具有该功能的人,来帮我做事儿.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组作为方法的返回值返回</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00022%E6%95%B0%E7%BB%84%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95%E8%BF%94%E5%9B%9E%E5%80%BC%E8%BF%94%E5%9B%9E/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00022数组作为方法返回值返回/</id>
    <published>2020-02-08T10:20:21.000Z</published>
    <updated>2020-02-09T04:59:23.096Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值"><a class="markdownIt-Anchor" href="#一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值"></a> 一个方法可以有1个或多个参数;但是只能有0个或1个返回值,不能有个多返回值.</h5><h5 id="如果希望一个方法当中产生了多个结果数据进行返回-怎么办"><a class="markdownIt-Anchor" href="#如果希望一个方法当中产生了多个结果数据进行返回-怎么办"></a> 如果希望一个方法当中产生了多个结果数据进行返回 , 怎么办 ?</h5><h5 id="解决方案使用一个数组作为返回值类型即可"><a class="markdownIt-Anchor" href="#解决方案使用一个数组作为返回值类型即可"></a> 解决方案:使用一个数组作为返回值类型即可.</h5><h5 id="任何数据类型都能作为方法的参数类型或者返回值类型"><a class="markdownIt-Anchor" href="#任何数据类型都能作为方法的参数类型或者返回值类型"></a> 任何数据类型都能作为方法的参数类型,或者返回值类型.</h5><h5 id="数组作为方法的参数传递进去的其实是数组的地址值"><a class="markdownIt-Anchor" href="#数组作为方法的参数传递进去的其实是数组的地址值"></a> 数组作为方法的参数,传递进去的其实是数组的地址值</h5><h5 id="数组作为方法的返回值返回的其实是数组的地址值"><a class="markdownIt-Anchor" href="#数组作为方法的返回值返回的其实是数组的地址值"></a> 数组作为方法的返回值,返回的其实是数组的地址值</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test020</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = sumAndPingJunShu(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : array) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] sumAndPingJunShu(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = a + b + c;</span><br><span class="line">        <span class="keyword">int</span> pjs = (a + b + c) / <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> cj  = a * b * c;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;sum,pjs,cj&#125;;</span><br><span class="line">        <span class="keyword">return</span>  array;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值&quot;&gt;&lt;/a&gt; 一个方法可以有1个或多个参数;但是
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组作为方法参数</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00021%E6%95%B0%E7%BB%84%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00021数组作为方法参数/</id>
    <published>2020-02-08T10:12:58.000Z</published>
    <updated>2020-02-08T10:17:30.536Z</updated>
    
    <content type="html"><![CDATA[<h5 id="数组可以作为方法的参数"><a class="markdownIt-Anchor" href="#数组可以作为方法的参数"></a> 数组可以作为方法的参数</h5><h5 id="当调用方法的时候向方法的小括号进行传参传递进去的其实是数组的地址值"><a class="markdownIt-Anchor" href="#当调用方法的时候向方法的小括号进行传参传递进去的其实是数组的地址值"></a> 当调用方法的时候,向方法的小括号进行传参,传递进去的其实是数组的地址值.</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test019</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">234</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">124</span>,<span class="number">21</span>,<span class="number">315</span>,<span class="number">15</span>,<span class="number">1235</span>,<span class="number">461</span>,<span class="number">235</span>,<span class="number">1</span>,<span class="number">34632</span>,<span class="number">135</span>,<span class="number">124151</span>,<span class="number">32515</span>,<span class="number">612</span>,<span class="number">351</span>,<span class="number">35</span>&#125;;</span><br><span class="line"></span><br><span class="line">        arraySort(array); <span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line">        arrayOut(array);<span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line">        funFZ(array);<span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line">        arrayOut(array);<span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//冒泡法排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arraySort</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array.length - <span class="number">1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; array.length - (i + <span class="number">1</span>);j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(array[j] &lt; array[j + <span class="number">1</span>] )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = array[j];</span><br><span class="line">                    array[j] = array[j + <span class="number">1</span>];</span><br><span class="line">                    array[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组遍历输出</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arrayOut</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : array) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">"   "</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">        System.out.println(<span class="string">"==================================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组反转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funFZ</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = array.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(;min &lt; max;min++,max--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = array[min];</span><br><span class="line">            array[min] = array[max];</span><br><span class="line">            array[max] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;数组可以作为方法的参数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组可以作为方法的参数&quot;&gt;&lt;/a&gt; 数组可以作为方法的参数&lt;/h5&gt;
&lt;h5 id=&quot;当调用方法的时候向方法的小括号进行传参传递进去的其实是数组的地址值&quot;&gt;&lt;a cl
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>获取数组的最大值</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00019%E8%8E%B7%E5%8F%96%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00019获取数组的最大值/</id>
    <published>2020-02-08T07:37:28.000Z</published>
    <updated>2020-02-08T09:32:21.502Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javawz/aa1581147624905.png" alt="1581147624905"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test018</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">21</span>,<span class="number">41</span>,<span class="number">1235</span>,<span class="number">21</span>,<span class="number">12</span>,<span class="number">52</span>,<span class="number">2351</span>,<span class="number">234</span>,<span class="number">12</span>,<span class="number">234</span>,<span class="number">23</span>,<span class="number">123412</span>,<span class="number">12</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> max = array[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; array.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(max &lt; array[i]) <span class="comment">// 如果max 小于 array[i],那么将array[i]的值,赋值给max</span></span><br><span class="line">            &#123;</span><br><span class="line">                max = array[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"array数组的最大值:"</span> + max);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/javawz/aa1581147624905.png&quot; alt=&quot;1581147624905&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组的遍历输出</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00020%E6%95%B0%E7%BB%84%E7%9A%84%E9%81%8D%E5%8E%86%E8%BE%93%E5%87%BA/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00020数组的遍历输出/</id>
    <published>2020-02-08T07:25:09.000Z</published>
    <updated>2020-02-08T09:32:08.533Z</updated>
    
    <content type="html"><![CDATA[<h5 id="遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出"><a class="markdownIt-Anchor" href="#遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出"></a> 遍历数组,说的就是对数组当中的每一个元素进行逐一处理.默认的处理方式就是打印输出.</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test017</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">324</span>,<span class="number">12</span>,<span class="number">234</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">51</span>,<span class="number">234</span>,<span class="number">21</span>&#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//第一种方法,将array的每一个元素逐次赋值给i</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i  : array) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"======================"</span>);</span><br><span class="line">        <span class="comment">//第二种方法,将i当做array的下标,通过i的不断增加,来打印array数组,且i小于array.length</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(array[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出&quot;&gt;&lt;/a&gt; 遍历数组,说的就是对数
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组元素反转</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00018%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%8F%8D%E8%BD%AC/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00018数组元素反转/</id>
    <published>2020-02-08T07:13:31.000Z</published>
    <updated>2020-02-08T09:09:01.983Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javawz/aa1581152650601.png" alt="1581152650601"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test019</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">234</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">124</span>,<span class="number">21</span>,<span class="number">315</span>,<span class="number">15</span>,<span class="number">1235</span>,<span class="number">461</span>,<span class="number">235</span>,<span class="number">1</span>,<span class="number">34632</span>,<span class="number">135</span>,<span class="number">124151</span>,<span class="number">32515</span>,<span class="number">612</span>,<span class="number">351</span>,<span class="number">35</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数组排序</span></span><br><span class="line">        arraySort(array);</span><br><span class="line">        <span class="comment">//数组遍历输出</span></span><br><span class="line">        arrayOut(array);</span><br><span class="line">        <span class="comment">//数组反转</span></span><br><span class="line">        funFZ(array);</span><br><span class="line">        <span class="comment">//数组遍历输出</span></span><br><span class="line">        arrayOut(array);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//冒泡法排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arraySort</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array.length - <span class="number">1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; array.length - (i + <span class="number">1</span>);j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(array[j] &lt; array[j + <span class="number">1</span>] )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = array[j];</span><br><span class="line">                    array[j] = array[j + <span class="number">1</span>];</span><br><span class="line">                    array[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组遍历输出</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arrayOut</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : array) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">"   "</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">        System.out.println(<span class="string">"==================================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组反转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funFZ</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = array.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(;min &lt; max;min++,max--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = array[min];</span><br><span class="line">            array[min] = array[max];</span><br><span class="line">            array[max] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/javawz/aa1581152650601.png&quot; alt=&quot;1581152650601&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>获取数组长度</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00017%E8%8E%B7%E5%8F%96%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00017获取数组长度/</id>
    <published>2020-02-08T07:13:31.000Z</published>
    <updated>2020-02-08T07:16:52.078Z</updated>
    
    <content type="html"><![CDATA[<h5 id="如何获取数组的长度格式"><a class="markdownIt-Anchor" href="#如何获取数组的长度格式"></a> 如何获取数组的长度,格式:</h5><h5 id="span-stylecolorred数组名称lengthspan"><a class="markdownIt-Anchor" href="#span-stylecolorred数组名称lengthspan"></a> <span style="color:red;">数组名称.length</span></h5><h5 id="这将会得到一个int数字代表数组的长度"><a class="markdownIt-Anchor" href="#这将会得到一个int数字代表数组的长度"></a> 这将会得到一个int数字,代表数组的长度.</h5><h5 id="数组一旦创建程序运行期间长度不可发生改变"><a class="markdownIt-Anchor" href="#数组一旦创建程序运行期间长度不可发生改变"></a> 数组一旦创建,程序运行期间,长度不可发生改变.</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">如何获取数组的长度,格式:</span></span><br><span class="line"><span class="comment">数组名称.length</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这将会得到一个int数字,代表数组的长度.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">数组一旦创建,程序运行期间,长度不可发生改变.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test016</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arrayA = &#123;<span class="number">12</span>,<span class="number">12</span>,<span class="number">324</span>,<span class="number">5</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">535</span>,<span class="number">13</span>&#125;;</span><br><span class="line">        <span class="comment">//获取数组arrayA的长度</span></span><br><span class="line">        System.out.println(<span class="string">"arrayA数组的长度:"</span> + arrayA.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arrayB = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">        <span class="comment">//获取数组arrayB的长度</span></span><br><span class="line">        System.out.println(<span class="string">"arrayB数组的长度:"</span> + arrayB.length);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;如何获取数组的长度格式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#如何获取数组的长度格式&quot;&gt;&lt;/a&gt; 如何获取数组的长度,格式:&lt;/h5&gt;
&lt;h5 id=&quot;span-stylecolorred数组名称lengthspan&quot;&gt;&lt;a c
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>常见问题 空指针异常</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00016%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-%E7%A9%BA%E6%8C%87%E9%92%88%E5%BC%82%E5%B8%B8/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00016常见问题-空指针异常/</id>
    <published>2020-02-08T06:59:12.000Z</published>
    <updated>2020-02-08T07:06:45.688Z</updated>
    
    <content type="html"><![CDATA[<h5 id="所有的引用类型变量都可以赋值为一个null值但是代表其中什么都没有"><a class="markdownIt-Anchor" href="#所有的引用类型变量都可以赋值为一个null值但是代表其中什么都没有"></a> 所有的引用类型变量,都可以赋值为一个null值.但是代表其中什么都没有.</h5><h5 id="数组必须进行new初始化才能使用其中的元素"><a class="markdownIt-Anchor" href="#数组必须进行new初始化才能使用其中的元素"></a> 数组必须进行new初始化才能使用其中的元素</h5><h5 id="如果只是赋值了一个null没有进行new创建"><a class="markdownIt-Anchor" href="#如果只是赋值了一个null没有进行new创建"></a> 如果只是赋值了一个null,没有进行new创建,</h5><h5 id="那么将会发生-空指针异常-nullpointerexception"><a class="markdownIt-Anchor" href="#那么将会发生-空指针异常-nullpointerexception"></a> 那么将会发生:    空指针异常 NullPointerException</h5><h5 id="原因忘了补new"><a class="markdownIt-Anchor" href="#原因忘了补new"></a> 原因:忘了补new</h5><h5 id="解决补上new"><a class="markdownIt-Anchor" href="#解决补上new"></a> 解决:补上new</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test015</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    所有的引用类型变量,都可以赋值为一个null值.但是代表其中什么都没有.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    数组必须进行new初始化才能使用其中的元素</span></span><br><span class="line"><span class="comment">    如果只是赋值了一个null,没有进行new创建,</span></span><br><span class="line"><span class="comment">    那么将会发生:</span></span><br><span class="line"><span class="comment">        空指针异常 NullPointerException</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    原因:忘了补new</span></span><br><span class="line"><span class="comment">    解决:补上new</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//array = new int[3];</span></span><br><span class="line">        System.out.println(array[<span class="number">0</span>]);<span class="comment">//空指针异常</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;所有的引用类型变量都可以赋值为一个null值但是代表其中什么都没有&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#所有的引用类型变量都可以赋值为一个null值但是代表其中什么都没有&quot;&gt;&lt;/a&gt; 所有的引用类型变量,都可以赋值为一个nul
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组索引越界异常</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00015%E6%95%B0%E7%BB%84%E7%B4%A2%E5%BC%95%E8%B6%8A%E7%95%8C%E5%BC%82%E5%B8%B8/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00015数组索引越界异常/</id>
    <published>2020-02-08T06:46:01.000Z</published>
    <updated>2020-02-08T06:59:30.245Z</updated>
    
    <content type="html"><![CDATA[<h5 id="数组索引从0开始一直到数组长度-1为止"><a class="markdownIt-Anchor" href="#数组索引从0开始一直到数组长度-1为止"></a> 数组索引从0开始,一直到数组长度-1为止.</h5><h5 id="如果访问数组元素的时候索引编号并不存在那么将会发生数组索引越界异常"><a class="markdownIt-Anchor" href="#如果访问数组元素的时候索引编号并不存在那么将会发生数组索引越界异常"></a> 如果访问数组元素的时候,索引编号并不存在,那么将会发生数组索引越界异常</h5><h5 id="提示arrayindexoutofboundsexception"><a class="markdownIt-Anchor" href="#提示arrayindexoutofboundsexception"></a> 提示:ArrayIndexOutOfBoundsException</h5><h5 id="原因-索引编号写错了"><a class="markdownIt-Anchor" href="#原因-索引编号写错了"></a> 原因: 索引编号写错了</h5><h5 id="解决-修改成为存在的正确索引编号"><a class="markdownIt-Anchor" href="#解决-修改成为存在的正确索引编号"></a> 解决: 修改成为存在的正确索引编号.</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test014</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    数组索引从0开始,一直到数组长度-1为止.</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    如果访问数组元素的时候,索引编号并不存在,那么将会发生数组索引越界异常</span></span><br><span class="line"><span class="comment">    ArrayIndexOutOfBoundsException</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    原因: 索引编号写错了</span></span><br><span class="line"><span class="comment">    解决: 修改成为存在的正确索引编号.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">        array[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        array[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">        array[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">        array[<span class="number">3</span>] = <span class="number">4</span>; <span class="comment">// 数组越界,发生异常,导致错误</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;数组索引从0开始一直到数组长度-1为止&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组索引从0开始一直到数组长度-1为止&quot;&gt;&lt;/a&gt; 数组索引从0开始,一直到数组长度-1为止.&lt;/h5&gt;
&lt;h5 id=&quot;如果访问数组元素的时候索引编
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>两个引用指向同一个数组</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00014%E4%B8%A4%E4%B8%AA%E5%BC%95%E7%94%A8%E6%8C%87%E5%90%91%E5%90%8C%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00014两个引用指向同一个数组/</id>
    <published>2020-02-07T20:05:38.000Z</published>
    <updated>2020-02-07T20:08:12.994Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200207202603.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">package xiaochenyan.top;</span><br><span class="line"></span><br><span class="line">public class test013 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int[] arrayA = new int[3];</span><br><span class="line">        System.out.println(arrayA);</span><br><span class="line">        System.out.println(arrayA[0]);</span><br><span class="line">        System.out.println(arrayA[1]);</span><br><span class="line">        System.out.println(arrayA[2]);</span><br><span class="line">        System.out.println(&quot;====================&quot;);</span><br><span class="line">        arrayA[1] = 10;</span><br><span class="line">        arrayA[2] = 20;</span><br><span class="line">        System.out.println(arrayA);</span><br><span class="line">        System.out.println(arrayA[0]);</span><br><span class="line">        System.out.println(arrayA[1]);</span><br><span class="line">        System.out.println(arrayA[2]);</span><br><span class="line">        System.out.println(&quot;====================&quot;);</span><br><span class="line"></span><br><span class="line">        int[] arrayB = arrayA;</span><br><span class="line">        System.out.println(arrayB);</span><br><span class="line">        System.out.println(arrayB[0]);</span><br><span class="line">        System.out.println(arrayB[1]);</span><br><span class="line">        System.out.println(arrayB[2]);</span><br><span class="line">        System.out.println(&quot;====================&quot;);</span><br><span class="line">        arrayB[1] = 10;</span><br><span class="line">        arrayB[2] = 20;</span><br><span class="line">        System.out.println(arrayB);</span><br><span class="line">        System.out.println(arrayB[0]);</span><br><span class="line">        System.out.println(arrayB[1]);</span><br><span class="line">        System.out.println(arrayB[2]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200207202603.png&quot; alt&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>两个数组的内存图</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00013%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00013两个数组的内存图/</id>
    <published>2020-02-07T19:28:56.000Z</published>
    <updated>2020-02-07T19:35:14.584Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test012</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];<span class="comment">//创建一个包含三个元素的array1数组</span></span><br><span class="line">        System.out.println(array1);<span class="comment">//打印array1的地址</span></span><br><span class="line">        array1[<span class="number">1</span>] = <span class="number">2</span>;<span class="comment">//修改array1[1]的值</span></span><br><span class="line">        array1[<span class="number">2</span>] = <span class="number">100</span>;<span class="comment">//修改array1[2]的值</span></span><br><span class="line">        <span class="keyword">int</span>[] array2 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];<span class="comment">//创建一个包含三个元素的array2数组</span></span><br><span class="line">        System.out.println(array2);<span class="comment">//打印array2的地址</span></span><br><span class="line">        array2[<span class="number">1</span>] = <span class="number">300</span>;<span class="comment">//修改array2[1]的值</span></span><br><span class="line">        array2[<span class="number">2</span>] = <span class="number">25</span>;<span class="comment">//修改array2[2]的值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/javawz/00002.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>一个数组的内存图</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00012%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00012一个数组的内存图/</id>
    <published>2020-02-07T18:51:11.000Z</published>
    <updated>2020-02-07T18:55:45.444Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test011</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];<span class="comment">//从堆区创建一个包含三个元素的数组</span></span><br><span class="line"></span><br><span class="line">        System.out.println(array);</span><br><span class="line"></span><br><span class="line">        array[<span class="number">1</span>] = <span class="number">2</span>; <span class="comment">//从堆区把array[1]的值修改成2</span></span><br><span class="line"></span><br><span class="line">        array[<span class="number">2</span>] = <span class="number">200</span>;<span class="comment">//从堆区把array[2]的值修改成100</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/javawz/00001.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>Java中的内存划分</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/07/java00011Java%E4%B8%AD%E7%9A%84%E5%86%85%E5%AD%98%E5%88%92%E5%88%86/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/07/java00011Java中的内存划分/</id>
    <published>2020-02-07T15:10:32.000Z</published>
    <updated>2020-02-07T15:42:07.946Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java的内存需要划分成为5个部分"><a class="markdownIt-Anchor" href="#java的内存需要划分成为5个部分"></a> Java的内存需要划分成为5个部分</h2><h4 id="1span-style-colorred栈stackspan-存放的都是方法中的局部变量-方法的运行一定要在栈当中运行"><a class="markdownIt-Anchor" href="#1span-style-colorred栈stackspan-存放的都是方法中的局部变量-方法的运行一定要在栈当中运行"></a> 1.<span style="color:red;">栈（Stack）</span>: 存放的都是方法中的局部变量。方法的运行一定要在栈当中运行。</h4><p>   局部变量：方法的参数，或者是方法{}内部的变量</p><p>   作用域：一但超出作用域，立刻从栈内存中消失。</p><h4 id="2span-style-colorred堆heap凡是new出来的内存都在堆区中-span"><a class="markdownIt-Anchor" href="#2span-style-colorred堆heap凡是new出来的内存都在堆区中-span"></a> 2.<span style="color:red;">堆（Heap）：凡是new出来的内存，都在堆区中。</span></h4><p>     堆内存里面的内存都有一个内存地址值：16进制</p><p>     堆内存里面的数据，都有默认值。规则：</p><p>     如果是整数           默认值为0</p><p>     如果是浮点数          默认值为0.0</p><p>     如果是字符           默认值为‘\u0000’</p><p>     如果是布尔           默认值为false</p><p>     如果是引用类型    默认值为null</p><h4 id="3span-style-colorred方法区method-areaspan存储class相关的信息包含方法的信息"><a class="markdownIt-Anchor" href="#3span-style-colorred方法区method-areaspan存储class相关的信息包含方法的信息"></a> 3.<span style="color:red;">方法区（Method Area）</span>：存储.class相关的信息，包含方法的信息</h4><h4 id="4span-style-colorred本地方法栈native-method-stackspan与操作系统相关"><a class="markdownIt-Anchor" href="#4span-style-colorred本地方法栈native-method-stackspan与操作系统相关"></a> 4.<span style="color:red;">本地方法栈（Native Method Stack）</span>：与操作系统相关。</h4><h4 id="5span-style-colorred寄存器pc-registerspan与cpu相关"><a class="markdownIt-Anchor" href="#5span-style-colorred寄存器pc-registerspan与cpu相关"></a> 5.<span style="color:red;">寄存器（PC Register）</span>：与CPU相关。</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;java的内存需要划分成为5个部分&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#java的内存需要划分成为5个部分&quot;&gt;&lt;/a&gt; Java的内存需要划分成为5个部分&lt;/h2&gt;
&lt;h4 id=&quot;1span-style-colorred栈s
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/06/java00010%E6%95%B0%E7%BB%84/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/06/java00010数组/</id>
    <published>2020-02-05T21:39:02.000Z</published>
    <updated>2020-02-07T11:50:26.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h1><h4 id="数组的概念"><a class="markdownIt-Anchor" href="#数组的概念"></a> 数组的概念</h4><p>​数组是引用数据类型<br>​类型要统一<br>​数组的长度在运行期间不可以改变</p><h4 id="初始化"><a class="markdownIt-Anchor" href="#初始化"></a> 初始化</h4><h5 id="动态初始化指定长度"><a class="markdownIt-Anchor" href="#动态初始化指定长度"></a> 动态初始化（指定长度）</h5><p>​数据类型[] 数组名称 = new 数据类型[数组长度]</p><p>​使用动态初始化数组的时候,其中的元素将会自动拥有一个默认值.规则如下:</p><ol><li>如果是整数类型,那么默认值为0;</li><li>如果是浮点类型,那么默认值为0.0;</li><li>如果是字符类型,那么默认值为’\u0000’ u代表Unicode ,0000代表十六进制数;</li><li>如果是布尔类型,那么默认值为false;</li><li>如果是引用类型,那么默认值为null(空常量);</li></ol><h5 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h5><p>静态初始化其实也有默认值的过程,只不过系统自动马上将默认值替换成为了大括号当中的具体数值.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arr1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line">        System.out.println(arr1[<span class="number">0</span>]);<span class="comment">//默认值为0;</span></span><br><span class="line">        System.out.println(arr1[<span class="number">1</span>]);<span class="comment">//默认值为0;</span></span><br><span class="line">        System.out.println(arr1[<span class="number">2</span>]);<span class="comment">//默认值为0;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*数组赋值*/</span></span><br><span class="line">        arr1[<span class="number">1</span>] = <span class="number">100</span>;</span><br><span class="line">        System.out.println(arr1[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="拆分格式"><a class="markdownIt-Anchor" href="#拆分格式"></a> 拆分格式</h5><ol><li><h4 id="数据类型-数组名"><a class="markdownIt-Anchor" href="#数据类型-数组名"></a> 数据类型[] 数组名;</h4><ol><li>数组名 = new 数据类型名[]{元素1,元素2,…}</li><li>数组名 = new  数据类型名[长度];</li></ol></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arr;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">10</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        <span class="comment">//arr = new int[10];</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="静态初始化指定内容"><a class="markdownIt-Anchor" href="#静态初始化指定内容"></a> 静态初始化(指定内容)</h4><p>​数据类型[] 数组名 = new 数据类型[] {元素1,元素2,…,元素n};</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public class test010 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">    </span><br><span class="line">    int[] arr = new int[]&#123;1,2,3,4&#125;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="省略格式"><a class="markdownIt-Anchor" href="#省略格式"></a> 省略格式</h5><p>​数据类型[] 数组名 = {元素1,元素2,…,元素n};</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="拆分格式-2"><a class="markdownIt-Anchor" href="#拆分格式-2"></a> 拆分格式</h5><p>​不能再用省略格式<br>​数据类型[] 数组名;<br>​数组名 = new 数据类型名[]{元素1,元素2,…}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[] arr;</span><br><span class="line">arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="访问数组元素"><a class="markdownIt-Anchor" href="#访问数组元素"></a> 访问数组元素</h4><p>​直接打印数组名,会打印数组内存地址哈希值<br>​格式 :   数组名[索引值]<br>​索引值从0开始到数组长度-1结束</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[] arr;</span><br><span class="line">arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">System.out.println(arr);<span class="comment">//打印数组内存地址哈希值</span></span><br><span class="line">System.out.println(arr[<span class="number">0</span>]);<span class="comment">//使用数组下标访问数组元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length;i++)<span class="comment">//数组下标不大于数组的长度</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数组&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组&quot;&gt;&lt;/a&gt; 数组&lt;/h1&gt;
&lt;h4 id=&quot;数组的概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组的概念&quot;&gt;&lt;/a&gt; 数组的概念&lt;/h4&gt;
&lt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>方法定义和使用</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/06/java00009%E6%96%B9%E6%B3%95%E5%AE%9A%E4%B9%89%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/06/java00009方法定义和使用/</id>
    <published>2020-02-05T21:13:51.000Z</published>
    <updated>2020-02-05T21:34:04.363Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h3><h4 id="方法定义"><a class="markdownIt-Anchor" href="#方法定义"></a> 方法定义</h4><p>​以public static开头<br>​public static 类型 方法名()<br>​{</p><p>​}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//语句块</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法的三种调用格式"><a class="markdownIt-Anchor" href="#方法的三种调用格式"></a> 方法的三种调用格式</h4><h5 id="单独调用"><a class="markdownIt-Anchor" href="#单独调用"></a> 单独调用</h5><p>​方法名（[参数]）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        funName(<span class="number">20</span>);</span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//语句块</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="打印调用"><a class="markdownIt-Anchor" href="#打印调用"></a> 打印调用</h5><p>​System.out.println(方法名（[参数]）)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        System.out.println( funName(<span class="number">20</span>) );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="赋值调用"><a class="markdownIt-Anchor" href="#赋值调用"></a> 赋值调用</h5><p>​int a = 方法名（[参数]）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = funName(<span class="number">20</span>);<span class="comment">//赋值调用</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法分为两种"><a class="markdownIt-Anchor" href="#方法分为两种"></a> 方法分为两种</h4><h5 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h5><p>​有参数<br>​无参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//有参数方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">()</span> <span class="comment">//无参数方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="返回值"><a class="markdownIt-Anchor" href="#返回值"></a> 返回值</h5><p>​有返回值<br>​无返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//有返回值方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funName</span><span class="params">()</span> <span class="comment">//无返回值方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法注意事项"><a class="markdownIt-Anchor" href="#方法注意事项"></a> 方法注意事项</h4><p>方法应该定义类中，不能定义在方法中<br>方法定义没有前后顺序<br>方法定义之后不会自动执行，需要手动调用<br>如果方法有返回值，必须写上   return 返回值<br>返回的数据必须要和返回值类型一致<br>对于void返回值类型，可以只写return；<br>一个方法可以有多个return，但只能执行其中一个</p><h4 id="方法重载overload"><a class="markdownIt-Anchor" href="#方法重载overload"></a> 方法重载Overload</h4><p>如果功能相同，参数不同，可以使用方法重载</p><h5 id="特征"><a class="markdownIt-Anchor" href="#特征"></a> 特征</h5><p>​方法名要相同<br>​参数个数不同<br>​参数类型不同<br>​类型名 参数顺序不同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">()</span> <span class="comment">//参数个数不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> <span class="comment">//参数个数不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">int</span> b)</span> <span class="comment">//参数类型不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">double</span> b)</span> <span class="comment">//参数顺序不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + (<span class="keyword">int</span>)b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#方法&quot;&gt;&lt;/a&gt; 方法&lt;/h3&gt;
&lt;h4 id=&quot;方法定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#方法定义&quot;&gt;&lt;/a&gt; 方法定义&lt;/h4&gt;
&lt;p&gt;​
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
</feed>
