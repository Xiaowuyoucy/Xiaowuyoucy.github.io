<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanChen</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaowuyoucy.github.io/"/>
  <updated>2020-02-03T07:10:38.149Z</updated>
  <id>https://xiaowuyoucy.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://xiaowuyoucy.github.io/2020/02/03/Java%E7%BC%96%E8%AF%91%E5%92%8C%E8%BF%90%E8%A1%8C/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/03/Java编译和运行/</id>
    <published>2020-02-03T05:07:27.528Z</published>
    <updated>2020-02-03T07:10:38.149Z</updated>
    
    <content type="html"><![CDATA[<h1 id="div-idkt目录div"><a class="markdownIt-Anchor" href="#div-idkt目录div"></a> <div id="kt">目录:</div></h1><h5 id="a-styletext-decoration-nonecolorblack-hrefmd1-源文件后缀名a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd1-源文件后缀名a"></a> <a style="text-decoration: none;color:black;" href="#md1"> 源文件后缀名</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd2编写java源文件模板a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd2编写java源文件模板a"></a> <a style="text-decoration: none;color:black;" href="#md2">编写java源文件模板</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd3编译和运行a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd3编译和运行a"></a> <a style="text-decoration: none;color:black;" href="#md3">编译和运行</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd4注释a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd4注释a"></a> <a style="text-decoration: none;color:black;" href="#md4">注释</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd5关键字a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd5关键字a"></a> <a style="text-decoration: none;color:black;" href="#md5">关键字</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd6标识符a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd6标识符a"></a> <a style="text-decoration: none;color:black;" href="#md6">标识符</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd7常量a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd7常量a"></a> <a style="text-decoration: none;color:black;" href="#md7">常量</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd8数据类型a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd8数据类型a"></a> <a style="text-decoration: none;color:black;" href="#md8">数据类型</a></h5><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefkt-div-idmd1源文件后缀名div-a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefkt-div-idmd1源文件后缀名div-a"></a> <a style="text-decoration: none;color:black;" href="#kt"> <div id="md1">源文件后缀名</div> </a></h3><p>java的源文件后缀名为  *.java</p><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd2编写java源文件模板diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd2编写java源文件模板diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md2">编写java源文件模板</div></a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Hello World....."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中filename对应着源文件名</p><p>System.out.println为输出函数 ,输出内容,结尾时换行</p><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd3编译和运行diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd3编译和运行diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md3">编译和运行</div></a></h3><p>编译　javac 文件名　　　　编译成功会生成一个class文件</p><p>运行　java 文件名　　　　　文件名后面不要带class后缀</p><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd4注释diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd4注释diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md4">注释</div></a></h3><p>// 单行注释</p><p>/**/多行注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//我是单行注释</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd5关键字diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd5关键字diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md5">关键字</div></a></h3><ul><li>​特征<ul><li>​全部小写</li><li>​在增强版记事本中有颜色</li></ul></li></ul><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd6标识符diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd6标识符diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md6">标识符</div></a></h3><ul><li><h5 id="命名规则"><a class="markdownIt-Anchor" href="#命名规则"></a> 命名规则</h5><ul><li>可以包含字母，数字，下划线，$</li><li>不能以数字开头</li><li>标识符不能是关键字</li></ul></li><li><h5 id="命名规范"><a class="markdownIt-Anchor" href="#命名规范"></a> 命名规范</h5><ul><li>类名　　大驼峰式 :首字母大写，后面每个单词首字母大写 MyNmae</li><li>变量名　　小驼峰式：首字母小写，后面每个单词首字母大写nameSize</li><li>方法名　　小驼峰式：首字母小写，后面每个单词首字母大写nameSize</li></ul></li></ul><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd7常量diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd7常量diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md7">常量</div></a></h3><p>程序运行期间，固定不变的量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mian</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String a = <span class="string">"abc"</span>;<span class="comment">//字符串常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> iZhengXing = <span class="number">123</span>;<span class="comment">//整型常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> fXiaoShu = <span class="number">123.2F</span>;<span class="comment">//浮点型常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">char</span> cZifu = <span class="string">'c'</span>;<span class="comment">//字符常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">boolean</span> isBool = <span class="keyword">true</span>;<span class="comment">//布尔型常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//还有一个null  空常量</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd8数据类型diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd8数据类型diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md8">数据类型</div></a></h3><h4 id="整型"><a class="markdownIt-Anchor" href="#整型"></a> 整型</h4><p>byte，　short，　int，　long</p><h4 id="浮点型"><a class="markdownIt-Anchor" href="#浮点型"></a> 浮点型</h4><p>​float，double</p><h4 id="布尔型"><a class="markdownIt-Anchor" href="#布尔型"></a> 布尔型</h4><p>​boolean</p><h4 id="字符型"><a class="markdownIt-Anchor" href="#字符型"></a> 字符型</h4><p>​char<br>​</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mian</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       <span class="comment">/***********整型************/</span></span><br><span class="line">       <span class="keyword">byte</span> bXinBie;<span class="comment">//1个字节</span></span><br><span class="line">       <span class="keyword">short</span>sXiaoZheng;<span class="comment">//2个字节</span></span><br><span class="line">       <span class="keyword">int</span>iRenLei;<span class="comment">//4个字节</span></span><br><span class="line">       <span class="keyword">long</span>lShaZi;<span class="comment">//4个字节</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**********浮点型************/</span></span><br><span class="line">        <span class="keyword">float</span> fFengShu;<span class="comment">//4个字节</span></span><br><span class="line">        <span class="keyword">double</span> dYuanZhouLv;<span class="comment">//8个字节</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**********布尔型************/</span></span><br><span class="line">        <span class="keyword">boolean</span> isOk;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**********字符型************/</span></span><br><span class="line">        <span class="keyword">char</span> cPingFen;<span class="comment">//1个字节</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h4><ol><li>​字符串不是基本类型，而是引用类型</li><li>​浮点型可能只是一个近似值，并非精确值</li><li>​数据范围与字节数不一定相关，例如float数据比long更加广泛，但是float更加广泛</li><li>​浮点数默认是double类型，如果要用float类型要加后缀F</li><li>​整数默认类型是int，如果要用long，后缀要加L</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;div-idkt目录div&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#div-idkt目录div&quot;&gt;&lt;/a&gt; &lt;div id=&quot;kt&quot;&gt;目录:&lt;/div&gt;&lt;/h1&gt;
&lt;h5 id=&quot;a-styletext-decoration-no
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基础知识</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/03/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/03/基础知识/</id>
    <published>2020-02-03T03:22:30.000Z</published>
    <updated>2020-02-03T05:03:42.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机基础知识"><a class="markdownIt-Anchor" href="#计算机基础知识"></a> 计算机基础知识</h1><h2 id="二进制"><a class="markdownIt-Anchor" href="#二进制"></a> 二进制</h2><h3 id="十进制转二进制"><a class="markdownIt-Anchor" href="#十进制转二进制"></a> 十进制转二进制</h3><p>用辗转相除法:</p><p><img src="/images/javawz/1580701296582.png" alt="1580701296582"></p><h3 id="二进制转十进制"><a class="markdownIt-Anchor" href="#二进制转十进制"></a> 二进制转十进制</h3><p>用二进制分别乘以位权,在进行相加</p><p><img src="/images/javawz/1580701692321.png" alt="1580701692321"></p><h2 id="存储单位"><a class="markdownIt-Anchor" href="#存储单位"></a> 存储单位</h2><p>一般情况下最小单位为bit</p><p>1Byte = 8bit</p><p>1KB = 1024B</p><p>1MB = 1024KB</p><p>1GB = 1024MB</p><p>1TB = 1024GB</p><h2 id="命令提示符"><a class="markdownIt-Anchor" href="#命令提示符"></a> 命令提示符</h2><h3 id="ms-dos"><a class="markdownIt-Anchor" href="#ms-dos"></a> MS-DOS</h3><p>MS代表微软,DOS 代表 Disk Operating System （磁盘操作系统）</p><h3 id="磁盘命令"><a class="markdownIt-Anchor" href="#磁盘命令"></a> 磁盘命令</h3><h4 id="改变磁盘符"><a class="markdownIt-Anchor" href="#改变磁盘符"></a> 改变磁盘符</h4><h5 id="直接-输入磁盘符-并按下回车"><a class="markdownIt-Anchor" href="#直接-输入磁盘符-并按下回车"></a> 直接 输入磁盘符 并按下回车</h5><p><img src="/images/javawz/1580702094756.png" alt="1580702094756"></p><h4 id="改变目录"><a class="markdownIt-Anchor" href="#改变目录"></a> 改变目录</h4><h5 id="cd-目录-按下tab键会自动补全"><a class="markdownIt-Anchor" href="#cd-目录-按下tab键会自动补全"></a> cd 目录        按下tab键会自动补全</h5><p><img src="/images/javawz/1580702169460.png" alt="1580702169460"></p><h5 id="cd-返回上一层"><a class="markdownIt-Anchor" href="#cd-返回上一层"></a> cd . .       返回上一层</h5><p><img src="/images/javawz/1580702225455.png" alt="1580702225455"></p><h5 id="cd-回到根目录"><a class="markdownIt-Anchor" href="#cd-回到根目录"></a> cd \          回到根目录</h5><p><img src="/images/javawz/1580702268907.png" alt="1580702268907"></p><h3 id="dir遍历内容"><a class="markdownIt-Anchor" href="#dir遍历内容"></a> dir遍历内容</h3><h4 id="dir-遍历上一层内容"><a class="markdownIt-Anchor" href="#dir-遍历上一层内容"></a> dir . . 　　　　遍历上一层内容</h4><p><img src="/images/javawz/1580702589782.png" alt="1580702589782"></p><h4 id="dir-遍历当前目录内容"><a class="markdownIt-Anchor" href="#dir-遍历当前目录内容"></a> dir .　　　　　遍历当前目录内容</h4><p><img src="/images/javawz/1580702614130.png" alt="1580702614130"></p><h4 id="dir-文件目录-遍历指定目录内容"><a class="markdownIt-Anchor" href="#dir-文件目录-遍历指定目录内容"></a> dir  文件目录　　　　遍历指定目录内容</h4><p><img src="/images/javawz/1580702640863.png" alt="1580702640863"></p><h4 id="dir-文件-遍历指定文件"><a class="markdownIt-Anchor" href="#dir-文件-遍历指定文件"></a> dir  文件　　　　遍历指定文件</h4><p><img src="/images/javawz/1580702722875.png" alt="1580702722875"></p><h3 id="cls-清屏"><a class="markdownIt-Anchor" href="#cls-清屏"></a> cls 清屏</h3><p><img src="/images/javawz/0001.png" alt="0001"><br><br><br><img src="/images/javawz/0002.png" alt="0002"></p><h3 id="exit-退出dos系统"><a class="markdownIt-Anchor" href="#exit-退出dos系统"></a> exit 　　退出DOS系统</h3><p><img src="/images/javawz/1580702811177.png" alt="1580702811177"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;计算机基础知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#计算机基础知识&quot;&gt;&lt;/a&gt; 计算机基础知识&lt;/h1&gt;
&lt;h2 id=&quot;二进制&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#二进制&quot;&gt;&lt;/a&gt; 二
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>个人简历</title>
    <link href="https://xiaowuyoucy.github.io/2019/12/07/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    <id>https://xiaowuyoucy.github.io/2019/12/07/个人简历/</id>
    <published>2019-12-07T10:59:46.000Z</published>
    <updated>2019-12-07T10:59:46.442Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>个人经历</title>
    <link href="https://xiaowuyoucy.github.io/2019/12/07/%E4%B8%AA%E4%BA%BA%E7%BB%8F%E5%8E%86/"/>
    <id>https://xiaowuyoucy.github.io/2019/12/07/个人经历/</id>
    <published>2019-12-07T10:57:37.000Z</published>
    <updated>2019-12-07T10:57:37.110Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Golang 指针</title>
    <link href="https://xiaowuyoucy.github.io/2019/12/05/201912050104/"/>
    <id>https://xiaowuyoucy.github.io/2019/12/05/201912050104/</id>
    <published>2019-12-04T17:05:00.000Z</published>
    <updated>2019-12-04T17:06:13.569Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">%T 类型占位符</span></span><br><span class="line"><span class="comment">%v 值占位符</span></span><br><span class="line"><span class="comment">%p 地址（指针）占位符，只有地址才能替换%p</span></span><br><span class="line"><span class="comment">&amp;value 对值取地址</span></span><br><span class="line"><span class="comment">*addr 对地址取值</span></span><br><span class="line"><span class="comment">**int 指向int型指针的指针</span></span><br><span class="line"><span class="comment">作用：函数传参时，传递指针叫引用传递，值传递是拷贝式的，对被传参数的修改是不会改变本体的，想要改变本体只能是引用传递</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//指针就是地址</span></span><br><span class="line"><span class="comment">//&amp;value 对值取地址</span></span><br><span class="line"><span class="comment">//*ptr 对地址取值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main021</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//声明变量a时，系统开辟了一块内存【地址】，里面存的【值】是123</span></span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span> = <span class="number">123</span></span><br><span class="line">fmt.Printf(<span class="string">"a的类型是%T\n"</span>, a)<span class="comment">//int</span></span><br><span class="line">fmt.Printf(<span class="string">"a的值是%v\n"</span>, a)<span class="comment">//123</span></span><br><span class="line">fmt.Printf(<span class="string">"a的地址是%p\n"</span>, &amp;a)<span class="comment">//0x...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&amp;a取变量a的地址</span></span><br><span class="line">aPointer := &amp;a</span><br><span class="line">fmt.Printf(<span class="string">"aPointer的类型是%T\n"</span>,aPointer)<span class="comment">//*int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将aPointer指向的地址中的值修改为456</span></span><br><span class="line">*aPointer = <span class="number">456</span></span><br><span class="line">fmt.Println(<span class="string">"*aPointer="</span>,*aPointer)<span class="comment">//456</span></span><br><span class="line"><span class="comment">//a的值就变成了456</span></span><br><span class="line">fmt.Println(<span class="string">"a="</span>,a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//先定义原始变量，修改其指针中的值，会直接改变原变量</span></span><br><span class="line"><span class="comment">//指针如果没有重新赋值，永远指向同一块地址</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main022</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//系统给x分配了内存</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">456</span></span><br><span class="line">fmt.Println(x)<span class="comment">//456</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义整型指针（存储整型数据的地址）</span></span><br><span class="line"><span class="comment">//默认赋值为空&lt;nil&gt;</span></span><br><span class="line"><span class="keyword">var</span> xPtr *<span class="keyword">int</span></span><br><span class="line">fmt.Println(<span class="string">"xPtr="</span>, xPtr)<span class="comment">//nil</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//aPtr指向x的地址</span></span><br><span class="line">xPtr = &amp;x</span><br><span class="line"></span><br><span class="line"><span class="comment">//将xPtr指向的地址中的值修改为789</span></span><br><span class="line">*xPtr = <span class="number">789</span></span><br><span class="line"></span><br><span class="line">fmt.Println(x)         <span class="comment">//789</span></span><br><span class="line">fmt.Println(xPtr)      <span class="comment">//0xc042052080</span></span><br><span class="line">fmt.Println(&amp;x)        <span class="comment">//0xc042052080</span></span><br><span class="line">fmt.Println(*xPtr)     <span class="comment">//789</span></span><br><span class="line">fmt.Println(*xPtr == x) <span class="comment">//true</span></span><br><span class="line">fmt.Println(xPtr == &amp;x) <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> y = <span class="number">456</span></span><br><span class="line">*xPtr = y</span><br><span class="line">fmt.Println(x)          <span class="comment">//456</span></span><br><span class="line">fmt.Println(xPtr)       <span class="comment">//没有变</span></span><br><span class="line">fmt.Println(&amp;x)         <span class="comment">//没有变</span></span><br><span class="line">fmt.Println(*xPtr)      <span class="comment">//456</span></span><br><span class="line">fmt.Println(*xPtr == y) <span class="comment">//true</span></span><br><span class="line">fmt.Println(x == y)     <span class="comment">//true</span></span><br><span class="line">fmt.Println(&amp;x == &amp;y)   <span class="comment">//false</span></span><br><span class="line">fmt.Println(xPtr == &amp;y) <span class="comment">//false</span></span><br><span class="line">fmt.Printf(<span class="string">"y的地址是%p\n"</span>,&amp;y)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"----------"</span>)</span><br><span class="line"><span class="comment">//xPtr指向y的地址</span></span><br><span class="line">xPtr = &amp;y</span><br><span class="line">y = <span class="number">789</span></span><br><span class="line">fmt.Println(x)      <span class="comment">//456</span></span><br><span class="line">fmt.Println(y)      <span class="comment">//789</span></span><br><span class="line">fmt.Println(*xPtr)<span class="comment">//789</span></span><br><span class="line">fmt.Println(&amp;x == xPtr) <span class="comment">//false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针是严格检测数据类型的</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main023</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">123</span></span><br><span class="line"><span class="keyword">var</span> intPtr *<span class="keyword">int</span></span><br><span class="line">intPtr = &amp;x</span><br><span class="line">fmt.Println(intPtr, *intPtr) <span class="comment">//0x...,123</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//var y = "你妹"</span></span><br><span class="line"><span class="comment">//intPtr = &amp;y//编译错误，【整型指针】无法赋值为【字符串的地址】</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针的指针</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main024</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">123</span></span><br><span class="line"><span class="keyword">var</span> mPtr *<span class="keyword">int</span> = &amp;x</span><br><span class="line"></span><br><span class="line"><span class="comment">//var mmp **int</span></span><br><span class="line">mmPtr := &amp;mPtr</span><br><span class="line">fmt.Println(mmPtr)<span class="comment">//0xc042072018</span></span><br><span class="line">fmt.Printf(<span class="string">"mmPtr的类型是%T\n"</span>,mmPtr)<span class="comment">//mmPtr的类型是**int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印x的值</span></span><br><span class="line">fmt.Println(*mPtr)<span class="comment">//123</span></span><br><span class="line">fmt.Println(*(*mmPtr))<span class="comment">//123</span></span><br><span class="line">fmt.Println(**mmPtr)<span class="comment">//123</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//main021()</span></span><br><span class="line"><span class="comment">//main022()</span></span><br><span class="line"><span class="comment">//main023()</span></span><br><span class="line">main024()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang指针" scheme="https://xiaowuyoucy.github.io/tags/Golang%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/27/hello-world/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/27/hello-world/</id>
    <published>2019-11-27T08:08:58.620Z</published>
    <updated>2019-11-27T08:08:58.620Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Golang闭包函数</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/19/201911190628/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/19/201911190628/</id>
    <published>2019-11-18T22:28:00.000Z</published>
    <updated>2019-11-30T17:34:35.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="闭包函数"><a class="markdownIt-Anchor" href="#闭包函数"></a> 闭包函数</h1><p><strong>闭包函数概述</strong> 闭包函数：返回函数的函数 闭包的好处：【内层函数的状态】被保存在闭包中 不使用闭包，就要开<br>辟多个全局变量来保存函数以外的数据 如果说这个函数被多方调用，大家都需要各保存各的数据，那么此时就需要开辟多个全局变量 具体使用哪个全局变量，还要在函数内做判断——增大了重复的代码量，令代码看起来比较垃圾</p><p><strong>案例</strong>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">李逵和武松的Study方法的逻辑是几乎一模一样的</span></span><br><span class="line"><span class="comment">然而为了分别保存二人的学习进度，需要开辟两个全局变量，函数内部需要使用两条分支结构才能完成业务逻辑；</span></span><br><span class="line"><span class="comment">如果是108将都来学习...</span></span><br><span class="line"><span class="comment">此时代码的可复用性很差！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> likuiProgress <span class="keyword">int</span> <span class="comment">//0</span></span><br><span class="line"><span class="keyword">var</span> wusongProgress <span class="keyword">int</span> <span class="comment">//0</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Study</span><span class="params">(name <span class="keyword">string</span>,hours <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s学习了%d小时\n"</span>,name,hours)</span><br><span class="line"><span class="keyword">if</span> name==<span class="string">"李逵"</span>&#123;</span><br><span class="line">likuiProgress += hours</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> name==<span class="string">"武松"</span>&#123;</span><br><span class="line">wusongProgress += hours</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main081</span><span class="params">()</span></span> &#123;</span><br><span class="line">Study(<span class="string">"李逵"</span>, <span class="number">5</span>)</span><br><span class="line">fmt.Printf(<span class="string">"李逵的学习进度是%d/10000\n"</span>,likuiProgress)</span><br><span class="line"></span><br><span class="line">Study(<span class="string">"武松"</span>, <span class="number">15</span>)</span><br><span class="line">fmt.Printf(<span class="string">"李逵的学习进度是%d/10000\n"</span>,wusongProgress)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">使用闭包函数优化Study</span></span><br><span class="line"><span class="comment">每个人有不同的学习进度，将这个进度保存在【各自的闭包】中</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">闭包函数：返回函数的函数</span></span><br><span class="line"><span class="comment">闭包函数的好处：使用同一份内层函数代码，创建出任意多个不同的函数对象，这些对象各自的状态都被保存在函数闭包（外层函数）中，各行其道互不干扰</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetStudyFunc</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="title">func</span><span class="params">(hours <span class="keyword">int</span>)</span> <span class="params">(progress <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用于保存内层函数的状态</span></span><br><span class="line"><span class="keyword">var</span> progress <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义内层函数</span></span><br><span class="line">studyFunc := <span class="function"><span class="keyword">func</span><span class="params">(hours <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s学习了%d小时\n"</span>,name,hours)</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新内层函数在闭包中的状态</span></span><br><span class="line">progress += hours</span><br><span class="line"><span class="keyword">return</span> progress</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"study的类型是%T\n"</span>, studyFunc)</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回内层函数</span></span><br><span class="line"><span class="keyword">return</span> studyFunc</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用闭包函数，得到三个【代码相同的不同函数对象】</span></span><br><span class="line">studyFunc1 := GetStudyFunc(<span class="string">"李逵"</span>)</span><br><span class="line">studyFunc2 := GetStudyFunc(<span class="string">"武松"</span>)</span><br><span class="line">studyFunc3 := GetStudyFunc(<span class="string">"鲁智深"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//交替执行这些内层函数，其状态的更新会被其函数闭包所保存</span></span><br><span class="line">lkProgress := studyFunc1(<span class="number">5</span>)</span><br><span class="line">lzsProgress := studyFunc3(<span class="number">17</span>)</span><br><span class="line">wsProgress := studyFunc2(<span class="number">15</span>)</span><br><span class="line">lkProgress = studyFunc1(<span class="number">3</span>)</span><br><span class="line">lzsProgress = studyFunc3(<span class="number">12</span>)</span><br><span class="line">lkProgress = studyFunc1(<span class="number">2</span>)</span><br><span class="line">wsProgress = studyFunc2(<span class="number">13</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果，三个函数的各自的状态没有互相影响</span></span><br><span class="line">fmt.Printf(<span class="string">"李逵的学习进度是%d/10000\n"</span>,lkProgress)</span><br><span class="line">fmt.Printf(<span class="string">"武松的学习进度是%d/10000\n"</span>,wsProgress)</span><br><span class="line">fmt.Printf(<span class="string">"鲁智深的学习进度是%d/10000\n"</span>,lzsProgress)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;闭包函数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#闭包函数&quot;&gt;&lt;/a&gt; 闭包函数&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;闭包函数概述&lt;/strong&gt; 闭包函数：返回函数的函数 闭包的好处：【内层函数的状态】被保存在闭包中 不使用闭包，
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang闭包函数" scheme="https://xiaowuyoucy.github.io/tags/Golang%E9%97%AD%E5%8C%85%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Golang匿名函数</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/19/201911190625/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/19/201911190625/</id>
    <published>2019-11-18T22:26:00.000Z</published>
    <updated>2019-11-18T22:27:43.510Z</updated>
    
    <content type="html"><![CDATA[<h1 id="匿名函数概述"><a class="markdownIt-Anchor" href="#匿名函数概述"></a> 匿名函数概述</h1><ul><li>匿名函数的主要作用是封装一段一次性执行的代码</li><li>它无所谓复用，所以无需起名，之所以进行封装的意义，在于使一段代码成为一个整体</li><li>defer延时执行一段代码，和go并发执行一段代码是匿名函数的常用场景</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//匿名函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//延时执行的匿名函数</span></span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"劳资延时·无名，劳资最后执行"</span>)</span><br><span class="line">&#125;()</span><br><span class="line"><span class="comment">//并发执行的匿名函数</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"劳资并发·无名，劳资并发执行"</span>)</span><br><span class="line">&#125;()</span><br><span class="line"><span class="comment">//一个带参的匿名函数</span></span><br><span class="line">ret := <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"劳资普通·无名，下面劳资睡一会"</span>)</span><br><span class="line">time.Sleep(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> a + b</span><br><span class="line">&#125;(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">fmt.Println(ret)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;匿名函数概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#匿名函数概述&quot;&gt;&lt;/a&gt; 匿名函数概述&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;匿名函数的主要作用是封装一段一次性执行的代码&lt;/li&gt;
&lt;li&gt;它无所谓复用，所以无需起名，之所以进行封装的
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang匿名函数" scheme="https://xiaowuyoucy.github.io/tags/Golang%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>函数</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/19/201911190615/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/19/201911190615/</id>
    <published>2019-11-18T22:15:00.000Z</published>
    <updated>2019-11-18T22:23:31.611Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数概述"><a class="markdownIt-Anchor" href="#函数概述"></a> 函数概述</h1><ul><li>函数是对一段能够重复使用的代码的封装</li><li>函数的参数定义了外界给函数输入的数据</li><li>函数的返回值定义了函数给外界输出的数据</li><li>Go语言函数支持不定长参数和多个返回值</li></ul><p><strong>@函数定义和调用</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sayHello</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"fuck off!"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line">sayHello()</span><br></pre></td></tr></table></figure><p><strong>@函数参数 无参函数</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add0</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"没参数，add你妹啊"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>带参函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add1</span><span class="params">(a <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"收到一个参数"</span>, a)</span><br><span class="line">fmt.Println(<span class="string">"一个参数，add你妹啊"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多个参数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多个参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addm1</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"加和是"</span>, a+b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//类型相同的参数被合写在一起了</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addm2</span><span class="params">(a, b <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"加和是"</span>, a+b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//类型不同的参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addm3</span><span class="params">(a, b <span class="keyword">int</span>, c <span class="keyword">float32</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"加和是"</span>, <span class="keyword">float32</span>(a)+<span class="keyword">float32</span>(b)+c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不定长参数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addx</span><span class="params">(x ...<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//参数的长度是 5</span></span><br><span class="line">fmt.Println(<span class="string">"参数的长度是"</span>, <span class="built_in">len</span>(x))</span><br><span class="line"><span class="comment">//参数的类型是[]int</span></span><br><span class="line">fmt.Printf(<span class="string">"参数的类型是%T\n"</span>, x)</span><br><span class="line"><span class="keyword">var</span> result = <span class="number">0</span></span><br><span class="line"><span class="comment">//遍历不定长参数</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> x &#123;</span><br><span class="line">fmt.Println(i, v)</span><br><span class="line">result += v</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加和是 15</span></span><br><span class="line">fmt.Println(<span class="string">"加和是"</span>, result)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>@函数返回值</strong> 无返回值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//无返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sub0</span><span class="params">(a, b <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"相减的结果是"</span>, a-b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有返回值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sub11</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"相减的结果是"</span>, a-b)</span><br><span class="line"><span class="keyword">return</span> a - b</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sub12</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="params">(ret <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"相减的结果是"</span>, a-b)</span><br><span class="line">ret = a - b</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多个返回值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多个返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">subm1</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="params">(<span class="keyword">int</span>, <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"相减的结果是"</span>, a-b)</span><br><span class="line"><span class="keyword">return</span> a - b, <span class="string">"你妹"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">subm2</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="params">(ret <span class="keyword">int</span>, remark <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"相减的结果是"</span>, a-b)</span><br><span class="line">ret = a - b</span><br><span class="line">remark = <span class="string">"你妹"</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;函数概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#函数概述&quot;&gt;&lt;/a&gt; 函数概述&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;函数是对一段能够重复使用的代码的封装&lt;/li&gt;
&lt;li&gt;函数的参数定义了外界给函数输入的数据&lt;/li&gt;
&lt;li&gt;函数的返
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang函数" scheme="https://xiaowuyoucy.github.io/tags/Golang%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Golang延时执行defer</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/19/201911190306/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/19/201911190306/</id>
    <published>2019-11-18T19:09:00.000Z</published>
    <updated>2019-11-18T19:21:46.056Z</updated>
    
    <content type="html"><![CDATA[<p><strong>defer概述</strong> defer xxx() 延时执行，将xxx放在函数的最后执行 多个defer xxx()时,所有defer倒序执行，即最早声明<br>的defer会最后执行</p><p><strong>用途</strong></p><ul><li>(数据库读写，文件读写，网络数据读写)</li><li>资源=数据库连接，打开的文件对象，网路连接</li><li>资源开销（CPU，内存，磁盘…）巨大</li><li>资源，随用随开，用完【即】关</li></ul><br><br><br><p><strong>场景</strong></p><ul><li><p>O只是场景之一</p></li><li><p>其它场景：消费完毕要买单，运动完要洗澡，自习结束要关灯…</p></li></ul><br><br><br><p><strong>读写数据库，并在程序的最后关闭数据库</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">demo41</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//随用随开，用完【即】关</span></span><br><span class="line">fmt.Println(<span class="string">"打开数据库"</span>)</span><br><span class="line"><span class="comment">//defer所唤起的函数将在函数结束前才执行</span></span><br><span class="line"><span class="keyword">defer</span> closeDatabase()</span><br><span class="line">fmt.Println(<span class="string">"愉快地读写数据"</span>)</span><br><span class="line">fmt.Println(<span class="string">"读写完毕"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><br><p><strong>多个defer时，最早defer的操作最后执行</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">demo42</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//打开数据库</span></span><br><span class="line">fmt.Println(<span class="string">"打开数据库"</span>)</span><br><span class="line"><span class="keyword">defer</span> closeDatabase()</span><br><span class="line"><span class="comment">//读入DB数据</span></span><br><span class="line">fmt.Println(<span class="string">"读入DB数据"</span>)</span><br><span class="line"><span class="comment">//打开文件</span></span><br><span class="line">fmt.Println(<span class="string">"打开文件"</span>)</span><br><span class="line"><span class="keyword">defer</span> closeFile()</span><br><span class="line"><span class="comment">//向文件中写出DB中的数据</span></span><br><span class="line">fmt.Println(<span class="string">"读入DB数据"</span>)</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line"><span class="comment">//继续操作数据库</span></span><br><span class="line">fmt.Println(<span class="string">"继续操作数据库"</span>)</span><br><span class="line"><span class="comment">//关闭数据库</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">closeDatabase</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"关闭数据库"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">closeFile</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"关闭文件"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><p><strong>其他defer案例：</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">xingzuoZhensuo</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> birthday <span class="keyword">string</span></span><br><span class="line">fmt.Println(<span class="string">"请输入您的生日，例如0823"</span>)</span><br><span class="line">fmt.Scan(&amp;birthday)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> birthday &gt;= <span class="string">"0823"</span> &amp;&amp; birthday &lt;= <span class="string">"0922"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下真乃神人也"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0923"</span> &amp;&amp; birthday &lt;= <span class="string">"1022"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是天秤座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"1023"</span> &amp;&amp; birthday &lt;= <span class="string">"1122"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是天蝎座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"1123"</span> &amp;&amp; birthday &lt;= <span class="string">"1222"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是射手座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (birthday &gt;= <span class="string">"1223"</span> &amp;&amp; birthday &lt;= <span class="string">"1231"</span>) || (birthday &gt;= <span class="string">"0101"</span> &amp;&amp; birthday &lt;= <span class="string">"0122"</span>) &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是摩羯座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0123"</span> &amp;&amp; birthday &lt;= <span class="string">"0222"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是水瓶座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (birthday &gt;= <span class="string">"0223"</span> &amp;&amp; birthday &lt;= <span class="string">"0229"</span>) || (birthday &gt;= <span class="string">"0301"</span> &amp;&amp; birthday &lt;= <span class="string">"0322"</span>) &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是双鱼座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0323"</span> &amp;&amp; birthday &lt;= <span class="string">"0422"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是白羊座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0423"</span> &amp;&amp; birthday &lt;= <span class="string">"0522"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是金牛座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0523"</span> &amp;&amp; birthday &lt;= <span class="string">"0622"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是双子座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0623"</span> &amp;&amp; birthday &lt;= <span class="string">"0722"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是巨蟹座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0723"</span> &amp;&amp; birthday &lt;= <span class="string">"0822"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是狮子座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下就是传说中的蛇夫座鸭！"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main071</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"亲爱的患者，欢迎来到我院！"</span>)</span><br><span class="line"><span class="comment">//挂起一个延时任务（在当前函数返回（结束）前执行）</span></span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"同志再见，我院永远欢迎你！"</span>)</span><br><span class="line"></span><br><span class="line">xingzuoZhensuo()</span><br><span class="line">fmt.Println(<span class="string">"事务A"</span>)</span><br><span class="line">fmt.Println(<span class="string">"事务B"</span>)</span><br><span class="line">fmt.Println(<span class="string">"事务C"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">·诊断完毕后连续输出“您的诊断已结束”,“请这边滚”，“我院永远欢迎你”</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"亲爱的患者，欢迎来到我院！"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多个defer时，执行顺序是倒置的*/</span></span><br><span class="line"><span class="comment">//第1个defer会倒数第1个执行</span></span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"我院永远欢迎你"</span>)</span><br><span class="line"><span class="comment">//第2个defer会倒数第2个执行</span></span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"请这边滚"</span>)</span><br><span class="line"><span class="comment">//第3个defer会倒数第3个执行</span></span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"您的诊断已结束"</span>)</span><br><span class="line"></span><br><span class="line">xingzuoZhensuo()</span><br><span class="line">fmt.Println(<span class="string">"事务A"</span>)</span><br><span class="line">fmt.Println(<span class="string">"事务B"</span>)</span><br><span class="line">fmt.Println(<span class="string">"事务C"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;defer概述&lt;/strong&gt; defer xxx() 延时执行，将xxx放在函数的最后执行 多个defer xxx()时,所有defer倒序执行，即最早声明&lt;br&gt;
的defer会最后执行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="延时执行defer" scheme="https://xiaowuyoucy.github.io/tags/%E5%BB%B6%E6%97%B6%E6%89%A7%E8%A1%8Cdefer/"/>
    
  </entry>
  
  <entry>
    <title>Golang的跳转语句（GOTO）</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/19/201911190123/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/19/201911190123/</id>
    <published>2019-11-18T17:25:00.000Z</published>
    <updated>2019-11-18T17:26:00.356Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">STUDYHARD:</span><br><span class="line">fmt.Println(<span class="string">"开始努力奋斗！"</span>)</span><br><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"努力奋斗了%d小时\n"</span>, i)</span><br><span class="line">time.Sleep(<span class="number">500</span> * time.Millisecond)</span><br><span class="line">i++</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> i &gt; <span class="number">10</span> &#123;</span><br><span class="line"><span class="comment">//跳出当前循环</span></span><br><span class="line"><span class="comment">//break</span></span><br><span class="line">fmt.Println(<span class="string">"恭喜你获得了组织颁发的奖状！"</span>)</span><br><span class="line"><span class="keyword">goto</span> TRYAGIN</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BONUS:</span><br><span class="line">fmt.Println(<span class="string">"循环外的世界"</span>)</span><br><span class="line">fmt.Println(<span class="string">"送你海景别野一套"</span>)</span><br><span class="line">fmt.Println(<span class="string">"送你满汉全席一套"</span>)</span><br><span class="line">fmt.Println(<span class="string">"送你我厂生产的女朋友一个"</span>)</span><br><span class="line"></span><br><span class="line">TRYAGIN:</span><br><span class="line"><span class="keyword">var</span> answer <span class="keyword">string</span></span><br><span class="line">fmt.Println(<span class="string">"要不要再玩一次呢？Y/N"</span>)</span><br><span class="line">fmt.Scan(&amp;answer)</span><br><span class="line"><span class="keyword">if</span> answer == <span class="string">"N"</span> &#123;</span><br><span class="line"><span class="keyword">goto</span> GAMEOVER</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> answer == <span class="string">"Y"</span> &#123;</span><br><span class="line"><span class="keyword">goto</span> STUDYHARD</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> answer == <span class="string">"FUCKOFF"</span>&#123;</span><br><span class="line"><span class="keyword">goto</span> BONUS</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GAMEOVER:</span><br><span class="line">fmt.Println(<span class="string">"GAME OVER"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="GOTO语句" scheme="https://xiaowuyoucy.github.io/tags/GOTO%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>Golang流程控制</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/18/201911182336/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/18/201911182336/</id>
    <published>2019-11-18T15:37:00.000Z</published>
    <updated>2019-11-18T16:01:40.381Z</updated>
    
    <content type="html"><![CDATA[<h1 id="if-else"><a class="markdownIt-Anchor" href="#if-else"></a> if else</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">字符串比大小</span></span><br><span class="line"><span class="comment">比首字符在字符集中出现的序号，首字符相同则比较第二个字符，以此类推</span></span><br><span class="line"><span class="comment">go的编译器默认使用UTF8字符集</span></span><br><span class="line"><span class="comment">在UTF8字符集中数字出现的顺序为：0123456789</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main031</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"0"</span>&gt;<span class="string">"9"</span>)</span><br><span class="line">fmt.Println(<span class="string">"012"</span>&gt;<span class="string">"011"</span>)</span><br><span class="line">fmt.Println(<span class="string">"0823"</span>&gt;<span class="string">"0423"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">根据用户输入的生日判断其星座：</span></span><br><span class="line"><span class="comment">①单分支：如果位于0823-0922之间（处女座），输出“阁下真乃神人也！”</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main032</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> birthday <span class="keyword">string</span></span><br><span class="line">fmt.Println(<span class="string">"请输入您的生日，例如0823"</span>)</span><br><span class="line">fmt.Scan(&amp;birthday)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> birthday &gt;= <span class="string">"0823"</span> &amp;&amp; birthday&lt;=<span class="string">"0922"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下真乃神人也"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"诊断结束！"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">根据用户输入的生日判断其星座：</span></span><br><span class="line"><span class="comment">②双分支：如果位于0823-0922之间（处女座），输出“阁下乃神人也！”，否则输出“垃圾”</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main033</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> birthday <span class="keyword">string</span></span><br><span class="line">fmt.Println(<span class="string">"请输入您的生日，例如0823"</span>)</span><br><span class="line">fmt.Scan(&amp;birthday)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> birthday &gt; <span class="string">"0822"</span> &amp;&amp; birthday &lt; <span class="string">"0923"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下真乃神人也"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"乐色"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="else-if-多分支"><a class="markdownIt-Anchor" href="#else-if-多分支"></a> else if 多分支</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">根据用户输入的生日判断其星座：</span></span><br><span class="line"><span class="comment">③多分支：判断其具体星座</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main034</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> birthday <span class="keyword">string</span></span><br><span class="line">fmt.Println(<span class="string">"请输入您的生日，例如0823"</span>)</span><br><span class="line">fmt.Scan(&amp;birthday)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> birthday &gt;= <span class="string">"0823"</span> &amp;&amp; birthday &lt;= <span class="string">"0922"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下真乃神人也"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0923"</span> &amp;&amp; birthday &lt;= <span class="string">"1022"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是天秤座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"1023"</span> &amp;&amp; birthday &lt;= <span class="string">"1122"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是天蝎座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"1123"</span> &amp;&amp; birthday &lt;= <span class="string">"1222"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是射手座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (birthday &gt;= <span class="string">"1223"</span> &amp;&amp; birthday &lt;= <span class="string">"1231"</span>) || (birthday&gt;=<span class="string">"0101"</span> &amp;&amp; birthday&lt;=<span class="string">"0122"</span>)&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是摩羯座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0123"</span> &amp;&amp; birthday &lt;= <span class="string">"0222"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是水瓶座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (birthday &gt;= <span class="string">"0223"</span> &amp;&amp; birthday &lt;= <span class="string">"0229"</span>)||(birthday&gt;=<span class="string">"0301"</span> &amp;&amp; birthday&lt;=<span class="string">"0322"</span>)&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是双鱼座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0323"</span> &amp;&amp; birthday &lt;= <span class="string">"0422"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是白羊座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0423"</span> &amp;&amp; birthday &lt;= <span class="string">"0522"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是金牛座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0523"</span> &amp;&amp; birthday &lt;= <span class="string">"0622"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是双子座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0623"</span> &amp;&amp; birthday &lt;= <span class="string">"0722"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是巨蟹座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0723"</span> &amp;&amp; birthday &lt;= <span class="string">"0822"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是狮子座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下就是传说中的蛇夫座鸭！"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="switch"><a class="markdownIt-Anchor" href="#switch"></a> SWITCH</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@星座诊所2(switch)</span></span><br><span class="line"><span class="comment">根据用户输入的出生月份猜测其星座：</span></span><br><span class="line"><span class="comment">·白羊（4） 金牛（5） 双子（6） 巨蟹（7） 狮子（8） 处女（9） 天平（10） 天蝎（11） 射手（12） 摩羯（1） 水瓶（2） 双鱼（3）</span></span><br><span class="line"><span class="comment">·使用单点case判断其星座；</span></span><br><span class="line"><span class="comment">·使用单点case集合判断其季节（春夏秋冬）</span></span><br><span class="line"><span class="comment">·使用自由条件case判断用户具体星座</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main041</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"请输入你的出生月份(1-12)"</span>)</span><br><span class="line"><span class="keyword">var</span> month <span class="keyword">int</span></span><br><span class="line">fmt.Scan(&amp;month)</span><br><span class="line">fmt.Printf(<span class="string">"month=%d"</span>, month)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">对month的可能取值，做单点判断</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">switch</span> month &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"摩羯"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"水瓶"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"双鱼"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"白羊"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"金牛"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"双子"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"巨蟹"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"狮子"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"处女"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"天平"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"天蝎"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"射手"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//month的值没有落在上述任何一种情形中</span></span><br><span class="line"><span class="comment">//default是可选的</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"你就是传说中的蛇夫座"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">·使用单点case集合判断其季节（春夏秋冬）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main042</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"请输入你的出生月份(1-12)"</span>)</span><br><span class="line"><span class="keyword">var</span> month <span class="keyword">int</span></span><br><span class="line">fmt.Scan(&amp;month)</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> month &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>, <span class="number">1</span>, <span class="number">2</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在冬天"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在春天"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在夏天"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在秋天"</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在火星"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">·使用自由条件case判断其季节（春夏秋冬）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main043</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"请输入你的出生月份(1-12)"</span>)</span><br><span class="line"><span class="keyword">var</span> month <span class="keyword">int</span></span><br><span class="line">fmt.Scan(&amp;month)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有明确指定switch的对象，case可以跟任意判断条件</span></span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">3</span> &amp;&amp; month &lt;= <span class="number">5</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在春天"</span>)</span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">6</span> &amp;&amp; month &lt;= <span class="number">8</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在夏天"</span>)</span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">9</span> &amp;&amp; month &lt;= <span class="number">11</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在秋天"</span>)</span><br><span class="line"><span class="keyword">case</span> month == <span class="number">12</span> || month == <span class="number">1</span> || month == <span class="number">2</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在冬天"</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在火星"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用fallthrough强制滚动到下一个分支并执行*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main044</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"请输入你的出生月份(1-12)"</span>)</span><br><span class="line"><span class="keyword">var</span> month <span class="keyword">int</span></span><br><span class="line">fmt.Scan(&amp;month)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有明确指定switch的对象，case可以跟任意判断条件</span></span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">3</span> &amp;&amp; month &lt;= <span class="number">5</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在春天"</span>)</span><br><span class="line"><span class="comment">//强制执行下一个分支条件</span></span><br><span class="line"><span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">6</span> &amp;&amp; month &lt;= <span class="number">8</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在夏天"</span>)</span><br><span class="line">fmt.Println(<span class="string">"我们出生在上半年"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">9</span> &amp;&amp; month &lt;= <span class="number">11</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在秋天"</span>)</span><br><span class="line"><span class="comment">//强制执行下一个分支条件</span></span><br><span class="line"><span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> month == <span class="number">12</span> || month == <span class="number">1</span> || month == <span class="number">2</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在冬天"</span>)</span><br><span class="line">fmt.Println(<span class="string">"我们出生在下半年"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在火星"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;if-else&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#if-else&quot;&gt;&lt;/a&gt; if else&lt;/h1&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang流程控制" scheme="https://xiaowuyoucy.github.io/tags/Golang%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>Golang类型转换及移位运算</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/18/201911180045/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/18/201911180045/</id>
    <published>2019-11-17T16:46:00.000Z</published>
    <updated>2019-11-17T17:24:35.343Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类型转换"><a class="markdownIt-Anchor" href="#类型转换"></a> 类型转换</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">类型转换强化</span></span><br><span class="line"><span class="comment">整型和浮点型可以直接强制转换</span></span><br><span class="line"><span class="comment">字符串和数值的转换用strconv.ParseInt和strconv.ParseFloat</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main024</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span> = <span class="number">123</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">float64</span> = <span class="number">456.78</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将整型转换为浮点型</span></span><br><span class="line">aFloat := <span class="keyword">float64</span>(a)</span><br><span class="line"><span class="comment">//%T类型占位符，%v是值占位符</span></span><br><span class="line">fmt.Printf(<span class="string">"aFloat的类型是%T,值是%v\n"</span>,aFloat,aFloat)</span><br><span class="line"></span><br><span class="line"><span class="comment">//浮点型转整型，小数部分扔掉</span></span><br><span class="line"><span class="comment">//bInt := int32(b)</span></span><br><span class="line">bInt := <span class="keyword">int</span>(b)</span><br><span class="line">fmt.Printf(<span class="string">"bInt的类型是%T,值是%v\n"</span>,bInt,bInt)</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串转整型</span></span><br><span class="line">resultInt, _ := strconv.ParseInt(<span class="string">"123"</span>, <span class="number">0</span>, <span class="number">64</span>)</span><br><span class="line">fmt.Printf(<span class="string">"resultInt的类型是%T,值是%v\n"</span>,resultInt,resultInt)</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串转浮点型</span></span><br><span class="line">resultFloat, _ := strconv.ParseFloat(<span class="string">"123.45"</span>, <span class="number">64</span>)</span><br><span class="line">fmt.Printf(<span class="string">"resultFloat的类型是%T,值是%v\n"</span>,resultFloat,resultFloat)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*移位运算强化*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//10111</span></span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">uint8</span> = <span class="number">23</span></span><br><span class="line">fmt.Println(a&gt;&gt;<span class="number">3</span>)<span class="comment">//2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//左移</span></span><br><span class="line">fmt.Println(a&lt;&lt;<span class="number">3</span>)<span class="comment">//184</span></span><br><span class="line"><span class="comment">//继续移动，从左侧溢出，当前无符号，最高位是数据位而非符号位</span></span><br><span class="line">fmt.Println(a&lt;&lt;<span class="number">5</span>)<span class="comment">//224</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义有符号8位整型</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">int8</span> = <span class="number">23</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//10111000,最高位为1，为负数，为补码，减一取反得其原码（原码到补码取反加一的逆向）</span></span><br><span class="line">fmt.Println(b&lt;&lt;<span class="number">3</span>)<span class="comment">//-72</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类型转换&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#类型转换&quot;&gt;&lt;/a&gt; 类型转换&lt;/h1&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang类型转换及移位运算" scheme="https://xiaowuyoucy.github.io/tags/Golang%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E5%8F%8A%E7%A7%BB%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>Golang循环结构</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/18/201911190001/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/18/201911190001/</id>
    <published>2019-11-17T16:03:00.000Z</published>
    <updated>2019-11-18T19:33:59.906Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math/rand"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">无限循环，死循环</span></span><br><span class="line"><span class="comment">输出我爱拉芳，一直到死</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main051</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"我爱拉芳"</span>)</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">有限循环</span></span><br><span class="line"><span class="comment">输出我爱拉芳，100遍</span></span><br><span class="line"><span class="comment">for 起始条件;循环条件;增长条件&#123;</span></span><br><span class="line"><span class="comment">循环体</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main052</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">/*var i int</span></span><br><span class="line"><span class="comment">for i = 1; i &lt;= 10; i++ &#123;</span></span><br><span class="line"><span class="comment">fmt.Printf("我爱拉芳%d年了\n", i)</span></span><br><span class="line"><span class="comment">time.Sleep(1000 * time.Millisecond)</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Printf(<span class="string">"我爱拉芳%d年了\n"</span>, i)</span><br><span class="line">time.Sleep(<span class="number">1000</span> * time.Millisecond)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"终于可以爱别人了！"</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">倒序循环</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main053</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">10</span>; i &gt;= <span class="number">1</span>; i-- &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">time.Sleep(<span class="number">500</span> * time.Millisecond)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"发射！"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">打印 2 4 6 8 10... 100</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main054</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">2</span>; i &lt; <span class="number">101</span>; i += <span class="number">2</span> &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">打一个10*5的“你妹”矩阵</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main055</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="number">5</span>; j++ &#123;</span><br><span class="line"><span class="comment">//在同一行打印十个你妹</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Print(<span class="string">"你妹\t\t"</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Print(<span class="string">"\n"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">打印九九乘法表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main056</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++ &#123;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= i; j++ &#123;</span><br><span class="line">fmt.Print(j, <span class="string">"*"</span>, i, <span class="string">"="</span>, j*i, <span class="string">" "</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Print(<span class="string">"\n"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetRandom</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="comment">/*获得随机数*/</span></span><br><span class="line"><span class="comment">//当前时间距离1970年0时所逝去的时间纳秒数</span></span><br><span class="line">seed := time.Now().UnixNano()</span><br><span class="line"><span class="comment">//使用当前时间纳秒作为随机数种子</span></span><br><span class="line">myRandom := rand.New(rand.NewSource(seed))</span><br><span class="line"><span class="comment">//n := rand.Intn(1000)</span></span><br><span class="line">n := <span class="number">100</span> + myRandom.Intn(<span class="number">900</span>)</span><br><span class="line"><span class="comment">//fmt.Println(n)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将结果随机数返回给调用者</span></span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">·随机生成一个3位数答案</span></span><br><span class="line"><span class="comment">·让用户输入其猜想</span></span><br><span class="line"><span class="comment">·反馈给用户：猜大了、猜小了、猜对了</span></span><br><span class="line"><span class="comment">·如果没猜对，就继续猜</span></span><br><span class="line"><span class="comment">·猜对了就退出游戏</span></span><br><span class="line"><span class="comment">·如果用户输入“-1”，就直接退出游戏</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main057</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">START:</span><br><span class="line"><span class="comment">//随机生成一个3位数答案</span></span><br><span class="line">answer := GetRandom()</span><br><span class="line">fmt.Println(answer)</span><br><span class="line"><span class="keyword">var</span> count <span class="keyword">int</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="comment">/*让用户输入其猜想*/</span></span><br><span class="line"><span class="keyword">var</span> guess <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"骚年请输入你的猜想(100-999),-1=退出，0=重玩，"</span>)</span><br><span class="line">fmt.Scan(&amp;guess)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*看看用户是否想退出*/</span></span><br><span class="line"><span class="keyword">if</span> guess == <span class="number">-1</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> guess == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">goto</span> START</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*反馈给用户：猜大了、猜小了、猜对了*/</span></span><br><span class="line">count ++</span><br><span class="line"><span class="keyword">if</span> guess &gt; answer &#123;</span><br><span class="line">fmt.Printf(<span class="string">"猜大了,共用了%d次\n"</span>, count)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> guess &lt; answer &#123;</span><br><span class="line">fmt.Printf(<span class="string">"猜小了,共用了%d次\n"</span>, count)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"猜对了,共用了%d次\n"</span>, count)</span><br><span class="line"><span class="comment">//跳出循环</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"GAME OVER"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印1-49，逢5的整数倍就跳过*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main058</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">i++</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> i &gt; <span class="number">49</span>&#123;</span><br><span class="line"><span class="comment">//跳出整个循环</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> i%<span class="number">5</span> == <span class="number">0</span> &#123;</span><br><span class="line"><span class="comment">//跳过本次循环的剩余部分，直接进入下一次循环</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Print(<span class="string">"当前是："</span>)</span><br><span class="line">fmt.Println(i)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"GAME OVER"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(GetRandom())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang循环结构" scheme="https://xiaowuyoucy.github.io/tags/Golang%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Golang程序运算</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/16/201911160050/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/16/201911160050/</id>
    <published>2019-11-15T16:51:18.000Z</published>
    <updated>2019-11-17T09:00:06.792Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span> = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*自加1*/</span></span><br><span class="line"><span class="comment">//a = a + 2</span></span><br><span class="line"><span class="comment">//a += 2</span></span><br><span class="line"><span class="comment">//a++</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*自减1*/</span></span><br><span class="line"><span class="comment">//a = a - 1</span></span><br><span class="line"><span class="comment">//a -= 2</span></span><br><span class="line"><span class="comment">//a--</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*自乘运算*/</span></span><br><span class="line"><span class="comment">//a = a * 2</span></span><br><span class="line"><span class="comment">//a *= 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//a = a / 2</span></span><br><span class="line"><span class="comment">//a /= 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*自求模（余）*/</span></span><br><span class="line"><span class="comment">//a = a % 3</span></span><br><span class="line">a %= <span class="number">3</span></span><br><span class="line"></span><br><span class="line">fmt.Println(a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*数学运算*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main051</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">/*加减乘除，求余*/</span></span><br><span class="line">fmt.Println(<span class="string">"5+3="</span>, <span class="number">5</span>+<span class="number">3</span>) <span class="comment">//8</span></span><br><span class="line">fmt.Println(<span class="string">"5-3="</span>, <span class="number">5</span><span class="number">-3</span>) <span class="comment">//2</span></span><br><span class="line">fmt.Println(<span class="string">"5*3="</span>, <span class="number">5</span>*<span class="number">3</span>) <span class="comment">//15</span></span><br><span class="line">fmt.Println(<span class="string">"5/3="</span>, <span class="number">5</span>/<span class="number">3</span>) <span class="comment">//1</span></span><br><span class="line">fmt.Println(<span class="string">"5%3="</span>, <span class="number">5</span>%<span class="number">3</span>) <span class="comment">//2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*乘方和开方*/</span></span><br><span class="line">fmt.Println(<span class="string">"5^3="</span>, math.Pow(<span class="number">5</span>, <span class="number">3</span>))               <span class="comment">//125</span></span><br><span class="line">fmt.Println(<span class="string">"125开三次方="</span>, math.Pow(<span class="number">125.0</span>, <span class="number">1.0</span>/<span class="number">3.0</span>)) <span class="comment">//5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">四舍五入</span></span><br><span class="line"><span class="comment">负数的四舍五入原则：先对绝对值四舍五入，再加负号</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">fmt.Println(<span class="string">"3.49的四舍五入="</span>, math.Round(<span class="number">3.49</span>))   <span class="comment">//3</span></span><br><span class="line">fmt.Println(<span class="string">"3.51的四舍五入="</span>, math.Round(<span class="number">3.51</span>))   <span class="comment">//4</span></span><br><span class="line">fmt.Println(<span class="string">"-3.49的四舍五入="</span>, math.Round(<span class="number">-3.49</span>)) <span class="comment">//-3</span></span><br><span class="line">fmt.Println(<span class="string">"-3.51的四舍五入="</span>, math.Round(<span class="number">-3.51</span>)) <span class="comment">//-4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*纯舍与纯入*/</span></span><br><span class="line">fmt.Println(<span class="string">"3.49的四舍五入="</span>, math.Floor(<span class="number">3.99</span>)) <span class="comment">//3</span></span><br><span class="line">fmt.Println(<span class="string">"3.51的四舍五入="</span>, math.Ceil(<span class="number">3.01</span>))  <span class="comment">//4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*绝对值*/</span></span><br><span class="line">fmt.Println(<span class="string">"-3.14的绝对值"</span>, math.Abs(<span class="number">-3.14</span>)) <span class="comment">//3.14</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">三角函数：</span></span><br><span class="line"><span class="comment">参数必须是弧度而不是角度</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">fmt.Println(<span class="string">"30°的正弦="</span>, math.Sin((<span class="number">30.0</span>/<span class="number">180</span>)*math.Pi))</span><br><span class="line">fmt.Println(<span class="string">"30°的余弦="</span>, math.Cos((<span class="number">30.0</span>/<span class="number">180</span>)*math.Pi))</span><br><span class="line">fmt.Println(<span class="string">"30°的正切="</span>, math.Tan((<span class="number">30.0</span>/<span class="number">180</span>)*math.Pi))</span><br><span class="line">fmt.Println(<span class="string">"30°的余切="</span>, <span class="number">1.0</span>/math.Tan((<span class="number">30.0</span>/<span class="number">180</span>)*math.Pi))</span><br><span class="line"></span><br><span class="line"><span class="comment">/*反三角函数*/</span></span><br><span class="line">fmt.Println(<span class="string">"正弦为0.5的角度是"</span>, math.Asin(<span class="number">0.5</span>)) <span class="comment">//0.5235987755982989=30度的弧度表示</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">比较运算</span></span><br><span class="line"><span class="comment">比较运算符：&gt;,&lt;,==,!=,&gt;=,&lt;=</span></span><br><span class="line"><span class="comment">比较运算的结果是布尔值：true或false</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">逻辑运算</span></span><br><span class="line"><span class="comment">逻辑与：两者都为真，结果才为真</span></span><br><span class="line"><span class="comment">逻辑或：两者只要有一个为真，结果就为真</span></span><br><span class="line"><span class="comment">逻辑非：非真为假，非假为真</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main052</span><span class="params">()</span></span> &#123;</span><br><span class="line">a1 := (<span class="number">1</span>+<span class="number">1</span> == <span class="number">2</span>) <span class="comment">//true</span></span><br><span class="line">a0 := (<span class="number">1</span>+<span class="number">1</span> != <span class="number">2</span>) <span class="comment">//false</span></span><br><span class="line">b1 := (<span class="number">1</span>+<span class="number">1</span> &gt;= <span class="number">2</span>) <span class="comment">//true</span></span><br><span class="line">b0 := (<span class="number">1</span>+<span class="number">1</span> &lt; <span class="number">2</span>)  <span class="comment">//false</span></span><br><span class="line">fmt.Println(a1, a0, b1, b0)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*逻辑与*/</span></span><br><span class="line">fmt.Println(a1 &amp;&amp; b1) <span class="comment">//true</span></span><br><span class="line">fmt.Println(a1 &amp;&amp; b0) <span class="comment">//false</span></span><br><span class="line">fmt.Println(a0 &amp;&amp; b1) <span class="comment">//false</span></span><br><span class="line">fmt.Println(a0 &amp;&amp; b0) <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*逻辑或*/</span></span><br><span class="line">fmt.Println(a1 || b1) <span class="comment">//true</span></span><br><span class="line">fmt.Println(a1 || b0) <span class="comment">//true</span></span><br><span class="line">fmt.Println(a0 || b1) <span class="comment">//true</span></span><br><span class="line">fmt.Println(a0 || b0) <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*逻辑或*/</span></span><br><span class="line">fmt.Println(!a1) <span class="comment">//false</span></span><br><span class="line">fmt.Println(!a0) <span class="comment">//true</span></span><br><span class="line">fmt.Println(!b1) <span class="comment">//false</span></span><br><span class="line">fmt.Println(!b0) <span class="comment">//true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">位运算</span></span><br><span class="line"><span class="comment">&amp; 按位与 两位都为1，结果才为1</span></span><br><span class="line"><span class="comment">| 按位或 只要有一位为1，结果就为1</span></span><br><span class="line"><span class="comment">^ 按位异或 两位不相同，结果就为1，否则就为0</span></span><br><span class="line"><span class="comment">&lt;&lt;</span></span><br><span class="line"><span class="comment">&gt;&gt;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main053</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//a := 23</span></span><br><span class="line"><span class="comment">//b := 34</span></span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">uint8</span> = <span class="number">23</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">uint8</span> = <span class="number">34</span></span><br><span class="line"></span><br><span class="line">fmt.Println(a &amp; b) <span class="comment">//2</span></span><br><span class="line">fmt.Println(a | b) <span class="comment">//55</span></span><br><span class="line">fmt.Println(a ^ b) <span class="comment">//53</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*移位运算*/</span></span><br><span class="line">fmt.Println(a &lt;&lt; <span class="number">2</span>) <span class="comment">//92</span></span><br><span class="line">fmt.Println(a &gt;&gt; <span class="number">2</span>) <span class="comment">//5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">左移的溢出</span></span><br><span class="line"><span class="comment">a为无符号8位整型，向左侧溢出后，最高位为数据位</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">fmt.Println(a &lt;&lt; <span class="number">4</span>) <span class="comment">//112</span></span><br><span class="line">fmt.Println(a &lt;&lt; <span class="number">5</span>) <span class="comment">//1110,0000无符号为224</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">左移的溢出</span></span><br><span class="line"><span class="comment">a为有符号8位整型，向左侧溢出后，最高位为符号位——要考虑正负数问题</span></span><br><span class="line"><span class="comment">最高位为0，非负数</span></span><br><span class="line"><span class="comment">最高位为1，负数的反码，-1再取反得到绝对值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> c <span class="keyword">int8</span> = <span class="number">23</span></span><br><span class="line">fmt.Println(c &lt;&lt; <span class="number">5</span>) <span class="comment">//1110,0000有符号-32</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang程序运算" scheme="https://xiaowuyoucy.github.io/tags/Golang%E7%A8%8B%E5%BA%8F%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>Golang基础类型占位符</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/16/20191116038/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/16/20191116038/</id>
    <published>2019-11-15T16:40:18.000Z</published>
    <updated>2019-11-15T16:46:18.416Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*认识基本数据类型*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main041</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//整型</span></span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">byte</span> = <span class="number">123</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">rune</span> = <span class="number">123</span></span><br><span class="line"><span class="keyword">var</span> c <span class="keyword">int</span> = <span class="number">123</span></span><br><span class="line"><span class="keyword">var</span> d <span class="keyword">uint</span> = <span class="number">123</span></span><br><span class="line">fmt.Println(a,b,c,d)</span><br><span class="line"></span><br><span class="line"><span class="comment">//浮点型</span></span><br><span class="line"><span class="keyword">var</span> rmb <span class="keyword">float32</span> = <span class="number">1.23</span></span><br><span class="line"><span class="comment">//var atomRadius float64 = 1.234567890</span></span><br><span class="line"><span class="keyword">var</span> atomRadius = <span class="number">1.234567890</span></span><br><span class="line">fmt.Println(rmb,atomRadius)</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串型</span></span><br><span class="line"><span class="keyword">var</span> name <span class="keyword">string</span> = <span class="string">"张三"</span></span><br><span class="line">fmt.Println(name)</span><br><span class="line"></span><br><span class="line"><span class="comment">//布尔型</span></span><br><span class="line"><span class="keyword">var</span> isClever = <span class="literal">true</span></span><br><span class="line"><span class="keyword">var</span> isBrave <span class="keyword">bool</span> = <span class="literal">false</span></span><br><span class="line">fmt.Println(isClever,isBrave)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查看变量的类型*/</span></span><br><span class="line">fmt.Printf(<span class="string">"a的类型是%T\n"</span>,a)</span><br><span class="line">fmt.Printf(<span class="string">"isClever的类型是%T\n"</span>,isClever)</span><br><span class="line">fmt.Printf(<span class="string">"atomRadius的类型是%T\n"</span>,atomRadius)</span><br><span class="line">fmt.Printf(<span class="string">"1.23的类型是%T\n"</span>,<span class="number">1.23</span>)</span><br><span class="line">fmt.Printf(<span class="string">"你妹的类型是%T"</span>,<span class="string">"你妹"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"3+4i的类型是%T"</span>,<span class="number">3</span>+<span class="number">4i</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">基本类型占位符</span></span><br><span class="line"><span class="comment">%s 字符串占位符</span></span><br><span class="line"><span class="comment">%d 整型占位符（十进制）</span></span><br><span class="line"><span class="comment">%f 浮点型占位符,%.2f精确到小数点后两位</span></span><br><span class="line"><span class="comment">%t 布尔占位符</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//使用占位符进行输出</span></span><br><span class="line">fmt.Printf(<span class="string">"我是%s,今年%d岁了，比特币余额%.2f，我美吗？——%t\n"</span>,<span class="string">"比尔"</span>,<span class="number">18</span>,<span class="number">1.234567890</span>,<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出时使用5字符宽度(默认右对齐)</span></span><br><span class="line">fmt.Printf(<span class="string">"我是%5s,今年%5d岁了，比特币余额%5.2f，我美吗？——%5t\n"</span>,<span class="string">"比尔"</span>,<span class="number">18</span>,<span class="number">1.234567890</span>,<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//5位字符宽度，左对齐</span></span><br><span class="line">fmt.Printf(<span class="string">"我是%-5s,今年%-5d岁了，比特币余额%-5.2f，我美吗？——%-5t\n"</span>,<span class="string">"比尔"</span>,<span class="number">18</span>,<span class="number">1.234567890</span>,<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印并换行</span></span><br><span class="line">fmt.Println(<span class="string">"陈述完毕！"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang基础类型占位符" scheme="https://xiaowuyoucy.github.io/tags/Golang%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B%E5%8D%A0%E4%BD%8D%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>Golang标准输入与输出</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/15/201911152305/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/15/201911152305/</id>
    <published>2019-11-15T15:06:01.000Z</published>
    <updated>2019-11-15T15:42:39.487Z</updated>
    
    <content type="html"><![CDATA[<p>每次接收一个用户输入</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"strconv"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main031</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//定义a,b两个字符串型变量，用于接收用户的输入（用户的任何输入在类型转换前都是字符串）</span></span><br><span class="line"><span class="keyword">var</span> a, b <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//提示用户输入两个数</span></span><br><span class="line">fmt.Println(<span class="string">"骚年请输入相加的两个数："</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//将用户输入的第一个“数据”存入a的内存地址（&amp;a代表对变量a取地址）</span></span><br><span class="line">fmt.Scan(&amp;a)</span><br><span class="line"></span><br><span class="line"><span class="comment">//将用户的第二个输入存入b的内存地址</span></span><br><span class="line">fmt.Scan(&amp;b)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"a="</span>, a) <span class="comment">//12</span></span><br><span class="line">fmt.Println(<span class="string">"b="</span>, b) <span class="comment">//34</span></span><br><span class="line"><span class="comment">// 字符串的相加实际是拼接操作</span></span><br><span class="line">fmt.Println(<span class="string">"a+b="</span>, a+b) <span class="comment">//1234</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 先将字符串a,b转化为64位整型，再做相加计算</span></span><br><span class="line"><span class="comment">//aInt，bInt的类型为整型</span></span><br><span class="line">aInt, _ := strconv.ParseInt(a, <span class="number">0</span>, <span class="number">64</span>)</span><br><span class="line">bInt, _ := strconv.ParseInt(b, <span class="number">0</span>, <span class="number">64</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"a+b="</span>, aInt+bInt)</span><br><span class="line">    <span class="comment">//输出结果</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一次性接收多个用户输入</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"请输入两个女神的名字"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义两个字符串变量</span></span><br><span class="line"><span class="keyword">var</span> godess1, godess2 <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//一次性接收两个用户输入，分别存入godess1, godess2变量的内存</span></span><br><span class="line"><span class="comment">//多次输入之间用空格分隔</span></span><br><span class="line">fmt.Scan(&amp;godess1, &amp;godess2)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"你喜欢"</span>, godess1)</span><br><span class="line">fmt.Println(<span class="string">"你喜欢"</span>, godess2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每次接收一个用户输入&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang基础" scheme="https://xiaowuyoucy.github.io/tags/Golang%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Golang标准输入与输出" scheme="https://xiaowuyoucy.github.io/tags/Golang%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>iota定义常量组</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/15/201911152154/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/15/201911152154/</id>
    <published>2019-11-15T13:56:00.000Z</published>
    <updated>2019-11-15T16:26:26.564Z</updated>
    
    <content type="html"><![CDATA[<p><strong>iota常量组概述 第一个常量的iota，值为0 后面的常量自动沿用第一个常量的表达式 后面常量中的iota会自动递增</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @Author: Administrator</span></span><br><span class="line"><span class="comment"> * @Description:</span></span><br><span class="line"><span class="comment"> * @File:  2 使用ioat定义常量组</span></span><br><span class="line"><span class="comment"> * @Version: 1.13.4</span></span><br><span class="line"><span class="comment"> * @Date: 2019/11/15 21:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">使用iota 定义一组常量</span></span><br><span class="line"><span class="comment">后边的常量(iota)会以n+1的递增，iota的序号默认是以0开始的</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//案例1</span></span><br><span class="line"><span class="keyword">const</span>  (</span><br><span class="line">USA = <span class="literal">iota</span> + <span class="number">1</span></span><br><span class="line">China</span><br><span class="line">Russia</span><br><span class="line">Britain</span><br><span class="line">    France</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main1</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(USA,China,Russia,Britain,France)</span><br><span class="line">    <span class="comment">//输出结果：1 2 3 4 5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//案例2</span></span><br><span class="line"><span class="keyword">const</span>  (</span><br><span class="line">Spring = (<span class="literal">iota</span> + <span class="number">1</span>) * <span class="number">2</span></span><br><span class="line">Summer</span><br><span class="line">Autumn</span><br><span class="line">Winter</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">fmt.Println(Spring,Summer,Autumn,Winter)</span><br><span class="line">    <span class="comment">//输出结果：2 4 6 8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;iota常量组概述 第一个常量的iota，值为0 后面的常量自动沿用第一个常量的表达式 后面常量中的iota会自动递增&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="iota定义常量组" scheme="https://xiaowuyoucy.github.io/tags/iota%E5%AE%9A%E4%B9%89%E5%B8%B8%E9%87%8F%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>Golang</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/15/201911152138/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/15/201911152138/</id>
    <published>2019-11-15T13:38:18.000Z</published>
    <updated>2019-12-04T17:07:39.006Z</updated>
    
    <content type="html"><![CDATA[<h1 id="golang基础"><a class="markdownIt-Anchor" href="#golang基础"></a> Golang基础</h1><p><a href="/2019/11/15/201911151907">1.1 常量、变量、表达式</a></p><p><a href="/2019/11/15/201911152154">1.2 iota定义常量组</a></p><p><a href="/2019/11/15/201911152305">1.3 标准输入与输出</a></p><p><a href="/2019/11/16/20191116038">1.4 基础类型占位符</a></p><p><a href="/2019/11/16/201911160050">1.5 程序运算</a></p><p><a href="/2019/11/18/201911180045">1.6 类型转换及移位运算</a></p><p><a href="/2019/11/18/201911182336">1.7 流程控制</a></p><p><a href="/2019/11/18/201911190001">1.8 循环结构</a></p><p><a href="/2019/11/19/201911190123">1.9 GOTO语句</a></p><p><a href="/2019/11/19/201911190306">2.0 延时执行 defer</a></p><p><a href="/2019/11/19/201911190615">2.1 函数</a></p><p><a href="/2019/11/19/201911190625">2.2 匿名函数</a></p><p><a href="/2019/11/19/201911190628">2.3 闭包函数</a></p><p><a href="/2019/12/05/201912050104">2.4 指针</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;golang基础&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#golang基础&quot;&gt;&lt;/a&gt; Golang基础&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;/2019/11/15/201911151907&quot;&gt;1.1 常量、变量、表达式&lt;/a&gt;&lt;/
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>计算机基础</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/15/201910190031/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/15/201910190031/</id>
    <published>2019-11-15T11:09:18.000Z</published>
    <updated>2019-11-17T09:02:41.207Z</updated>
    
    <content type="html"><![CDATA[<br><br><br><h3 id="简谈计算机"><a class="markdownIt-Anchor" href="#简谈计算机"></a> 简谈计算机</h3><hr><br><p></p><p>人类的起源直到今天都是一个未解之谜或者有争议性的话题。</p><p>这个问题引申一下可以诞生几个新的问题： 火星曾经有过生命吗？</p><p>地球的起源。</p><p>月球的起源。</p><p>宇宙的起源。</p><br> <p>我们常常听说，光的速度是每秒30万公里，地球诞生46亿年。 恐龙6500万年被毁灭。</p><p>人类是由猿猴演变而来。</p><p>水是生命的起源。</p><br><p>很多人把这些从小听到大的科普知识当做真理，公理去视为衡量一切的标准。</p><p>但人类随着科学的进步，历史上曾经视为一些公理的知识已经被推翻。</p><p>谁能肯定光速在传播的过程中，不会像声音一样因为不同的介质而发生改变。</p><p>谁能肯定人类测量历史，年份的技术手段是精确无误或者误差很小。</p><p>谁能肯定生命的形成必须倚靠氧气呢？</p><br><p>我们带着求知的心理去学习，去探索，去研究。</p><p>但也要提醒自己，我此时此刻所处的这个时代，我今天所学的知识，不一定就是完全准确的，对未知要有一颗谦卑敬畏之心。</p><p>亚里斯多德时代奉为真理的东西很快就被推翻了，现在没掌握的东西没准哪天就被发现掌握了。</p><p>有兴趣的朋友，可以通过搜索引擎看一下让人震惊的“电子双缝干涉实验”  。</p><br><p>虽然未必每一个人都要成为“<strong>计算机科学家</strong>”或者“<strong>程序员</strong>”。 但当你开始接触这个专业的时候，从某种程度上说：“你也是踏入了科学世界的大门。”</p><p></p><hr><br><p></p><p>人类经历了石器时代、青铜时代、铁器时代、以及标志着近代的蒸汽时代、电气时代 现在踏入了信息时代，下一个时代也许是生物智能时代……</p><br><p>在电气时代发现了电流，电子、电磁、电磁波、也有了世界第一台电子计算机。</p><p>后来又设计了机器语言、汇编语言、各种各样的编程语言，其中比较经典的是直到今天还有很多人学习使用的C语言、C++。</p><p>Unix、Linux、Windows操作系统也在不久之后诞生了第一个版本。</p><br><p>1999年上映了一部电影《异次元骇客》，电影讲述了用计算机虚拟出了洛杉矶，随着科学的发展以及人类对宇宙的观察。</p><p>有了一种新的猜测： 我们人类是被创造和设计的，就像程序员编写的游戏一样。 各种各样的自然法则，大气压，水压，重力，光速，声速等都是被提前设定好的。</p><br><p>著名的小说《三体》，电影《超时空接触》《星际穿越》《最远的地方》《黑客帝国》《月球》等艺术作品也拓展了我们想象的边缘。 如果你喜欢看一些网络小说和电影，那《无限恐怖》小说更是让人眼前一亮，脑洞大开。 人类与身居来的好奇心，不断地探索中，有很多我们肉眼无法看到的神秘力量。</p><br><p>这些东西对我们生活中吃喝拉撒似乎没有任何的意义，但只要把眼光抬高一点，仰望星空，一种奇妙难以言喻的心情，那是我们对未知，对真相的渴望。</p><p>温家宝总理2007年5月14日公布了一首诗歌《仰望星空》 一个民族有一些关注天空的人，他们才有希望；一个民族只是关心脚下的事情，那是没有未来的。 我们的民族是大有希望的民族！我希望同学们经常地仰望天空，学会做人，学会思考，学会知识和技能，做一个关心世界和国家命运的人。</p><p></p> <br> <blockquote><center> <b>仰望星空</b> </center><br><p>我仰望星空， 它是那样辽阔而深邃；</p><p>那无穷的真理， 让我苦苦地求索追随。</p><p>我仰望星空， 它是那样庄严而圣洁；</p><p>那凛然的正义， 让我充满热爱、感到敬畏。</p><p>我仰望星空， 它是那样自由而宁静；</p><p>那博大的胸怀， 让我的心灵栖息依偎。</p><p>我仰望星空， 它是那样壮丽而光辉；</p><p>那永恒的炽热， 让我心中燃起希望的烈焰、响起春雷。</p></blockquote><br><br><h3 id="电脑结构"><a class="markdownIt-Anchor" href="#电脑结构"></a> 电脑结构</h3><p><img src="https://img.vim-cn.com/3c/d731a2cb4d94f8a1a7ce86ae47e43fb51026c5.png" alt></p><p>以上结构图，最初是由  <a href="https://baike.baidu.com/item/%E7%BA%A6%E7%BF%B0%C2%B7%E5%86%AF%C2%B7%E8%AF%BA%E4%BE%9D%E6%9B%BC/986797?fromtitle=%E5%86%AF%C2%B7%E8%AF%BA%E4%BC%8A%E6%9B%BC&amp;fromid=11156519&amp;fr=aladdin" target="_blank" rel="noopener"><strong>冯·诺伊曼</strong></a> （计算机科学家）所提出，又称之为”冯·诺伊曼结构“</p><p>图中分别为：输入设备、输出设备、存储器、运算器和控制器；这些都是计算机的主要部件。</p><br><br><br><p><img src="https://img.vim-cn.com/6e/11da0df7f9ae6fdfb06aca95075ea55d6a57d6.png" alt></p><br><br><br><br><p><img src="https://img.vim-cn.com/4c/b5ce052991fdbf8f23e3a681674f0da94afabd.jpg" alt></p><p><br><br><br></p><p>我们在玩电脑的时候，我们使用键盘鼠标来操作电脑，我们在和其他人QQ聊天的时候，鼠标可以帮我们选中聊天的人，</p><p>打开聊天窗口，键盘则是负责打字，帮我们输入聊天的内容。 </p><p></p><br><p></p><p>我们在操作键盘鼠标的时候，其实都是在告诉电脑来做什么的。我们管键盘和鼠标叫输入设备。</p><p>输入设备： 向电脑输入数据和信息的设备。除了键盘。除了键盘鼠标，其他输入设备还包括触摸板、麦克风、摄像头，游戏手柄、扫描仪等等</p><p></p><br><p></p><p>显示器用来向我们展示画面，显示内容，音箱则播放音乐给我们听，我们管他们叫输出设备。</p><p>输出设备： 将电脑中的信息输出给用户的设备。常用的输入设备有：显示器、音箱、打印机、投影仪等等</p><p></p><br><p></p><p>我们买来电脑，如果只有键盘鼠标、显示器、音箱，我们能玩电脑么？肯定不能。 那么其实电脑机箱才是真正的工作的设备，</p><p>输入输出设备只是用来让我们和电脑机箱来做交互的。</p><p></p><br><p>那机箱内部都有什么呢？我们看一下下面的图片：</p><p><img src="https://img.vim-cn.com/a7/7364ae93dec8183eab07d1b804d3a95d30a850.jpg" alt></p><p>我们来看一下这里的零件都有什么用</p><br><br><br><br><br><h3 id="主板"><a class="markdownIt-Anchor" href="#主板"></a> 主板</h3><p>连接所有其他设备的设备，是其他设备的载体，主板主要是为CPU、内存、显卡、硬盘等提供平台，相当于人体的躯干，关联着各个器官。</p><p><img src="https://img.vim-cn.com/ec/544b52e90e29b21613afe2d94a7aef7d878424.png" alt></p><br><br><br><br><br><h3 id="中央处理器cntral-pocessing-uit"><a class="markdownIt-Anchor" href="#中央处理器cntral-pocessing-uit"></a> 中央处理器（Cntral Pocessing Uit ）</h3><p><img src="https://img.vim-cn.com/5b/9d69864c9e20d75e39ae6280e36b7d2ceda6f3.png" alt></p><p>CPU：中央处理单元(Cntral Pocessing Uit)的缩写，也叫处理器，是计算机的运算核心和控制核心。人靠大脑思考，电脑靠CPU来运算、控制。让电脑的各个部件顺利工作，起到协调和控制作用。</p><br><br><br><br><br><h3 id="硬盘"><a class="markdownIt-Anchor" href="#硬盘"></a> 硬盘</h3><p><img src="https://img.vim-cn.com/a6/db0a3c35075648b304fa1f507b7392675b9d12.jpg" alt></p><p>硬盘：存储资料和软件等数据的设备，有容量大，断电数据不丢失的特点。也被人们称之为“数据仓库”。</p><br><br><br><br><br><h3 id="内存"><a class="markdownIt-Anchor" href="#内存"></a> 内存</h3><p><img src="https://img.vim-cn.com/48/6a33d0ac136ca4c5f5521537d6c0b1e8ac52f9.jpg" alt></p><p>内存：1. 负责硬盘等硬件上的数据与CPU之间数据交换处理；2. 缓存系统中的临时数据。3. 断电后数据丢失。</p><br><br><br><br><br><h3 id="显卡"><a class="markdownIt-Anchor" href="#显卡"></a> 显卡</h3><p><img src="https://img.vim-cn.com/81/9f916b4de17b7451751c5c480f0cd16389fab9.jpg" alt></p><p>显卡：显示器想要呈现画面，显卡是关键。简单来说，就是负责在显示屏上显示一切信息。打个比方，它就像是人的眼睛，没有了它，电脑就无法驱动形成图像了。</p><p>显卡性能好，电脑的图形处理能力就高，尤其在玩游戏时更能发现这个（所以很多游戏会要求显卡性能）对玩家而言，最好选择独立显卡。不过，如果不玩大型游戏，CPU内置核心显卡也基本能满足要求;缺点： 系统功耗有所加大，发热量也较大，额外购买 。</p><br><br><br><br><br><h3 id="电源"><a class="markdownIt-Anchor" href="#电源"></a> 电源</h3><p><img src="https://img.vim-cn.com/4d/175cc8a587bfec9f4d461b346b46ccbd3dd08a.jpg" alt></p><p>电源：将电压220伏的市电转换为低等电压，然后送到主板及各个硬件！供电！电脑运行需要电力，而电源就是为此供电的，也可以说它在为电脑提供一切动力。电源决定了电脑的稳定性。它和人体心脏功能类似，都是提供动力的核心。</p> <br><br><br><br><br><h3 id="网卡"><a class="markdownIt-Anchor" href="#网卡"></a> 网卡</h3><p>网卡：提供联网的硬件，一般集成在主板上。</p><p>其他…</p><p><br><br><br></p><p>说了这么多，其实最最重要的设备是什么呢？ CPU、硬盘、内存。</p><p>现在我们来说一下CPU、硬盘、内存三者之间的关系。</p><br><p>首先 ,我们先回想一下三者的作用：</p><p>CPU：是计算机的运算核心和控制核心，让电脑的各个部件顺利工作，起到协调和控制作用。<br>硬盘：存储资料和软件等数据的设备，有容量大，断电数据不丢失的特点。</p><p>也被人们称之为“数据仓库”。<br>内存：1. 负责硬盘等硬件上的数据与CPU之间数据交换处理；2. 缓存系统中的临时数据。3. 断电后数据丢失。</p><br><br><br><p>然后， 我们再来看一下程序是如何执行起来的。</p><p>当我们在电脑上打开QQ时（右键-打开 或者双击QQ图标），其实是通过鼠标（输入设备）向CPU发送了一条命令，CPU接收到这条命令后，</p><p>QQ程序就从硬盘里被加载到内存（加载时不通过处理器，直接从硬盘加载程序到内存里），加载完成后，CPU就开始执行QQ程序。</p><p>程序执行起来后，CPU可以让QQ程序显示在我们的在显示器上。也就是你看到了QQ 程序运行起来了。如果这个时候，你用QQ截取了一张屏幕的图片，</p><p>那么这张图片会首先保存到内存，在没有退出截屏状态时，你可以在这张图片上写字、画线条，等你右键保存这张图片的时候，这张图片就会保存到硬盘里。</p><p><br><br></p><p>通过了解一个程序是如何运行起来的，我们就可以了解三者是如何工作的 。</p><p>可能有些人会不明白，如果程序是这样执行起来的话，那么为什么CPU不直接在硬盘里执行程序，而非要把程序放到内存后在执行呢？</p><br><p>这里是有原因的。我们先来看几张图：</p><p>好点的企业用机械硬盘 ：</p><p><img src="https://img.vim-cn.com/d1/7942e14baa151f16ea448b12e9db1aec46a45e.png" alt></p><p>内存的读写速度：</p><p><img src="https://img.vim-cn.com/2b/ca0c74989caf1e3c2be118985cecaa1f435d38.png" alt></p><br><p>通过上图我们可以看出，内存存取数据的速度比硬盘的存取速度快了10倍， 在某些环境里，硬盘和内存之间的速度差距可能会更大。</p><p>而CPU的速度比内存不知还要快多少倍。当我们把程序从硬盘放到内存以后，CPU就直接在内存运行程序，这样比CPU直接在硬盘运行程序就要快很多。</p><p>内存解决了一部分CPU运行过快，而硬盘数据存取太慢的问题。 提高了我们的电脑的运行速度。</p><p>内存就如同一条“高速车道”一般，数据由传输速度较慢的硬盘通过这条高速车道传送至CPU进行处理！</p><p>但内存是带电存储的(一旦断电数据就会消失)，而且容量有限，所以要长时间储存程序或数据就需要使用硬盘。</p> <br><p>其实内存在这里起了两个作用：</p><p>\1.  保存从硬盘读取的数据，提供给CPU使用</p><p>\2. 保存CPU的一些临时执行结果，以便CPU下次使用或保存到硬盘</p>  <br><p>三者之间的关系：</p><p>简单来说，硬盘用来存储我们的程序和数据，当我们运行程序的时候，CPU首先接受到我们的命令，之后CPU是告诉硬盘，我要运行你存储的程序A，</p><p>你把程序A送到内存去。CPU对内存说，我让硬盘把程序A送到你这里来了，你保存一下。 等程序A被完整的送到内存之后。CPU就开始执行程序A。</p><br><p>过程就像上面说的，我们在举一个接近我们生活的例子。</p><p>如果说把硬盘比喻成一个大仓库，CPU比喻成加工车间，那么内存就是一个临时的小仓库；从距离上来说， 相比内存到CPU的距离和硬盘到内存的距离，内存和CPU的距离更短；硬盘（大仓库）用来保存车间需要用的原料和最终生产出来的商品。仓库太大，取出原料和存储商品太慢，耗时间。</p> <br><p>内存（临时小仓库）：原料会先放到这里，小仓库，可以很快的找到需要的原料或商品。</p><p>CPU（车间）：从内存（小仓库）里拿到原料，生产商品。中间会有半成品，半成品可以放在内存（小仓库）里。</p><p></p><p><img src="https://img.vim-cn.com/61/c6cfcd2cfd5210b7b6d41a469ae260b9f92856.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;br&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3 id=&quot;简谈计算机&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#简谈计算机&quot;&gt;&lt;/a&gt; 简谈计算机&lt;/h3&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;
&lt;/p&gt;&lt;p&gt;人类的起源直到今天都是一个未解之谜或者有争议性的话题。&lt;/p
      
    
    </summary>
    
      <category term="简谈计算机" scheme="https://xiaowuyoucy.github.io/categories/%E7%AE%80%E8%B0%88%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="计算机基础" scheme="https://xiaowuyoucy.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
</feed>
