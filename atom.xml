<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanChen</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaowuyoucy.github.io/"/>
  <updated>2020-02-11T21:25:47.639Z</updated>
  <id>https://xiaowuyoucy.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>private关键字的作用及使用</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/11/java00036private%E5%85%B3%E9%94%AE%E5%AD%97%E7%9A%84%E4%BD%9C%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/11/java00036private关键字的作用及使用/</id>
    <published>2020-02-11T10:51:53.000Z</published>
    <updated>2020-02-11T21:25:47.639Z</updated>
    
    <content type="html"><![CDATA[<h1 id="private关键字的作用及使用"><a class="markdownIt-Anchor" href="#private关键字的作用及使用"></a> private关键字的作用及使用</h1><h4 id="问题描述定义person的年龄时无法阻止不合理的数值被赋值进来"><a class="markdownIt-Anchor" href="#问题描述定义person的年龄时无法阻止不合理的数值被赋值进来"></a> 问题描述:定义Person的年龄时,无法阻止不合理的数值被赋值进来</h4><h4 id="解决方案用private关键字将需要保护的成员变量进行修饰"><a class="markdownIt-Anchor" href="#解决方案用private关键字将需要保护的成员变量进行修饰"></a> 解决方案:用<code>private</code>关键字将需要保护的成员变量进行修饰.</h4><h5 id="private-数据类型-变量名"><a class="markdownIt-Anchor" href="#private-数据类型-变量名"></a>      <code>private 数据类型 变量名</code></h5><h4 id="但是超出了本类范围之外就不能再直接访问了"><a class="markdownIt-Anchor" href="#但是超出了本类范围之外就不能再直接访问了"></a> 但是!超出了本类范围之外就不能再直接访问了.</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person  person = <span class="keyword">new</span> Person();</span><br><span class="line">        person.name = <span class="string">"张无忌"</span>;</span><br><span class="line">        person.setAge(<span class="number">18</span>);</span><br><span class="line">        person.setHeight(<span class="number">179</span>);</span><br><span class="line">        person.setSex(<span class="string">"男"</span>);</span><br><span class="line">        person.showPersonAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top.person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age; <span class="comment">//私有成员变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> height; <span class="comment">//私有成员变量</span></span><br><span class="line">    <span class="keyword">private</span> String sex; <span class="comment">//私有成员变量</span></span><br><span class="line"><span class="comment">//用于设置age数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> m_age)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(m_age &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">"数据异常"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        age = m_age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//用于设置height数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeight</span><span class="params">(<span class="keyword">int</span> m_height)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(m_height &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">"数据异常"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        height = m_height;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//用于设置sex数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String m_sex)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        sex = m_sex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//用于获取name数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">//用于获取sex数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">//用于获取age数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//用于获取height数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">int</span> <span class="title">getHeight</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> height;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">//显示所有的成员变量</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showPersonAll</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        System.out.println(age);</span><br><span class="line">        System.out.println(height);</span><br><span class="line">        System.out.println(sex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;private关键字的作用及使用&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#private关键字的作用及使用&quot;&gt;&lt;/a&gt; private关键字的作用及使用&lt;/h1&gt;
&lt;h4 id=&quot;问题描述定义person的年龄时无法阻止不合理的数
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>面向对象的三大特征</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/11/java00035%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%B8%89%E5%A4%A7%E7%89%B9%E5%BE%81/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/11/java00035面向对象的三大特征/</id>
    <published>2020-02-11T10:23:40.000Z</published>
    <updated>2020-02-11T10:32:58.359Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面向对象的三大特征"><a class="markdownIt-Anchor" href="#面向对象的三大特征"></a> 面向对象的三大特征</h1><h3 id="面向对象的三大特征封装继承多态"><a class="markdownIt-Anchor" href="#面向对象的三大特征封装继承多态"></a> 面向对象的三大特征:<code>封装</code>,<code>继承</code>,<code>多态</code></h3><h3 id="封装性在java当中体现"><a class="markdownIt-Anchor" href="#封装性在java当中体现"></a> 封装性在java当中体现:</h3><p>1.方法就是一种封装</p><p>2.关键字<code>private</code>也是一种封装</p><h3 id="封装就是将一些细节信息隐藏起来对外界不可见"><a class="markdownIt-Anchor" href="#封装就是将一些细节信息隐藏起来对外界不可见"></a> 封装就是将一些<code>细节信息隐藏</code>起来,对外界不可见.</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Phone one = <span class="keyword">new</span> Phone();</span><br><span class="line">        one.brand = <span class="string">"苹果"</span>;</span><br><span class="line">        one.price = <span class="number">8388.0</span>;</span><br><span class="line">        one.color = <span class="string">"黑色"</span>;</span><br><span class="line">        </span><br><span class="line">        one.printAll();<span class="comment">//封装性,不用了解方法是怎么实现显示成员变量的,只需要知道怎么调用就行了.</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">    String brand;<span class="comment">//产品</span></span><br><span class="line">    <span class="keyword">double</span> price;<span class="comment">//价格</span></span><br><span class="line">    String color;<span class="comment">//颜色</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printAll</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(brand);</span><br><span class="line">        System.out.println(price);</span><br><span class="line">        System.out.println(color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;面向对象的三大特征&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#面向对象的三大特征&quot;&gt;&lt;/a&gt; 面向对象的三大特征&lt;/h1&gt;
&lt;h3 id=&quot;面向对象的三大特征封装继承多态&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; 
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>局部变量和成员变量的区别</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/11/java00034%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E5%92%8C%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/11/java00034局部变量和成员变量的区别/</id>
    <published>2020-02-11T02:59:03.000Z</published>
    <updated>2020-02-11T03:15:47.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="局部变量和成员变量的区别"><a class="markdownIt-Anchor" href="#局部变量和成员变量的区别"></a> 局部变量和成员变量的区别</h1><h3 id="1定义的位置不一样"><a class="markdownIt-Anchor" href="#1定义的位置不一样"></a> 1.定义的位置不一样</h3><p> 局部变量:在方法内部定义</p><p> 成员变量:在方法外部定义,直接写在类当中</p><h3 id="2作用范围不一样"><a class="markdownIt-Anchor" href="#2作用范围不一样"></a> 2.作用范围不一样</h3><p> 局部变量:只有方法当中才可以使用,出了方法就不能再用</p><p> 成员变量:整个类全部都可以通用.</p><h3 id="3默认值不一样"><a class="markdownIt-Anchor" href="#3默认值不一样"></a> 3.默认值不一样</h3><p> 局部变量:没有默认值,如果想使用,<code>必须</code>手动进行赋值</p><p> 成员变量:如果没有赋值,会有<code>默认值</code>,规则和数组一样</p><h3 id="4内存的位置不一样"><a class="markdownIt-Anchor" href="#4内存的位置不一样"></a> 4.内存的位置不一样</h3><p> 局部变量:位于<code>栈内存</code></p><p> 成员变量:位于<code>堆区内存</code></p><h3 id="5生命周期不一样"><a class="markdownIt-Anchor" href="#5生命周期不一样"></a> 5.生命周期不一样</h3><p> 局部变量:随着方法进栈而诞生,随着方法出栈而消失</p><p> 成员变量:随着对象创建而诞生,随着对象被垃圾回收而消失</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Phone one = <span class="keyword">new</span> Phone();<span class="comment">//在堆区诞生</span></span><br><span class="line">        <span class="keyword">int</span> a;<span class="comment">//在栈区诞生</span></span><br><span class="line"></span><br><span class="line">        System.out.println(one.color);<span class="comment">//默认值为null</span></span><br><span class="line">        <span class="comment">//System.out.println(a);//int a没有初始化,所以不能被使用.</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类的定义</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">    <span class="comment">//成员变量在整个类作用域有效</span></span><br><span class="line">    String brand;<span class="comment">//产品</span></span><br><span class="line">    <span class="keyword">double</span> price;<span class="comment">//价格</span></span><br><span class="line">    String color;<span class="comment">//颜色</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printAll</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(brand);</span><br><span class="line">        System.out.println(price);</span><br><span class="line">        System.out.println(color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;局部变量和成员变量的区别&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#局部变量和成员变量的区别&quot;&gt;&lt;/a&gt; 局部变量和成员变量的区别&lt;/h1&gt;
&lt;h3 id=&quot;1定义的位置不一样&quot;&gt;&lt;a class=&quot;markdownIt-Ancho
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>使用对象类型作为方法的返回值</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/11/java00033%E4%BD%BF%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/11/java00033使用对象类型作为方法的返回值/</id>
    <published>2020-02-11T02:10:46.000Z</published>
    <updated>2020-02-11T02:20:10.670Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用对象类型作为方法的返回值"><a class="markdownIt-Anchor" href="#使用对象类型作为方法的返回值"></a> 使用对象类型作为方法的返回值</h1><h3 id="当使用一个对象类型作为方法的返回值时返回值其实就是对象的地址"><a class="markdownIt-Anchor" href="#当使用一个对象类型作为方法的返回值时返回值其实就是对象的地址"></a> 当使用一个<code>对象类型</code>作为<code>方法</code>的<code>返回值</code>时:<code>返回值</code>其实就是<code>对象的地址</code>.</h3><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200211100844.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Phone two = getPhone();</span><br><span class="line">        System.out.println(two.brand);<span class="comment">//苹果</span></span><br><span class="line">        System.out.println(two.price);<span class="comment">//8388.0</span></span><br><span class="line">        System.out.println(two.color);<span class="comment">//玫瑰金</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Phone <span class="title">getPhone</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Phone one = <span class="keyword">new</span> Phone();</span><br><span class="line"></span><br><span class="line">        one.brand = <span class="string">"苹果"</span>;</span><br><span class="line">        one.price = <span class="number">8388.0</span>;</span><br><span class="line">        one.color = <span class="string">"玫瑰金"</span>;</span><br><span class="line">        <span class="keyword">return</span> one;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">    String brand;<span class="comment">//产品</span></span><br><span class="line">    <span class="keyword">double</span> price;<span class="comment">//价格</span></span><br><span class="line">    String color;<span class="comment">//颜色</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printAll</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(brand);</span><br><span class="line">        System.out.println(price);</span><br><span class="line">        System.out.println(color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用对象类型作为方法的返回值&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#使用对象类型作为方法的返回值&quot;&gt;&lt;/a&gt; 使用对象类型作为方法的返回值&lt;/h1&gt;
&lt;h3 id=&quot;当使用一个对象类型作为方法的返回值时返回值其实就是对象的地址&quot;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>两个对象指向同一个引用的内存图</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/11/java00031%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%8C%87%E5%90%91%E5%90%8C%E4%B8%80%E4%B8%AA%E5%BC%95%E7%94%A8%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/11/java00031两个对象指向同一个引用的内存图/</id>
    <published>2020-02-11T01:50:54.000Z</published>
    <updated>2020-02-11T01:56:52.138Z</updated>
    
    <content type="html"><![CDATA[<h1 id="两个对象指向同一个引用的内存图"><a class="markdownIt-Anchor" href="#两个对象指向同一个引用的内存图"></a> 两个对象指向同一个引用的内存图</h1><h3 id="其中one对象和two对象都指向同一个堆"><a class="markdownIt-Anchor" href="#其中one对象和two对象都指向同一个堆"></a> 其中<code>one</code>对象和<code>two</code>对象都指向同一个堆</h3><h3 id="只要其中一个对象发生改变另一个对象也会发生改变"><a class="markdownIt-Anchor" href="#只要其中一个对象发生改变另一个对象也会发生改变"></a> 只要其中一个对象发生改变,另一个对象也会发生改变</h3><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200211092357.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;两个对象指向同一个引用的内存图&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#两个对象指向同一个引用的内存图&quot;&gt;&lt;/a&gt; 两个对象指向同一个引用的内存图&lt;/h1&gt;
&lt;h3 id=&quot;其中one对象和two对象都指向同一个堆&quot;&gt;&lt;a cla
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>使用对象类型作为方法的参数</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/11/java00032%E4%BD%BF%E7%94%A8%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95%E7%9A%84%E5%8F%82%E6%95%B0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/11/java00032使用对象类型作为方法的参数/</id>
    <published>2020-02-11T01:48:44.000Z</published>
    <updated>2020-02-11T02:12:25.873Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用对象类型作为方法的参数"><a class="markdownIt-Anchor" href="#使用对象类型作为方法的参数"></a> 使用对象类型作为方法的参数</h1><h3 id="当一个对象作为参数传递到方法当中时实际上传进去的是对象的地址值"><a class="markdownIt-Anchor" href="#当一个对象作为参数传递到方法当中时实际上传进去的是对象的地址值"></a> 当一个<code>对象</code>作为<code>参数</code>,传递到<code>方法</code>当中时,实际上传进去的是<code>对象</code>的<code>地址值</code></h3><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200211093922.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Phone one = <span class="keyword">new</span> Phone();</span><br><span class="line">        one.brand = <span class="string">"苹果"</span>;</span><br><span class="line">        one.price = <span class="number">8388.0</span>;</span><br><span class="line">        one.color = <span class="string">"黑色"</span>;</span><br><span class="line"></span><br><span class="line">        method(one);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">(Phone param)</span></span>&#123;</span><br><span class="line">        System.out.println(param.brand);<span class="comment">//苹果</span></span><br><span class="line">        System.out.println(param.price);<span class="comment">//8388.0</span></span><br><span class="line">        System.out.println(param.color);<span class="comment">//黑色</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类的定义</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">    String brand;</span><br><span class="line">    <span class="keyword">double</span> price;</span><br><span class="line">    String color;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printAll</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(brand);</span><br><span class="line">        System.out.println(price);</span><br><span class="line">        System.out.println(color);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用对象类型作为方法的参数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#使用对象类型作为方法的参数&quot;&gt;&lt;/a&gt; 使用对象类型作为方法的参数&lt;/h1&gt;
&lt;h3 id=&quot;当一个对象作为参数传递到方法当中时实际上传进去的是对象的地址值&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>java两个对象使用同一个方的法内存</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00030%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%BD%BF%E7%94%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E7%9A%84%E5%86%85%E5%AD%98/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00030两个对象使用同一个方法的内存/</id>
    <published>2020-02-09T10:44:09.000Z</published>
    <updated>2020-02-09T11:03:45.735Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java两个对象使用同一个方的法内存"><a class="markdownIt-Anchor" href="#java两个对象使用同一个方的法内存"></a> java两个对象使用同一个方的法内存</h1><p> 1.创建<code><b style="color:red;">one</b></code>对象时会创建一个堆,<code><b style="color:red;">one</b></code>指向堆地址</p><p> 2.修改<code><b style="color:red;">one.brand</b></code>成员变量时,先从<code><b style="color:red;">one</b></code>找到堆地址,接着再从堆中找到<code><b style="color:red;">brand</b></code>变量,然后修改<code><b style="color:red;">brand</b></code>的值为<code><b style="color:red;">&quot;苹果&quot;</b></code></p><p> 3.修改<code><b style="color:red;">one.price</b></code>成员变量时,先从<code><b style="color:red;">one</b></code>找到堆地址,接着再从堆中找到<code><b style="color:red;">price</b></code>变量,然后修改<code><b style="color:red;">price</b></code>的值为<code><b style="color:red;">8388.0</b></code></p><p> 4.修改<code><b style="color:red;">one.color</b></code>成员变量时,先从<code><b style="color:red;">one</b></code>找到堆地址,接着再从堆中找到<code><b style="color:red;">color</b></code>变量,然后修改<code><b style="color:red;">color</b></code>的值为<code><b style="color:red;">黑色</b></code></p><p> 5.调用<code><b style="color:red;">one.call()</b></code>方法,先从<code><b style="color:red;">one</b></code>找到堆地址,接着从堆中找到成员方法所在方法区中的地址,然后在从方法区中找到<code><b style="color:red;">one.call()</b></code>方法,接着将<code><b style="color:red;">one.call()</b></code>方法压入栈.</p><p>  1).初始化<code><b style="color:red;">who</b></code>参数的值为<code><b style="color:red;">&quot;乔布斯&quot;</b></code></p><p>  2).输出&quot;给xxx打电话&quot;</p><p>  3).将<code><b style="color:red;">one.call()</b></code>方法退栈</p><p>  4).返回到调用<code><b style="color:red;">one.call()</b></code>方法中的下一条语句</p><p> 6.调用<code><b style="color:red;">one.sendMessage()</b></code>方法,先从<code><b style="color:red;">one</b></code>找到堆地址,接着从堆中找到成员方法所在方法区中的地址,然后在从方法区中找到<code><b style="color:red;">one.sendMessage()</b></code>方法,接着将<code><b style="color:red;">one.sendMessage()</b></code>方法压入栈.</p><p>  1).输出&quot;群发短信&quot;</p><p>  2).将<code><b style="color:red;">one.sendMessage()</b></code>方法退栈</p><p>  3).返回到调用<code><b style="color:red;">one.sendMessage()</b></code>方法中的下一条语句</p><p> 7.创建<code><b style="color:red;">two</b></code>对象时会创建一个堆,<code><b style="color:red;">two</b></code>指向堆地址</p><p> 8.修改<code><b style="color:red;">two.brand</b></code>成员变量时,先从<code><b style="color:red;">two</b></code>找到堆地址,接着再从堆中找到<code><b style="color:red;">brand</b></code>变量,然后修改<code><b style="color:red;">brand</b></code>的值为<code><b style="color:red;">&quot;三星&quot;</b></code></p><p> 9.修改<code><b style="color:red;">two.price</b></code>成员变量时,先从<code><b style="color:red;">two</b></code>找到堆地址,接着再从堆中找到<code><b style="color:red;">price</b></code>变量,然后修改<code><b style="color:red;">price</b></code>的值为<code><b style="color:red;">5999.0</b></code></p><p> 10.修改<code><b style="color:red;">two.color</b></code>成员变量时,先从<code><b style="color:red;">two</b></code>找到堆地址,接着再从堆中找到<code><b style="color:red;">color</b></code>变量,然后修改<code><b style="color:red;">color</b></code>的值为<code><b style="color:red;">蓝色</b></code></p><p> 11.调用<code><b style="color:red;">two.call()</b></code>方法,先从<code><b style="color:red;">two</b></code>找到堆地址,接着从堆中找到成员方法所在方法区中的地址,然后在从方法区中找到<code><b style="color:red;">two.call()</b></code>方法,接着将<code><b style="color:red;">two.call()</b></code>方法压入栈.</p><p>  1).初始化<code><b style="color:red;">who</b></code>参数的值为<code><b style="color:red;">&quot;欧巴&quot;</b></code></p><p>  2).输出&quot;给欧巴打电话&quot;</p><p>  3).将<code><b style="color:red;">two.call()</b></code>方法退栈</p><p>  4).返回到调用<code><b style="color:red;">two.call()</b></code>方法中的下一条语句</p><p> 12.调用<code><b style="color:red;">two.sendMessage()</b></code>方法,先从<code><b style="color:red;">two</b></code>找到堆地址,接着从堆中找到成员方法所在方法区中的地址,然后在从方法区中找到<code><b style="color:red;">two.sendMessage()</b></code>方法,接着将<code><b style="color:red;">two.sendMessage()</b></code>方法压入栈.</p><p>  1).输出&quot;群发短信&quot;</p><p>  2).将<code><b style="color:red;">two.sendMessage()</b></code>方法退栈</p><p>  3).返回到调用<code><b style="color:red;">two.sendMessage()</b></code>方法中的下一条语句</p><p> 13.<code><b style="color:red;">main</b></code>方法结束,将<code><b style="color:red;">main</b></code>方法退栈;</p><h4 id="span-stylecolorredone对象方法和two对象方法是指向同一个方法内存的span"><a class="markdownIt-Anchor" href="#span-stylecolorredone对象方法和two对象方法是指向同一个方法内存的span"></a> <span style="color:red;">one对象方法和two对象方法是指向同一个方法内存的</span></h4><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200209184330.png" alt="微信截图_20200209184330"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;java两个对象使用同一个方的法内存&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#java两个对象使用同一个方的法内存&quot;&gt;&lt;/a&gt; java两个对象使用同一个方的法内存&lt;/h1&gt;
&lt;p&gt; 1.创建&lt;code&gt;&lt;b style=&quot;col
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>一个对象的内存图</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00029%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00029一个对象的内存图/</id>
    <published>2020-02-09T07:40:56.000Z</published>
    <updated>2020-02-09T10:51:42.281Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一个对象的内存图"><a class="markdownIt-Anchor" href="#一个对象的内存图"></a> 一个对象的内存图</h1><p> 1.创建<code><b style="color:red;">one</b></code>对象时会创建一个堆,<code><b style="color:red;">one</b></code>指向堆地址</p><p> 2.修改<code><b style="color:red;">one.brand</b></code>成员变量时,先从<code><b style="color:red;">one</b></code>找到堆地址,接着再从堆中找到<code><b style="color:red;">brand</b></code>变量,然后修改<code><b style="color:red;">brand</b></code>的值为<code><b style="color:red;">&quot;苹果&quot;</b></code></p><p> 3.修改<code><b style="color:red;">one.price</b></code>成员变量时,先从<code><b style="color:red;">one</b></code>找到堆地址,接着再从堆中找到<code><b style="color:red;">price</b></code>变量,然后修改<code><b style="color:red;">price</b></code>的值为<code><b style="color:red;">8388.0</b></code></p><p> 4.修改<code><b style="color:red;">one.color</b></code>成员变量时,先从<code><b style="color:red;">one</b></code>找到堆地址,接着再从堆中找到<code><b style="color:red;">color</b></code>变量,然后修改<code><b style="color:red;">color</b></code>的值为<code><b style="color:red;">黑色</b></code></p><p> 5.调用<code><b style="color:red;">one.call()</b></code>方法,先从<code><b style="color:red;">one</b></code>找到堆地址,接着从堆中找到成员方法所在方法区中的地址,然后在从方法区中找到<code><b style="color:red;">one.call()</b></code>方法,接着将<code><b style="color:red;">one.call()</b></code>方法压入栈.</p><p>  1).初始化<code><b style="color:red;">who</b></code>参数的值为<code><b style="color:red;">&quot;乔布斯&quot;</b></code></p><p>  2).输出&quot;给xxx打电话&quot;</p><p>  3).将<code><b style="color:red;">one.call()</b></code>方法退栈</p><p>  4).返回到调用<code><b style="color:red;">one.call()</b></code>方法中的下一条语句</p><p> 6.调用<code><b style="color:red;">one.sendMessage()</b></code>方法,先从<code><b style="color:red;">one</b></code>找到堆地址,接着从堆中找到成员方法所在方法区中的地址,然后在从方法区中找到<code><b style="color:red;">one.sendMessage()</b></code>方法,接着将<code><b style="color:red;">one.sendMessage()</b></code>方法压入栈.</p><p>  1).输出&quot;群发短信&quot;</p><p>  2).将<code><b style="color:red;">one.sendMessage()</b></code>方法退栈</p><p>  3).返回到调用<code><b style="color:red;">one.sendMessage()</b></code>方法中的下一条语句</p><p> 7.<code><b style="color:red;">main</b></code>方法结束,将<code><b style="color:red;">main</b></code>方法退栈;</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200209153935.png" alt="微信截图_20200209153935"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一个对象的内存图&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一个对象的内存图&quot;&gt;&lt;/a&gt; 一个对象的内存图&lt;/h1&gt;
&lt;p&gt; 1.创建&lt;code&gt;&lt;b style=&quot;color:red;&quot;&gt;one&lt;/b&gt;&lt;/code&gt;对象时会创建一
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>类的定义</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00027%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00027类的定义/</id>
    <published>2020-02-09T06:37:24.000Z</published>
    <updated>2020-02-09T06:44:49.507Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类的定义"><a class="markdownIt-Anchor" href="#类的定义"></a> 类的定义</h1><h5 id="定义一个类有两个组成部分"><a class="markdownIt-Anchor" href="#定义一个类有两个组成部分"></a> 定义一个类,有两个组成部分:</h5><p>  <b>成员属性:</b> 事物的状态信息.</p><p>  <b>成员行为:</b> 事物的行为.</p><h5 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项:</h5><p>  1.成员变量是直接定义在类当中的,在方法外面.<br>  2.成员方法不要写static关键字.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top.banji;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">定义一个类,用模拟"学生"事物.其中有两个组成部分:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">属性(是什么):</span></span><br><span class="line"><span class="comment">    姓名</span></span><br><span class="line"><span class="comment">    年龄</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">行为(能做什么):</span></span><br><span class="line"><span class="comment">    吃饭</span></span><br><span class="line"><span class="comment">    睡觉</span></span><br><span class="line"><span class="comment">    学习</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">对应到Java的类当中:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">成员变量(属性):</span></span><br><span class="line"><span class="comment">    String name;</span></span><br><span class="line"><span class="comment">    int    age;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">成员方法(行为):</span></span><br><span class="line"><span class="comment">    public void eat()&#123;&#125;; //吃饭</span></span><br><span class="line"><span class="comment">    public void sleep()&#123;&#125;; //睡觉</span></span><br><span class="line"><span class="comment">    public void study()&#123;&#125;; //学习</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student01</span> </span>&#123;</span><br><span class="line">    <span class="comment">//属性(成员变量)</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span>    age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//行为(成员方法)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"吃饭饭"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"睡觉觉"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">study</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"学习!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类的定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#类的定义&quot;&gt;&lt;/a&gt; 类的定义&lt;/h1&gt;
&lt;h5 id=&quot;定义一个类有两个组成部分&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定义一个类有两个组成部
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>对象的创建及其使用</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00028%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E5%8F%8A%E5%85%B6%E4%BD%BF%E7%94%A8/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00028对象的创建及其使用/</id>
    <published>2020-02-09T06:28:42.000Z</published>
    <updated>2020-02-09T06:37:01.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对象的创建及其使用"><a class="markdownIt-Anchor" href="#对象的创建及其使用"></a> 对象的创建及其使用</h1><p>1.<b>导包:</b> 也就是指出需要使用的类,在什么位置.<br>  import 包名称.类名称;<br>  import xiaochenyan.top.banji;<br>对于和当前类属于同一个包的情况,可以省略导包语句不写.</p><p>2.<b>创建,格式</b><br>  类名称 对象名 = new 类名称();<br>  Student01 std = new Student01();</p><p>3.<b>使用,分为两种情况</b><br>  使用成员变量,对象名.成员变量<br>  使用成员方法,对象名.成员方法名(参数)<br>  (也就是,想用谁,就用对象名点谁)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top.banji;</span><br><span class="line"><span class="comment">//导包格式</span></span><br><span class="line"><span class="keyword">import</span> xiaochenyan.top.banji.Student01;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1.导包: 也就是指出需要使用的类,在什么位置.</span></span><br><span class="line"><span class="comment">import 包名称.类名称;</span></span><br><span class="line"><span class="comment">import xiaochenyan.top.banji;</span></span><br><span class="line"><span class="comment">对于和当前类属于同一个包的情况,可以省略导包语句不写.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.创建,格式</span></span><br><span class="line"><span class="comment">类名称 对象名 = new 类名称();</span></span><br><span class="line"><span class="comment">Student01 std = new Student01();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3.使用,分为两种情况</span></span><br><span class="line"><span class="comment">使用成员变量,对象名.成员变量</span></span><br><span class="line"><span class="comment">使用成员方法,对象名.成员方法名(参数)</span></span><br><span class="line"><span class="comment">(也就是,想用谁,就用对象名点谁)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test001</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建对象格式</span></span><br><span class="line">        Student01 std = <span class="keyword">new</span> Student01();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员变量格式</span></span><br><span class="line">        System.out.println(std.age);</span><br><span class="line">        System.out.println(std.name);</span><br><span class="line">        <span class="comment">//使用成员方法格式</span></span><br><span class="line">        std.eat();</span><br><span class="line">        std.sleep();</span><br><span class="line">        std.study();</span><br><span class="line">        System.out.println(<span class="string">"==========================="</span>);</span><br><span class="line"></span><br><span class="line">        std.name = <span class="string">"金毛狮王"</span>;</span><br><span class="line">        std.age = <span class="number">52</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用成员变量格式</span></span><br><span class="line">        System.out.println(std.age);</span><br><span class="line">        System.out.println(std.name);</span><br><span class="line">        <span class="comment">//使用成员方法格式</span></span><br><span class="line">        std.eat();</span><br><span class="line">        std.sleep();</span><br><span class="line">        std.study();</span><br><span class="line">        System.out.println(<span class="string">"==========================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;对象的创建及其使用&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#对象的创建及其使用&quot;&gt;&lt;/a&gt; 对象的创建及其使用&lt;/h1&gt;
&lt;p&gt;1.&lt;b&gt;导包:&lt;/b&gt; 也就是指出需要使用的类,在什么位置.&lt;br&gt;
  import 包名称.类名
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>类的定义</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00026%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00026类的定义/</id>
    <published>2020-02-09T05:52:12.000Z</published>
    <updated>2020-02-09T06:04:59.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类的定义"><a class="markdownIt-Anchor" href="#类的定义"></a> 类的定义</h1><h3 id="事物与类的对比"><a class="markdownIt-Anchor" href="#事物与类的对比"></a> 事物与类的对比</h3><p>现实世界的一类事物:</p><p>  <b>属性:</b> 事物的状态信息</p><p> <b> 行为:</b> 事物能够做什么</p><p>java中用class描述事物也是如此:</p><p><b>  成员变量:</b> 对应事物的<b>属性</b></p><p><b>  成员方法: </b>对应事物的<b>行为</b></p><h3 id="类的定义格式"><a class="markdownIt-Anchor" href="#类的定义格式"></a> 类的定义格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassName</span></span>&#123;</span><br><span class="line"><span class="comment">//成员变量</span></span><br><span class="line"><span class="comment">//成员方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><b>定义类</b>: 就是定义类的成员,包括<b>成员变量</b>和<b>成员方法</b>.</li><li><b>成员变量</b>: 和以前定义变量几乎一样的,只不过位置发生了改变.<b>在类中,在方法外</b>.</li><li><b>成员方法</b>: 和以前定义方法几乎是一样的.只不过<b>把static去掉</b>.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类的定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#类的定义&quot;&gt;&lt;/a&gt; 类的定义&lt;/h1&gt;
&lt;h3 id=&quot;事物与类的对比&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#事物与类的对比&quot;&gt;&lt;/a&gt; 事物
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>类和对象的关系</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00025%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00025类和对象的关系/</id>
    <published>2020-02-09T05:47:30.000Z</published>
    <updated>2020-02-09T05:50:15.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类和对象"><a class="markdownIt-Anchor" href="#类和对象"></a> 类和对象</h1><p><img src="/images/javawz/aa1581227347621.png" alt="1581227347621"></p><p><img src="/images/javawz/aa1581227368817.png" alt="1581227368817"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类和对象&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#类和对象&quot;&gt;&lt;/a&gt; 类和对象&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/javawz/aa1581227347621.png&quot; alt=&quot;1581227347621&quot;&gt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>面向对象思想的举例</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00024%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%9D%E6%83%B3%E7%9A%84%E4%B8%BE%E4%BE%8B/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00024面向对象思想的举例/</id>
    <published>2020-02-09T05:44:02.000Z</published>
    <updated>2020-02-09T05:46:38.927Z</updated>
    
    <content type="html"><![CDATA[<h1 id="举例"><a class="markdownIt-Anchor" href="#举例"></a> 举例</h1><p><img src="/images/javawz/aa1581227107719.png" alt="1581227107719"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;举例&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#举例&quot;&gt;&lt;/a&gt; 举例&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/javawz/aa1581227107719.png&quot; alt=&quot;1581227107719&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>面向对象思想的概述</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/09/java00023%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%9D%E6%83%B3%E7%9A%84%E6%A6%82%E8%BF%B0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/09/java00023面向对象思想的概述/</id>
    <published>2020-02-09T05:29:23.000Z</published>
    <updated>2020-02-09T05:41:57.338Z</updated>
    
    <content type="html"><![CDATA[<p>面向过程: 当需要实现一个功能的时候,每一个具体的步骤都要亲力亲为,详细处理每一个细节.</p><p>面向对象: 当需要实现一个功能的时候,不关心具体的步骤,而是找一个已经具有该功能的人,来帮我做事儿.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top.banji;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">23</span>,<span class="number">4</span>,<span class="number">15</span>,<span class="number">51</span>,<span class="number">2</span>,<span class="number">52</span>,<span class="number">23</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//要求打印格式为[123,,123,41,123,]</span></span><br><span class="line">        <span class="comment">//使用面向过程,每一个步骤细节都要亲力亲为</span></span><br><span class="line">        System.out.print(<span class="string">"["</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == array.length - <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.println(array[i] + <span class="string">"]"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.print(array[i] + <span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"======================"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用面向对象</span></span><br><span class="line">        <span class="comment">//找一个JDK给我们提供好的Arrays类</span></span><br><span class="line">        <span class="comment">//其中有一个toString方法,直接就能把数组变成想要的格式字符串</span></span><br><span class="line">        System.out.println(Arrays.toString(array));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;面向过程: 当需要实现一个功能的时候,每一个具体的步骤都要亲力亲为,详细处理每一个细节.&lt;/p&gt;
&lt;p&gt;面向对象: 当需要实现一个功能的时候,不关心具体的步骤,而是找一个已经具有该功能的人,来帮我做事儿.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组作为方法的返回值返回</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00022%E6%95%B0%E7%BB%84%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95%E8%BF%94%E5%9B%9E%E5%80%BC%E8%BF%94%E5%9B%9E/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00022数组作为方法返回值返回/</id>
    <published>2020-02-08T10:20:21.000Z</published>
    <updated>2020-02-09T04:59:23.096Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值"><a class="markdownIt-Anchor" href="#一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值"></a> 一个方法可以有1个或多个参数;但是只能有0个或1个返回值,不能有个多返回值.</h5><h5 id="如果希望一个方法当中产生了多个结果数据进行返回-怎么办"><a class="markdownIt-Anchor" href="#如果希望一个方法当中产生了多个结果数据进行返回-怎么办"></a> 如果希望一个方法当中产生了多个结果数据进行返回 , 怎么办 ?</h5><h5 id="解决方案使用一个数组作为返回值类型即可"><a class="markdownIt-Anchor" href="#解决方案使用一个数组作为返回值类型即可"></a> 解决方案:使用一个数组作为返回值类型即可.</h5><h5 id="任何数据类型都能作为方法的参数类型或者返回值类型"><a class="markdownIt-Anchor" href="#任何数据类型都能作为方法的参数类型或者返回值类型"></a> 任何数据类型都能作为方法的参数类型,或者返回值类型.</h5><h5 id="数组作为方法的参数传递进去的其实是数组的地址值"><a class="markdownIt-Anchor" href="#数组作为方法的参数传递进去的其实是数组的地址值"></a> 数组作为方法的参数,传递进去的其实是数组的地址值</h5><h5 id="数组作为方法的返回值返回的其实是数组的地址值"><a class="markdownIt-Anchor" href="#数组作为方法的返回值返回的其实是数组的地址值"></a> 数组作为方法的返回值,返回的其实是数组的地址值</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test020</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = sumAndPingJunShu(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : array) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] sumAndPingJunShu(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = a + b + c;</span><br><span class="line">        <span class="keyword">int</span> pjs = (a + b + c) / <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> cj  = a * b * c;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;sum,pjs,cj&#125;;</span><br><span class="line">        <span class="keyword">return</span>  array;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值&quot;&gt;&lt;/a&gt; 一个方法可以有1个或多个参数;但是
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组作为方法参数</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00021%E6%95%B0%E7%BB%84%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00021数组作为方法参数/</id>
    <published>2020-02-08T10:12:58.000Z</published>
    <updated>2020-02-08T10:17:30.536Z</updated>
    
    <content type="html"><![CDATA[<h5 id="数组可以作为方法的参数"><a class="markdownIt-Anchor" href="#数组可以作为方法的参数"></a> 数组可以作为方法的参数</h5><h5 id="当调用方法的时候向方法的小括号进行传参传递进去的其实是数组的地址值"><a class="markdownIt-Anchor" href="#当调用方法的时候向方法的小括号进行传参传递进去的其实是数组的地址值"></a> 当调用方法的时候,向方法的小括号进行传参,传递进去的其实是数组的地址值.</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test019</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">234</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">124</span>,<span class="number">21</span>,<span class="number">315</span>,<span class="number">15</span>,<span class="number">1235</span>,<span class="number">461</span>,<span class="number">235</span>,<span class="number">1</span>,<span class="number">34632</span>,<span class="number">135</span>,<span class="number">124151</span>,<span class="number">32515</span>,<span class="number">612</span>,<span class="number">351</span>,<span class="number">35</span>&#125;;</span><br><span class="line"></span><br><span class="line">        arraySort(array); <span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line">        arrayOut(array);<span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line">        funFZ(array);<span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line">        arrayOut(array);<span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//冒泡法排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arraySort</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array.length - <span class="number">1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; array.length - (i + <span class="number">1</span>);j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(array[j] &lt; array[j + <span class="number">1</span>] )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = array[j];</span><br><span class="line">                    array[j] = array[j + <span class="number">1</span>];</span><br><span class="line">                    array[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组遍历输出</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arrayOut</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : array) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">"   "</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">        System.out.println(<span class="string">"==================================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组反转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funFZ</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = array.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(;min &lt; max;min++,max--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = array[min];</span><br><span class="line">            array[min] = array[max];</span><br><span class="line">            array[max] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;数组可以作为方法的参数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组可以作为方法的参数&quot;&gt;&lt;/a&gt; 数组可以作为方法的参数&lt;/h5&gt;
&lt;h5 id=&quot;当调用方法的时候向方法的小括号进行传参传递进去的其实是数组的地址值&quot;&gt;&lt;a cl
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>获取数组的最大值</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00019%E8%8E%B7%E5%8F%96%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00019获取数组的最大值/</id>
    <published>2020-02-08T07:37:28.000Z</published>
    <updated>2020-02-08T09:32:21.502Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javawz/aa1581147624905.png" alt="1581147624905"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test018</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">21</span>,<span class="number">41</span>,<span class="number">1235</span>,<span class="number">21</span>,<span class="number">12</span>,<span class="number">52</span>,<span class="number">2351</span>,<span class="number">234</span>,<span class="number">12</span>,<span class="number">234</span>,<span class="number">23</span>,<span class="number">123412</span>,<span class="number">12</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> max = array[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; array.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(max &lt; array[i]) <span class="comment">// 如果max 小于 array[i],那么将array[i]的值,赋值给max</span></span><br><span class="line">            &#123;</span><br><span class="line">                max = array[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"array数组的最大值:"</span> + max);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/javawz/aa1581147624905.png&quot; alt=&quot;1581147624905&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组的遍历输出</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00020%E6%95%B0%E7%BB%84%E7%9A%84%E9%81%8D%E5%8E%86%E8%BE%93%E5%87%BA/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00020数组的遍历输出/</id>
    <published>2020-02-08T07:25:09.000Z</published>
    <updated>2020-02-08T09:32:08.533Z</updated>
    
    <content type="html"><![CDATA[<h5 id="遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出"><a class="markdownIt-Anchor" href="#遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出"></a> 遍历数组,说的就是对数组当中的每一个元素进行逐一处理.默认的处理方式就是打印输出.</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test017</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">324</span>,<span class="number">12</span>,<span class="number">234</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">51</span>,<span class="number">234</span>,<span class="number">21</span>&#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//第一种方法,将array的每一个元素逐次赋值给i</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i  : array) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"======================"</span>);</span><br><span class="line">        <span class="comment">//第二种方法,将i当做array的下标,通过i的不断增加,来打印array数组,且i小于array.length</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(array[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出&quot;&gt;&lt;/a&gt; 遍历数组,说的就是对数
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组元素反转</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00018%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%8F%8D%E8%BD%AC/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00018数组元素反转/</id>
    <published>2020-02-08T07:13:31.000Z</published>
    <updated>2020-02-08T09:09:01.983Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javawz/aa1581152650601.png" alt="1581152650601"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test019</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">234</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">124</span>,<span class="number">21</span>,<span class="number">315</span>,<span class="number">15</span>,<span class="number">1235</span>,<span class="number">461</span>,<span class="number">235</span>,<span class="number">1</span>,<span class="number">34632</span>,<span class="number">135</span>,<span class="number">124151</span>,<span class="number">32515</span>,<span class="number">612</span>,<span class="number">351</span>,<span class="number">35</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数组排序</span></span><br><span class="line">        arraySort(array);</span><br><span class="line">        <span class="comment">//数组遍历输出</span></span><br><span class="line">        arrayOut(array);</span><br><span class="line">        <span class="comment">//数组反转</span></span><br><span class="line">        funFZ(array);</span><br><span class="line">        <span class="comment">//数组遍历输出</span></span><br><span class="line">        arrayOut(array);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//冒泡法排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arraySort</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array.length - <span class="number">1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; array.length - (i + <span class="number">1</span>);j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(array[j] &lt; array[j + <span class="number">1</span>] )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = array[j];</span><br><span class="line">                    array[j] = array[j + <span class="number">1</span>];</span><br><span class="line">                    array[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组遍历输出</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arrayOut</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : array) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">"   "</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">        System.out.println(<span class="string">"==================================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组反转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funFZ</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = array.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(;min &lt; max;min++,max--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = array[min];</span><br><span class="line">            array[min] = array[max];</span><br><span class="line">            array[max] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/javawz/aa1581152650601.png&quot; alt=&quot;1581152650601&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>获取数组长度</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00017%E8%8E%B7%E5%8F%96%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00017获取数组长度/</id>
    <published>2020-02-08T07:13:31.000Z</published>
    <updated>2020-02-08T07:16:52.078Z</updated>
    
    <content type="html"><![CDATA[<h5 id="如何获取数组的长度格式"><a class="markdownIt-Anchor" href="#如何获取数组的长度格式"></a> 如何获取数组的长度,格式:</h5><h5 id="span-stylecolorred数组名称lengthspan"><a class="markdownIt-Anchor" href="#span-stylecolorred数组名称lengthspan"></a> <span style="color:red;">数组名称.length</span></h5><h5 id="这将会得到一个int数字代表数组的长度"><a class="markdownIt-Anchor" href="#这将会得到一个int数字代表数组的长度"></a> 这将会得到一个int数字,代表数组的长度.</h5><h5 id="数组一旦创建程序运行期间长度不可发生改变"><a class="markdownIt-Anchor" href="#数组一旦创建程序运行期间长度不可发生改变"></a> 数组一旦创建,程序运行期间,长度不可发生改变.</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">如何获取数组的长度,格式:</span></span><br><span class="line"><span class="comment">数组名称.length</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这将会得到一个int数字,代表数组的长度.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">数组一旦创建,程序运行期间,长度不可发生改变.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test016</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arrayA = &#123;<span class="number">12</span>,<span class="number">12</span>,<span class="number">324</span>,<span class="number">5</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">535</span>,<span class="number">13</span>&#125;;</span><br><span class="line">        <span class="comment">//获取数组arrayA的长度</span></span><br><span class="line">        System.out.println(<span class="string">"arrayA数组的长度:"</span> + arrayA.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arrayB = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">        <span class="comment">//获取数组arrayB的长度</span></span><br><span class="line">        System.out.println(<span class="string">"arrayB数组的长度:"</span> + arrayB.length);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;如何获取数组的长度格式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#如何获取数组的长度格式&quot;&gt;&lt;/a&gt; 如何获取数组的长度,格式:&lt;/h5&gt;
&lt;h5 id=&quot;span-stylecolorred数组名称lengthspan&quot;&gt;&lt;a c
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
</feed>
