<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanChen</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaowuyoucy.github.io/"/>
  <updated>2020-02-09T04:59:23.096Z</updated>
  <id>https://xiaowuyoucy.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数组作为方法的返回值返回</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00022%E6%95%B0%E7%BB%84%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95%E8%BF%94%E5%9B%9E%E5%80%BC%E8%BF%94%E5%9B%9E/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00022数组作为方法返回值返回/</id>
    <published>2020-02-08T10:20:21.000Z</published>
    <updated>2020-02-09T04:59:23.096Z</updated>
    
    <content type="html"><![CDATA[<h5 id="一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值"><a class="markdownIt-Anchor" href="#一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值"></a> 一个方法可以有1个或多个参数;但是只能有0个或1个返回值,不能有个多返回值.</h5><h5 id="如果希望一个方法当中产生了多个结果数据进行返回-怎么办"><a class="markdownIt-Anchor" href="#如果希望一个方法当中产生了多个结果数据进行返回-怎么办"></a> 如果希望一个方法当中产生了多个结果数据进行返回 , 怎么办 ?</h5><h5 id="解决方案使用一个数组作为返回值类型即可"><a class="markdownIt-Anchor" href="#解决方案使用一个数组作为返回值类型即可"></a> 解决方案:使用一个数组作为返回值类型即可.</h5><h5 id="任何数据类型都能作为方法的参数类型或者返回值类型"><a class="markdownIt-Anchor" href="#任何数据类型都能作为方法的参数类型或者返回值类型"></a> 任何数据类型都能作为方法的参数类型,或者返回值类型.</h5><h5 id="数组作为方法的参数传递进去的其实是数组的地址值"><a class="markdownIt-Anchor" href="#数组作为方法的参数传递进去的其实是数组的地址值"></a> 数组作为方法的参数,传递进去的其实是数组的地址值</h5><h5 id="数组作为方法的返回值返回的其实是数组的地址值"><a class="markdownIt-Anchor" href="#数组作为方法的返回值返回的其实是数组的地址值"></a> 数组作为方法的返回值,返回的其实是数组的地址值</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test020</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = sumAndPingJunShu(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : array) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] sumAndPingJunShu(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = a + b + c;</span><br><span class="line">        <span class="keyword">int</span> pjs = (a + b + c) / <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span> cj  = a * b * c;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;sum,pjs,cj&#125;;</span><br><span class="line">        <span class="keyword">return</span>  array;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一个方法可以有1个或多个参数但是只能有0个或1个返回值不能有个多返回值&quot;&gt;&lt;/a&gt; 一个方法可以有1个或多个参数;但是
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组作为方法参数</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00021%E6%95%B0%E7%BB%84%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00021数组作为方法参数/</id>
    <published>2020-02-08T10:12:58.000Z</published>
    <updated>2020-02-08T10:17:30.536Z</updated>
    
    <content type="html"><![CDATA[<h5 id="数组可以作为方法的参数"><a class="markdownIt-Anchor" href="#数组可以作为方法的参数"></a> 数组可以作为方法的参数</h5><h5 id="当调用方法的时候向方法的小括号进行传参传递进去的其实是数组的地址值"><a class="markdownIt-Anchor" href="#当调用方法的时候向方法的小括号进行传参传递进去的其实是数组的地址值"></a> 当调用方法的时候,向方法的小括号进行传参,传递进去的其实是数组的地址值.</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test019</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">234</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">124</span>,<span class="number">21</span>,<span class="number">315</span>,<span class="number">15</span>,<span class="number">1235</span>,<span class="number">461</span>,<span class="number">235</span>,<span class="number">1</span>,<span class="number">34632</span>,<span class="number">135</span>,<span class="number">124151</span>,<span class="number">32515</span>,<span class="number">612</span>,<span class="number">351</span>,<span class="number">35</span>&#125;;</span><br><span class="line"></span><br><span class="line">        arraySort(array); <span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line">        arrayOut(array);<span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line">        funFZ(array);<span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line">        arrayOut(array);<span class="comment">// 把数组地址值传递给形参</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//冒泡法排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arraySort</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array.length - <span class="number">1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; array.length - (i + <span class="number">1</span>);j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(array[j] &lt; array[j + <span class="number">1</span>] )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = array[j];</span><br><span class="line">                    array[j] = array[j + <span class="number">1</span>];</span><br><span class="line">                    array[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组遍历输出</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arrayOut</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : array) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">"   "</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">        System.out.println(<span class="string">"==================================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组反转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funFZ</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = array.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(;min &lt; max;min++,max--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = array[min];</span><br><span class="line">            array[min] = array[max];</span><br><span class="line">            array[max] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;数组可以作为方法的参数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组可以作为方法的参数&quot;&gt;&lt;/a&gt; 数组可以作为方法的参数&lt;/h5&gt;
&lt;h5 id=&quot;当调用方法的时候向方法的小括号进行传参传递进去的其实是数组的地址值&quot;&gt;&lt;a cl
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>获取数组的最大值</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00019%E8%8E%B7%E5%8F%96%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00019获取数组的最大值/</id>
    <published>2020-02-08T07:37:28.000Z</published>
    <updated>2020-02-08T09:32:21.502Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javawz/aa1581147624905.png" alt="1581147624905"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test018</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">21</span>,<span class="number">41</span>,<span class="number">1235</span>,<span class="number">21</span>,<span class="number">12</span>,<span class="number">52</span>,<span class="number">2351</span>,<span class="number">234</span>,<span class="number">12</span>,<span class="number">234</span>,<span class="number">23</span>,<span class="number">123412</span>,<span class="number">12</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> max = array[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; array.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(max &lt; array[i]) <span class="comment">// 如果max 小于 array[i],那么将array[i]的值,赋值给max</span></span><br><span class="line">            &#123;</span><br><span class="line">                max = array[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"array数组的最大值:"</span> + max);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/javawz/aa1581147624905.png&quot; alt=&quot;1581147624905&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组的遍历输出</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00020%E6%95%B0%E7%BB%84%E7%9A%84%E9%81%8D%E5%8E%86%E8%BE%93%E5%87%BA/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00020数组的遍历输出/</id>
    <published>2020-02-08T07:25:09.000Z</published>
    <updated>2020-02-08T09:32:08.533Z</updated>
    
    <content type="html"><![CDATA[<h5 id="遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出"><a class="markdownIt-Anchor" href="#遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出"></a> 遍历数组,说的就是对数组当中的每一个元素进行逐一处理.默认的处理方式就是打印输出.</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test017</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">324</span>,<span class="number">12</span>,<span class="number">234</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">51</span>,<span class="number">234</span>,<span class="number">21</span>&#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//第一种方法,将array的每一个元素逐次赋值给i</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i  : array) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"======================"</span>);</span><br><span class="line">        <span class="comment">//第二种方法,将i当做array的下标,通过i的不断增加,来打印array数组,且i小于array.length</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(array[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#遍历数组说的就是对数组当中的每一个元素进行逐一处理默认的处理方式就是打印输出&quot;&gt;&lt;/a&gt; 遍历数组,说的就是对数
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>获取数组长度</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00017%E8%8E%B7%E5%8F%96%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00017获取数组长度/</id>
    <published>2020-02-08T07:13:31.000Z</published>
    <updated>2020-02-08T07:16:52.078Z</updated>
    
    <content type="html"><![CDATA[<h5 id="如何获取数组的长度格式"><a class="markdownIt-Anchor" href="#如何获取数组的长度格式"></a> 如何获取数组的长度,格式:</h5><h5 id="span-stylecolorred数组名称lengthspan"><a class="markdownIt-Anchor" href="#span-stylecolorred数组名称lengthspan"></a> <span style="color:red;">数组名称.length</span></h5><h5 id="这将会得到一个int数字代表数组的长度"><a class="markdownIt-Anchor" href="#这将会得到一个int数字代表数组的长度"></a> 这将会得到一个int数字,代表数组的长度.</h5><h5 id="数组一旦创建程序运行期间长度不可发生改变"><a class="markdownIt-Anchor" href="#数组一旦创建程序运行期间长度不可发生改变"></a> 数组一旦创建,程序运行期间,长度不可发生改变.</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">如何获取数组的长度,格式:</span></span><br><span class="line"><span class="comment">数组名称.length</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这将会得到一个int数字,代表数组的长度.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">数组一旦创建,程序运行期间,长度不可发生改变.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test016</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arrayA = &#123;<span class="number">12</span>,<span class="number">12</span>,<span class="number">324</span>,<span class="number">5</span>,<span class="number">15</span>,<span class="number">12</span>,<span class="number">535</span>,<span class="number">13</span>&#125;;</span><br><span class="line">        <span class="comment">//获取数组arrayA的长度</span></span><br><span class="line">        System.out.println(<span class="string">"arrayA数组的长度:"</span> + arrayA.length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arrayB = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">        <span class="comment">//获取数组arrayB的长度</span></span><br><span class="line">        System.out.println(<span class="string">"arrayB数组的长度:"</span> + arrayB.length);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;如何获取数组的长度格式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#如何获取数组的长度格式&quot;&gt;&lt;/a&gt; 如何获取数组的长度,格式:&lt;/h5&gt;
&lt;h5 id=&quot;span-stylecolorred数组名称lengthspan&quot;&gt;&lt;a c
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组元素反转</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00018%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%8F%8D%E8%BD%AC/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00018数组元素反转/</id>
    <published>2020-02-08T07:13:31.000Z</published>
    <updated>2020-02-08T09:09:01.983Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javawz/aa1581152650601.png" alt="1581152650601"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test019</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = &#123;<span class="number">1</span>,<span class="number">234</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">124</span>,<span class="number">21</span>,<span class="number">315</span>,<span class="number">15</span>,<span class="number">1235</span>,<span class="number">461</span>,<span class="number">235</span>,<span class="number">1</span>,<span class="number">34632</span>,<span class="number">135</span>,<span class="number">124151</span>,<span class="number">32515</span>,<span class="number">612</span>,<span class="number">351</span>,<span class="number">35</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数组排序</span></span><br><span class="line">        arraySort(array);</span><br><span class="line">        <span class="comment">//数组遍历输出</span></span><br><span class="line">        arrayOut(array);</span><br><span class="line">        <span class="comment">//数组反转</span></span><br><span class="line">        funFZ(array);</span><br><span class="line">        <span class="comment">//数组遍历输出</span></span><br><span class="line">        arrayOut(array);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//冒泡法排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arraySort</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; array.length - <span class="number">1</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; array.length - (i + <span class="number">1</span>);j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(array[j] &lt; array[j + <span class="number">1</span>] )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = array[j];</span><br><span class="line">                    array[j] = array[j + <span class="number">1</span>];</span><br><span class="line">                    array[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组遍历输出</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arrayOut</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : array) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">"   "</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">        System.out.println(<span class="string">"==================================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//数组反转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funFZ</span><span class="params">(<span class="keyword">int</span>[] array)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = array.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> min = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(;min &lt; max;min++,max--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = array[min];</span><br><span class="line">            array[min] = array[max];</span><br><span class="line">            array[max] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/javawz/aa1581152650601.png&quot; alt=&quot;1581152650601&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>常见问题 空指针异常</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00016%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-%E7%A9%BA%E6%8C%87%E9%92%88%E5%BC%82%E5%B8%B8/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00016常见问题-空指针异常/</id>
    <published>2020-02-08T06:59:12.000Z</published>
    <updated>2020-02-08T07:06:45.688Z</updated>
    
    <content type="html"><![CDATA[<h5 id="所有的引用类型变量都可以赋值为一个null值但是代表其中什么都没有"><a class="markdownIt-Anchor" href="#所有的引用类型变量都可以赋值为一个null值但是代表其中什么都没有"></a> 所有的引用类型变量,都可以赋值为一个null值.但是代表其中什么都没有.</h5><h5 id="数组必须进行new初始化才能使用其中的元素"><a class="markdownIt-Anchor" href="#数组必须进行new初始化才能使用其中的元素"></a> 数组必须进行new初始化才能使用其中的元素</h5><h5 id="如果只是赋值了一个null没有进行new创建"><a class="markdownIt-Anchor" href="#如果只是赋值了一个null没有进行new创建"></a> 如果只是赋值了一个null,没有进行new创建,</h5><h5 id="那么将会发生-空指针异常-nullpointerexception"><a class="markdownIt-Anchor" href="#那么将会发生-空指针异常-nullpointerexception"></a> 那么将会发生:    空指针异常 NullPointerException</h5><h5 id="原因忘了补new"><a class="markdownIt-Anchor" href="#原因忘了补new"></a> 原因:忘了补new</h5><h5 id="解决补上new"><a class="markdownIt-Anchor" href="#解决补上new"></a> 解决:补上new</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test015</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    所有的引用类型变量,都可以赋值为一个null值.但是代表其中什么都没有.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    数组必须进行new初始化才能使用其中的元素</span></span><br><span class="line"><span class="comment">    如果只是赋值了一个null,没有进行new创建,</span></span><br><span class="line"><span class="comment">    那么将会发生:</span></span><br><span class="line"><span class="comment">        空指针异常 NullPointerException</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    原因:忘了补new</span></span><br><span class="line"><span class="comment">    解决:补上new</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//array = new int[3];</span></span><br><span class="line">        System.out.println(array[<span class="number">0</span>]);<span class="comment">//空指针异常</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;所有的引用类型变量都可以赋值为一个null值但是代表其中什么都没有&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#所有的引用类型变量都可以赋值为一个null值但是代表其中什么都没有&quot;&gt;&lt;/a&gt; 所有的引用类型变量,都可以赋值为一个nul
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组索引越界异常</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00015%E6%95%B0%E7%BB%84%E7%B4%A2%E5%BC%95%E8%B6%8A%E7%95%8C%E5%BC%82%E5%B8%B8/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00015数组索引越界异常/</id>
    <published>2020-02-08T06:46:01.000Z</published>
    <updated>2020-02-08T06:59:30.245Z</updated>
    
    <content type="html"><![CDATA[<h5 id="数组索引从0开始一直到数组长度-1为止"><a class="markdownIt-Anchor" href="#数组索引从0开始一直到数组长度-1为止"></a> 数组索引从0开始,一直到数组长度-1为止.</h5><h5 id="如果访问数组元素的时候索引编号并不存在那么将会发生数组索引越界异常"><a class="markdownIt-Anchor" href="#如果访问数组元素的时候索引编号并不存在那么将会发生数组索引越界异常"></a> 如果访问数组元素的时候,索引编号并不存在,那么将会发生数组索引越界异常</h5><h5 id="提示arrayindexoutofboundsexception"><a class="markdownIt-Anchor" href="#提示arrayindexoutofboundsexception"></a> 提示:ArrayIndexOutOfBoundsException</h5><h5 id="原因-索引编号写错了"><a class="markdownIt-Anchor" href="#原因-索引编号写错了"></a> 原因: 索引编号写错了</h5><h5 id="解决-修改成为存在的正确索引编号"><a class="markdownIt-Anchor" href="#解决-修改成为存在的正确索引编号"></a> 解决: 修改成为存在的正确索引编号.</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test014</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    数组索引从0开始,一直到数组长度-1为止.</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    如果访问数组元素的时候,索引编号并不存在,那么将会发生数组索引越界异常</span></span><br><span class="line"><span class="comment">    ArrayIndexOutOfBoundsException</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    原因: 索引编号写错了</span></span><br><span class="line"><span class="comment">    解决: 修改成为存在的正确索引编号.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">        array[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        array[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">        array[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">        array[<span class="number">3</span>] = <span class="number">4</span>; <span class="comment">// 数组越界,发生异常,导致错误</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;数组索引从0开始一直到数组长度-1为止&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组索引从0开始一直到数组长度-1为止&quot;&gt;&lt;/a&gt; 数组索引从0开始,一直到数组长度-1为止.&lt;/h5&gt;
&lt;h5 id=&quot;如果访问数组元素的时候索引编
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>两个引用指向同一个数组</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00014%E4%B8%A4%E4%B8%AA%E5%BC%95%E7%94%A8%E6%8C%87%E5%90%91%E5%90%8C%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00014两个引用指向同一个数组/</id>
    <published>2020-02-07T20:05:38.000Z</published>
    <updated>2020-02-07T20:08:12.994Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200207202603.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">package xiaochenyan.top;</span><br><span class="line"></span><br><span class="line">public class test013 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int[] arrayA = new int[3];</span><br><span class="line">        System.out.println(arrayA);</span><br><span class="line">        System.out.println(arrayA[0]);</span><br><span class="line">        System.out.println(arrayA[1]);</span><br><span class="line">        System.out.println(arrayA[2]);</span><br><span class="line">        System.out.println(&quot;====================&quot;);</span><br><span class="line">        arrayA[1] = 10;</span><br><span class="line">        arrayA[2] = 20;</span><br><span class="line">        System.out.println(arrayA);</span><br><span class="line">        System.out.println(arrayA[0]);</span><br><span class="line">        System.out.println(arrayA[1]);</span><br><span class="line">        System.out.println(arrayA[2]);</span><br><span class="line">        System.out.println(&quot;====================&quot;);</span><br><span class="line"></span><br><span class="line">        int[] arrayB = arrayA;</span><br><span class="line">        System.out.println(arrayB);</span><br><span class="line">        System.out.println(arrayB[0]);</span><br><span class="line">        System.out.println(arrayB[1]);</span><br><span class="line">        System.out.println(arrayB[2]);</span><br><span class="line">        System.out.println(&quot;====================&quot;);</span><br><span class="line">        arrayB[1] = 10;</span><br><span class="line">        arrayB[2] = 20;</span><br><span class="line">        System.out.println(arrayB);</span><br><span class="line">        System.out.println(arrayB[0]);</span><br><span class="line">        System.out.println(arrayB[1]);</span><br><span class="line">        System.out.println(arrayB[2]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200207202603.png&quot; alt&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>两个数组的内存图</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00013%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00013两个数组的内存图/</id>
    <published>2020-02-07T19:28:56.000Z</published>
    <updated>2020-02-07T19:35:14.584Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xiaochenyan.top;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test012</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] array1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];<span class="comment">//创建一个包含三个元素的array1数组</span></span><br><span class="line">        System.out.println(array1);<span class="comment">//打印array1的地址</span></span><br><span class="line">        array1[<span class="number">1</span>] = <span class="number">2</span>;<span class="comment">//修改array1[1]的值</span></span><br><span class="line">        array1[<span class="number">2</span>] = <span class="number">100</span>;<span class="comment">//修改array1[2]的值</span></span><br><span class="line">        <span class="keyword">int</span>[] array2 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];<span class="comment">//创建一个包含三个元素的array2数组</span></span><br><span class="line">        System.out.println(array2);<span class="comment">//打印array2的地址</span></span><br><span class="line">        array2[<span class="number">1</span>] = <span class="number">300</span>;<span class="comment">//修改array2[1]的值</span></span><br><span class="line">        array2[<span class="number">2</span>] = <span class="number">25</span>;<span class="comment">//修改array2[2]的值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/javawz/00002.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>一个数组的内存图</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/08/java00012%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%86%85%E5%AD%98%E5%9B%BE/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/08/java00012一个数组的内存图/</id>
    <published>2020-02-07T18:51:11.000Z</published>
    <updated>2020-02-07T18:55:45.444Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test011</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];<span class="comment">//从堆区创建一个包含三个元素的数组</span></span><br><span class="line"></span><br><span class="line">        System.out.println(array);</span><br><span class="line"></span><br><span class="line">        array[<span class="number">1</span>] = <span class="number">2</span>; <span class="comment">//从堆区把array[1]的值修改成2</span></span><br><span class="line"></span><br><span class="line">        array[<span class="number">2</span>] = <span class="number">200</span>;<span class="comment">//从堆区把array[2]的值修改成100</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/javawz/00001.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>Java中的内存划分</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/07/java00011Java%E4%B8%AD%E7%9A%84%E5%86%85%E5%AD%98%E5%88%92%E5%88%86/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/07/java00011Java中的内存划分/</id>
    <published>2020-02-07T15:10:32.000Z</published>
    <updated>2020-02-07T15:42:07.946Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java的内存需要划分成为5个部分"><a class="markdownIt-Anchor" href="#java的内存需要划分成为5个部分"></a> Java的内存需要划分成为5个部分</h2><h4 id="1span-style-colorred栈stackspan-存放的都是方法中的局部变量-方法的运行一定要在栈当中运行"><a class="markdownIt-Anchor" href="#1span-style-colorred栈stackspan-存放的都是方法中的局部变量-方法的运行一定要在栈当中运行"></a> 1.<span style="color:red;">栈（Stack）</span>: 存放的都是方法中的局部变量。方法的运行一定要在栈当中运行。</h4><p>   局部变量：方法的参数，或者是方法{}内部的变量</p><p>   作用域：一但超出作用域，立刻从栈内存中消失。</p><h4 id="2span-style-colorred堆heap凡是new出来的内存都在堆区中-span"><a class="markdownIt-Anchor" href="#2span-style-colorred堆heap凡是new出来的内存都在堆区中-span"></a> 2.<span style="color:red;">堆（Heap）：凡是new出来的内存，都在堆区中。</span></h4><p>     堆内存里面的内存都有一个内存地址值：16进制</p><p>     堆内存里面的数据，都有默认值。规则：</p><p>     如果是整数           默认值为0</p><p>     如果是浮点数          默认值为0.0</p><p>     如果是字符           默认值为‘\u0000’</p><p>     如果是布尔           默认值为false</p><p>     如果是引用类型    默认值为null</p><h4 id="3span-style-colorred方法区method-areaspan存储class相关的信息包含方法的信息"><a class="markdownIt-Anchor" href="#3span-style-colorred方法区method-areaspan存储class相关的信息包含方法的信息"></a> 3.<span style="color:red;">方法区（Method Area）</span>：存储.class相关的信息，包含方法的信息</h4><h4 id="4span-style-colorred本地方法栈native-method-stackspan与操作系统相关"><a class="markdownIt-Anchor" href="#4span-style-colorred本地方法栈native-method-stackspan与操作系统相关"></a> 4.<span style="color:red;">本地方法栈（Native Method Stack）</span>：与操作系统相关。</h4><h4 id="5span-style-colorred寄存器pc-registerspan与cpu相关"><a class="markdownIt-Anchor" href="#5span-style-colorred寄存器pc-registerspan与cpu相关"></a> 5.<span style="color:red;">寄存器（PC Register）</span>：与CPU相关。</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;java的内存需要划分成为5个部分&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#java的内存需要划分成为5个部分&quot;&gt;&lt;/a&gt; Java的内存需要划分成为5个部分&lt;/h2&gt;
&lt;h4 id=&quot;1span-style-colorred栈s
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数组</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/06/java00010%E6%95%B0%E7%BB%84/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/06/java00010数组/</id>
    <published>2020-02-05T21:39:02.000Z</published>
    <updated>2020-02-07T11:50:26.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h1><h4 id="数组的概念"><a class="markdownIt-Anchor" href="#数组的概念"></a> 数组的概念</h4><p>​数组是引用数据类型<br>​类型要统一<br>​数组的长度在运行期间不可以改变</p><h4 id="初始化"><a class="markdownIt-Anchor" href="#初始化"></a> 初始化</h4><h5 id="动态初始化指定长度"><a class="markdownIt-Anchor" href="#动态初始化指定长度"></a> 动态初始化（指定长度）</h5><p>​数据类型[] 数组名称 = new 数据类型[数组长度]</p><p>​使用动态初始化数组的时候,其中的元素将会自动拥有一个默认值.规则如下:</p><ol><li>如果是整数类型,那么默认值为0;</li><li>如果是浮点类型,那么默认值为0.0;</li><li>如果是字符类型,那么默认值为’\u0000’ u代表Unicode ,0000代表十六进制数;</li><li>如果是布尔类型,那么默认值为false;</li><li>如果是引用类型,那么默认值为null(空常量);</li></ol><h5 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h5><p>静态初始化其实也有默认值的过程,只不过系统自动马上将默认值替换成为了大括号当中的具体数值.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arr1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line">        System.out.println(arr1[<span class="number">0</span>]);<span class="comment">//默认值为0;</span></span><br><span class="line">        System.out.println(arr1[<span class="number">1</span>]);<span class="comment">//默认值为0;</span></span><br><span class="line">        System.out.println(arr1[<span class="number">2</span>]);<span class="comment">//默认值为0;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*数组赋值*/</span></span><br><span class="line">        arr1[<span class="number">1</span>] = <span class="number">100</span>;</span><br><span class="line">        System.out.println(arr1[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="拆分格式"><a class="markdownIt-Anchor" href="#拆分格式"></a> 拆分格式</h5><ol><li><h4 id="数据类型-数组名"><a class="markdownIt-Anchor" href="#数据类型-数组名"></a> 数据类型[] 数组名;</h4><ol><li>数组名 = new 数据类型名[]{元素1,元素2,…}</li><li>数组名 = new  数据类型名[长度];</li></ol></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] arr;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">10</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        <span class="comment">//arr = new int[10];</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="静态初始化指定内容"><a class="markdownIt-Anchor" href="#静态初始化指定内容"></a> 静态初始化(指定内容)</h4><p>​数据类型[] 数组名 = new 数据类型[] {元素1,元素2,…,元素n};</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public class test010 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">    </span><br><span class="line">    int[] arr = new int[]&#123;1,2,3,4&#125;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="省略格式"><a class="markdownIt-Anchor" href="#省略格式"></a> 省略格式</h5><p>​数据类型[] 数组名 = {元素1,元素2,…,元素n};</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="拆分格式-2"><a class="markdownIt-Anchor" href="#拆分格式-2"></a> 拆分格式</h5><p>​不能再用省略格式<br>​数据类型[] 数组名;<br>​数组名 = new 数据类型名[]{元素1,元素2,…}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[] arr;</span><br><span class="line">arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="访问数组元素"><a class="markdownIt-Anchor" href="#访问数组元素"></a> 访问数组元素</h4><p>​直接打印数组名,会打印数组内存地址哈希值<br>​格式 :   数组名[索引值]<br>​索引值从0开始到数组长度-1结束</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[] arr;</span><br><span class="line">arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">System.out.println(arr);<span class="comment">//打印数组内存地址哈希值</span></span><br><span class="line">System.out.println(arr[<span class="number">0</span>]);<span class="comment">//使用数组下标访问数组元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length;i++)<span class="comment">//数组下标不大于数组的长度</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数组&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组&quot;&gt;&lt;/a&gt; 数组&lt;/h1&gt;
&lt;h4 id=&quot;数组的概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数组的概念&quot;&gt;&lt;/a&gt; 数组的概念&lt;/h4&gt;
&lt;
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>方法定义和使用</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/06/java00009%E6%96%B9%E6%B3%95%E5%AE%9A%E4%B9%89%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/06/java00009方法定义和使用/</id>
    <published>2020-02-05T21:13:51.000Z</published>
    <updated>2020-02-05T21:34:04.363Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h3><h4 id="方法定义"><a class="markdownIt-Anchor" href="#方法定义"></a> 方法定义</h4><p>​以public static开头<br>​public static 类型 方法名()<br>​{</p><p>​}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//语句块</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法的三种调用格式"><a class="markdownIt-Anchor" href="#方法的三种调用格式"></a> 方法的三种调用格式</h4><h5 id="单独调用"><a class="markdownIt-Anchor" href="#单独调用"></a> 单独调用</h5><p>​方法名（[参数]）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        funName(<span class="number">20</span>);</span><br><span class="line">        System.out.println(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//语句块</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="打印调用"><a class="markdownIt-Anchor" href="#打印调用"></a> 打印调用</h5><p>​System.out.println(方法名（[参数]）)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        System.out.println( funName(<span class="number">20</span>) );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="赋值调用"><a class="markdownIt-Anchor" href="#赋值调用"></a> 赋值调用</h5><p>​int a = 方法名（[参数]）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = funName(<span class="number">20</span>);<span class="comment">//赋值调用</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法分为两种"><a class="markdownIt-Anchor" href="#方法分为两种"></a> 方法分为两种</h4><h5 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h5><p>​有参数<br>​无参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//有参数方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">()</span> <span class="comment">//无参数方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="返回值"><a class="markdownIt-Anchor" href="#返回值"></a> 返回值</h5><p>​有返回值<br>​无返回值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//有返回值方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">funName</span><span class="params">()</span> <span class="comment">//无返回值方法定义</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="方法注意事项"><a class="markdownIt-Anchor" href="#方法注意事项"></a> 方法注意事项</h4><p>方法应该定义类中，不能定义在方法中<br>方法定义没有前后顺序<br>方法定义之后不会自动执行，需要手动调用<br>如果方法有返回值，必须写上   return 返回值<br>返回的数据必须要和返回值类型一致<br>对于void返回值类型，可以只写return；<br>一个方法可以有多个return，但只能执行其中一个</p><h4 id="方法重载overload"><a class="markdownIt-Anchor" href="#方法重载overload"></a> 方法重载Overload</h4><p>如果功能相同，参数不同，可以使用方法重载</p><h5 id="特征"><a class="markdownIt-Anchor" href="#特征"></a> 特征</h5><p>​方法名要相同<br>​参数个数不同<br>​参数类型不同<br>​类型名 参数顺序不同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a)</span> </span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">()</span> <span class="comment">//参数个数不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> <span class="comment">//参数个数不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">int</span> b)</span> <span class="comment">//参数类型不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">funName</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">double</span> b)</span> <span class="comment">//参数顺序不同</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + (<span class="keyword">int</span>)b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#方法&quot;&gt;&lt;/a&gt; 方法&lt;/h3&gt;
&lt;h4 id=&quot;方法定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#方法定义&quot;&gt;&lt;/a&gt; 方法定义&lt;/h4&gt;
&lt;p&gt;​
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>集成开发环境</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/06/java00008%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/06/java00008集成开发环境/</id>
    <published>2020-02-05T20:49:36.000Z</published>
    <updated>2020-02-05T21:13:05.461Z</updated>
    
    <content type="html"><![CDATA[<h3 id="集成开发软件"><a class="markdownIt-Anchor" href="#集成开发软件"></a> 集成开发软件</h3><h4 id="intellij-idea"><a class="markdownIt-Anchor" href="#intellij-idea"></a> IntelliJ IDEA</h4><p>​官方网站 <a href="http://www.jetbrains.com" target="_blank" rel="noopener">www.jetbrains.com</a><br>​先新建项目,再新建模块,然后新建包,最后新建源文件<br>​输入psvm 回车<br>​自动生成public static void main(String[] args) {<br>​会自动保存</p><h4 id="快捷键"><a class="markdownIt-Anchor" href="#快捷键"></a> 快捷键</h4><p>​alt + 4 显示输出框<br>​shift + f10  编译运行<br>​alt + enter 自动修复代码<br>​ctrl + y 删除光标所在行<br>​ctrl + d 复制光标当前行,插入光标位置下面<br>​ctrl+alt + L 格式化代码<br>​ctrl + / 单行注释,再按一次取消单行注释<br>​Ctrl+Shift +/ 多行注释<br>​alt+ins 自动生成代码<br>​alt+shift +上下箭头  移动当前代码行<br>​shift + f6 一个改全部改<br>​ctrl + 鼠标左键 转到方法定义处</p><h3 id="设置"><a class="markdownIt-Anchor" href="#设置"></a> 设置</h3><p>​设置字体<br>​file-&gt;settings…-&gt; editor-&gt; Font-&gt;size</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200206045408.png" alt></p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200206045511.png" alt></p><h4 id="设置自动提示快捷键"><a class="markdownIt-Anchor" href="#设置自动提示快捷键"></a> 设置自动提示快捷键</h4><p>​file-&gt;settings…-&gt;点击齿轮-&gt;Duplicate 复制一份 -&gt;Main menu -&gt; code -&gt; completion -&gt;basic</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200206045408.png" alt></p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200206045849.png" alt></p><h4 id="项目和模块的关闭和导入"><a class="markdownIt-Anchor" href="#项目和模块的关闭和导入"></a> 项目和模块的关闭和导入</h4><h5 id="关闭"><a class="markdownIt-Anchor" href="#关闭"></a> 关闭</h5><p>file -&gt;  close project</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200206045849.png" alt></p><h5 id="导入"><a class="markdownIt-Anchor" href="#导入"></a> 导入</h5><p>Open -&gt; 选择项目文件 有小黑块的</p><p>然后一直下一步</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200206050044.png" alt></p><h4 id="模块"><a class="markdownIt-Anchor" href="#模块"></a> 模块</h4><h5 id="移除"><a class="markdownIt-Anchor" href="#移除"></a> 移除</h5><p>​Remove Moudle</p><h5 id="导入-2"><a class="markdownIt-Anchor" href="#导入-2"></a> 导入</h5><p>​File -&gt; Project Structure -&gt; Import Moudle -&gt;一直选next -&gt;OK</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;集成开发软件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#集成开发软件&quot;&gt;&lt;/a&gt; 集成开发软件&lt;/h3&gt;
&lt;h4 id=&quot;intellij-idea&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#inte
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>基本结构</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/05/java00007%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/05/java00007基本结构/</id>
    <published>2020-02-05T13:07:02.000Z</published>
    <updated>2020-02-05T13:36:13.790Z</updated>
    
    <content type="html"><![CDATA[<h3 id="顺序结构"><a class="markdownIt-Anchor" href="#顺序结构"></a> 顺序结构</h3><p>​从上到下,顺序执行</p><hr><h3 id="选择结构"><a class="markdownIt-Anchor" href="#选择结构"></a> 选择结构</h3><h4 id="单if语句"><a class="markdownIt-Anchor" href="#单if语句"></a> 单if语句</h4><p>​if(条件表达式){语句块}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> a = <span class="number">10</span>,b = <span class="number">11</span>;</span><br><span class="line">        <span class="keyword">if</span>(a &lt; b)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="标准if-else语句"><a class="markdownIt-Anchor" href="#标准if-else语句"></a> 标准if else语句</h4><p>​if(条件表达式){语句块;}else{语句块}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>,b = <span class="number">11</span>;</span><br><span class="line">        <span class="keyword">if</span>(a &lt; b)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多层if语句"><a class="markdownIt-Anchor" href="#多层if语句"></a> 多层if语句</h4><p>​if(条件表达式){语句块;}else if(条件表达式){语句块}else{语句块}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">              <span class="keyword">int</span> a = <span class="number">10</span>,b = <span class="number">11</span>,c =<span class="number">12</span>;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; b &amp;&amp; a &gt; c)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(b &gt; c &amp;&amp; b &gt; a)&#123;</span><br><span class="line">        System.out.println(b);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="switch"><a class="markdownIt-Anchor" href="#switch"></a> switch</h4><p>​选择对应于的常量,并执行对应常量的语句<br>​ switch(表达式)<br>{<br>​case 常量1:<br>​  语句;<br>​  break;<br>​case 常量2:<br>​  语句;<br>​  break;<br>​default:<br>​  语句;<br>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">char</span> c = <span class="string">'A'</span>;</span><br><span class="line">       </span><br><span class="line">       <span class="keyword">switch</span>(c)</span><br><span class="line">       &#123;</span><br><span class="line">       <span class="keyword">case</span> <span class="string">'A'</span>:</span><br><span class="line">  System.out.println(<span class="string">"X&gt;=90"</span>);</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'B'</span>:</span><br><span class="line">  System.out.println(<span class="string">"80&gt;=X&lt;90"</span>);</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"> System.out.println(<span class="string">"X&lt;79"</span>);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="常量类型"><a class="markdownIt-Anchor" href="#常量类型"></a> 常量类型</h5><h6 id="整型"><a class="markdownIt-Anchor" href="#整型"></a> 整型</h6><p>​byte,char,short,int</p><h6 id="引用数据类型"><a class="markdownIt-Anchor" href="#引用数据类型"></a> 引用数据类型</h6><p>​String,enum<br>​常量值不能重复</p><hr><h3 id="循环结构"><a class="markdownIt-Anchor" href="#循环结构"></a> 循环结构</h3><h4 id="for循环语句"><a class="markdownIt-Anchor" href="#for循环语句"></a> for循环语句</h4><p>for(变量初始化;条件判断;改变变量值)<br>{<br>语句块;<br>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="while循环语句"><a class="markdownIt-Anchor" href="#while循环语句"></a> while循环语句</h4><p>while(条件)<br>{<br>语句块;<br>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; <span class="number">10</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="do-while循环语句"><a class="markdownIt-Anchor" href="#do-while循环语句"></a> do while循环语句</h4><p>初始化表达式<br>do{</p><p>​语句块;</p><p>}while(条件表达式);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        </span><br><span class="line">        &#125;<span class="keyword">while</span>(i++ &lt; <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="break"><a class="markdownIt-Anchor" href="#break"></a> break</h4><p>​中止循环</p><h4 id="continue"><a class="markdownIt-Anchor" href="#continue"></a> continue</h4><p>​结束本次循环</p><h4 id="死循环"><a class="markdownIt-Anchor" href="#死循环"></a> 死循环</h4><p>​java可以有死循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="comment">//我是死循环</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="循环嵌套"><a class="markdownIt-Anchor" href="#循环嵌套"></a> 循环嵌套</h4><p>​一个循环体嵌套着另一个循环体这就叫做循环嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; <span class="number">10</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">"*"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;顺序结构&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#顺序结构&quot;&gt;&lt;/a&gt; 顺序结构&lt;/h3&gt;
&lt;p&gt;​	从上到下,顺序执行&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;选择结构&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hr
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>使用hexo+GitHub搭建的个人博客 文件备份</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/05/%E4%BD%BF%E7%94%A8hexo-GitHub%E6%90%AD%E5%BB%BA%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E6%96%87%E4%BB%B6%E5%A4%87%E4%BB%BD/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/05/使用hexo-GitHub搭建的个人博客-文件备份/</id>
    <published>2020-02-05T12:10:54.000Z</published>
    <updated>2020-02-05T12:19:28.220Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用hexogithub搭建的个人博客-文件备份"><a class="markdownIt-Anchor" href="#使用hexogithub搭建的个人博客-文件备份"></a> 使用hexo+GitHub搭建的个人博客 文件备份</h1><h3 id="1在github中创建-hexo-分支来存储本地-markdown-文件"><a class="markdownIt-Anchor" href="#1在github中创建-hexo-分支来存储本地-markdown-文件"></a> 1.在GitHub中创建 hexo 分支来存储本地 markdown 文件</h3><p>在本地文件根目录创建 <code>.gitignore</code> 文件，若存在修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">.deploy*/</span><br><span class="line">public/</span><br><span class="line">db.json</span><br></pre></td></tr></table></figure><p>在本地文件根目录中初始化 git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>创建分支hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure><p>提交到仓库，需要注意的事在提交之前要把themes目录下主题中的 <code>.git</code> 文件夹重命名或者删除，不然的话 git 会把主题当做子模块来处理。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &apos;init&apos;</span><br></pre></td></tr></table></figure><p>添加远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:MrWangwj/MrWangwj.github.io.git</span><br></pre></td></tr></table></figure><p>push 到远程分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure><h3 id="2在另一台电脑上使用"><a class="markdownIt-Anchor" href="#2在另一台电脑上使用"></a> 2.在另一台电脑上使用</h3><p>首先要克隆下这个项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:MrWangwj/MrWangwj.github.io.git</span><br></pre></td></tr></table></figure><p>进入博客目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd MrWangwj.github.io.git</span><br></pre></td></tr></table></figure><p>切换到博客文件分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexo origin/hexo</span><br></pre></td></tr></table></figure><p>安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure><p>然后编辑、查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g    //编译</span><br><span class="line">hexo s    //浏览器查看 localhost:4000</span><br></pre></td></tr></table></figure><p>提交 git，若在提交过程中出现 <code>ERROR Deployer not found: git</code> 可执行 <code>npm install hexo-deployer-git --save</code> 后重新提交。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>在写了新 markdown 文件后提交 git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &apos;新增博客&apos;</span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure><p>到此，我们以后只要写完博客发布后记得 push 一下就能实现备份了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用hexogithub搭建的个人博客-文件备份&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#使用hexogithub搭建的个人博客-文件备份&quot;&gt;&lt;/a&gt; 使用hexo+GitHub搭建的个人博客 文件备份&lt;/h1&gt;
&lt;h3 id=&quot;
      
    
    </summary>
    
      <category term="githubHexo" scheme="https://xiaowuyoucy.github.io/categories/githubHexo/"/>
    
    
  </entry>
  
  <entry>
    <title>自动备份Hexo源文件</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/05/%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BDHexo%E6%BA%90%E6%96%87%E4%BB%B6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/05/自动备份Hexo源文件/</id>
    <published>2020-02-05T10:16:47.000Z</published>
    <updated>2020-02-05T11:11:10.150Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自动备份hexo源文件"><a class="markdownIt-Anchor" href="#自动备份hexo源文件"></a> 自动备份Hexo源文件</h1><h3 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h3><p>配置一个<span style="color:red"><code>Hexo</code></span>博客往往需要作者倾注大量心血，而如果哪天电脑坏了或者换电脑导致<span style="color:red"><code>Hexo</code></span>源文件丢失的话就是一件比较杯具的事。因此本文给出了一种自动备份<span style="color:red"><code>Hexo</code></span>源文件到<span style="color:red"><code>Github</code></span>的方法，能够在执行<span style="color:red"><code>hexo deploy</code></span>命令后自动执行<span style="color:red"><code>Git</code></span>命令以推送<span style="color:red"><code>Hexo</code></span>源文件到<span style="color:red"><code>Github</code></span>仓库。</p><h4 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h4><p><span style="color:red"><code>NodeJS</code></span>的事件监听机制能够监听<span style="color:red"><code>Hexo</code></span>的事件。通过查询<a href="https://hexo.io/zh-cn/api/events.html" target="_blank" rel="noopener">Hexo文档</a>，找到了<span style="color:red"><code>Hexo</code></span>的主要事件，见下表：</p><table><thead><tr><th>事件名</th><th>描述</th></tr></thead><tbody><tr><td><code>deployBefore</code></td><td>在部署完成前发布。</td></tr><tr><td><code>deployAfter</code></td><td>在部署成功后发布。</td></tr><tr><td><code>exit</code></td><td>在<code>Hexo</code> 结束前发布。</td></tr><tr><td><code>generateBefore</code></td><td>在静态文件生成前发布。</td></tr><tr><td><code>generateAfter</code></td><td>在静态文件生成后发布。</td></tr><tr><td><code>new</code></td><td>在文章文件建立后发布。该事件返回文章参数。</td></tr><tr><td><code>processBefore</code></td><td>在处理原始文件前发布。此事件会返回一个地址，代表 Box（Box）的根目录。</td></tr><tr><td><code>processAfter</code></td><td>在原始文件处理后发布。此事件会返回一个地址，代表 Box（Box）的根目录。</td></tr><tr><td><code>ready</code></td><td>在初始化完成后发布。</td></tr></tbody></table><p>通过查询上表发现，我们可以通过监听<span style="color:red"><code>Hexo</code></span>的<span style="color:red"><code>deployAfter</code></span>事件，待部署成功后自动运行<span style="color:red"><code>Git</code></span>备份命令，从而达到自动备份的目的。</p><h3 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h3><h4 id="将span-stylecolorredhexospan目录加入span-stylecolorredgitspan仓库"><a class="markdownIt-Anchor" href="#将span-stylecolorredhexospan目录加入span-stylecolorredgitspan仓库"></a> 将<span style="color:red"><code>Hexo</code></span>目录加入<span style="color:red"><code>Git</code></span>仓库</h4><p>首先需要在<span style="color:red"><code>Github</code></span>创建一个新的<span style="color:red"><code>repository</code></span>,名字与本地<span style="color:red"><code>Hexo</code></span>文件夹同名即可。然后进入本地<span style="color:red"><code>Hexo</code></span>文件夹，按顺序执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin git@github.com:yourname/hexo.git</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><p>再每次执行<span style="color:red"><code>hexo generate</code></span>命令时，<span style="color:red"><code>public/、.deploy、\*.log</code></span>文件夹会重写更新，因此需要在<span style="color:red"><code>.gitignore</code></span>文件（如果没有，手动创建一个）中写入<span style="color:red"><code>public/、</code></span><span style="color:red"><code>.deploy、</code></span><span style="color:red"><code>\*.log</code></span>以忽略这几个目录，加快备份的速度。</p><p>然后再顺序执行以下命令，将文件推送到<span style="color:red"><code>Github</code></span>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;备份hexo源码文件&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>这三行命令便是手动推送本地文件到<span style="color:red"><code>Github</code></span>的命令,我们接下来要做的是让<span style="color:red"><code>NodeJS</code></span>监听到<span style="color:red"><code>Hexo</code></span>的<span style="color:red"><code>deployAfter</code></span>事件后自动执行上述命令。</p><h3 id="安装span-stylecolorredshelljsspan模块"><a class="markdownIt-Anchor" href="#安装span-stylecolorredshelljsspan模块"></a> 安装<span style="color:red"><code>shelljs</code></span>模块</h3><p>键入以下命令即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save shelljs</span><br></pre></td></tr></table></figure><h5 id="加入自动执行脚本"><a class="markdownIt-Anchor" href="#加入自动执行脚本"></a> 加入自动执行脚本</h5><p>在<span style="color:red"><code>Hexo</code></span>根目录的<span style="color:red"><code>scripts</code></span>文件夹（没有就自己创建一个）下新建一个<span style="color:red"><code>js</code></span>文件，文件名随意。然后加入以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">'shelljs/global'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">hexo.on(<span class="string">'deployAfter'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="comment">//当deploy完成后执行备份</span></span><br><span class="line">run();</span><br><span class="line">&#125;);</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"产生了一个错误&lt;(￣3￣)&gt; !，错误详情为："</span> + e.toString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!which(<span class="string">'git'</span>)) &#123;</span><br><span class="line">echo(<span class="string">'Sorry, this script requires git'</span>);</span><br><span class="line">exit(<span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">echo(<span class="string">"======================Auto Backup Begin==========================="</span>);</span><br><span class="line">cd(<span class="string">'path to hexo'</span>);    <span class="comment">//此处修改为Hexo根目录路径</span></span><br><span class="line"><span class="keyword">if</span> (exec(<span class="string">'git add --all'</span>).code !== <span class="number">0</span>) &#123;</span><br><span class="line">echo(<span class="string">'Error: Git add failed'</span>);</span><br><span class="line">exit(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (exec(<span class="string">'git commit -am "Form auto backup script\'s commit"'</span>).code !== <span class="number">0</span>) &#123;</span><br><span class="line">echo(<span class="string">'Error: Git commit failed'</span>);</span><br><span class="line">exit(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (exec(<span class="string">'git push origin master'</span>).code !== <span class="number">0</span>) &#123;</span><br><span class="line">echo(<span class="string">'Error: Git push failed'</span>);</span><br><span class="line">exit(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">echo(<span class="string">"==================Auto Backup Complete============================"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意上述代码中第29行需要修改为自己<span style="color:red"><code>Hexo</code></span>文件夹的绝对路径。</p><h4 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h4><p>如果脚本运行成功，会得到类似以下的效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">======================Auto Backup Begin===========================</span><br><span class="line">cd: no such file or directory: C:/Users/17810/OneDrive/hexo</span><br><span class="line">warning: LF will be replaced by CRLF in source/_posts/自动备份Hexo源文件.md.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in source/_posts/自动备份Hexo源文件.md.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">[master a6cb4c7] Form auto backup script&apos;s commit</span><br><span class="line"> 1 file changed, 153 insertions(+)</span><br><span class="line">warning: LF will be replaced by CRLF in source/_posts/自动备份Hexo源文件.md.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">To git@github.com:JacobZjw/hexo.git</span><br><span class="line">   0beaf4c..a6cb4c7  master -&gt; master</span><br><span class="line">==================Auto Backup Complete============================</span><br></pre></td></tr></table></figure><h3 id="懒癌患者的小福利"><a class="markdownIt-Anchor" href="#懒癌患者的小福利"></a> 懒癌患者的小福利</h3><p>在<span style="color:red"><code>hexo</code></span>中，我们常常使用<span style="color:red"><code>hexo new</code></span>命令来新建文章。然鹅，当我们的文章较多时，我们往往需要在成堆的文章中找到刚刚生成的文件，然后使用<span style="color:red"><code>Markdown</code></span>编辑器打开。作为一名懒癌患者怎么可能让自己如此受累。</p><p>于是，我找到了<span style="color:red"><code>Hexo</code></span>作者给出的解决办法</p><p>和上面类似，在<span style="color:red"><code>scripts</code></span>文件夹中创建一个<span style="color:red"><code>js</code></span>文件，添加以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> spawn = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hexo 2.x 用户复制这段</span></span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">path</span>)</span>&#123;</span><br><span class="line">  spawn(<span class="string">'start  "markdown编辑器绝对路径.exe" '</span> + path);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hexo 3 用户复制这段</span></span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  spawn(<span class="string">'start  "markdown编辑器绝对路径.exe" '</span> + data.path);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>保存并退出脚本之后，在命令行中键入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;auto open editor test&quot;</span><br></pre></td></tr></table></figure><p>是不是就顺利的自动打开了自动生成的md文件啦~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;自动备份hexo源文件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#自动备份hexo源文件&quot;&gt;&lt;/a&gt; 自动备份Hexo源文件&lt;/h1&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#
      
    
    </summary>
    
      <category term="githubHexo" scheme="https://xiaowuyoucy.github.io/categories/githubHexo/"/>
    
    
  </entry>
  
  <entry>
    <title>JDK9的JShell-编译器的两点优化</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00006JDK9%E7%9A%84JShell-%E7%BC%96%E8%AF%91%E5%99%A8%E7%9A%84%E4%B8%A4%E7%82%B9%E4%BC%98%E5%8C%96/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00006JDK9的JShell-编译器的两点优化/</id>
    <published>2020-02-04T00:17:40.000Z</published>
    <updated>2020-02-04T00:36:20.957Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jdk9的jshell"><a class="markdownIt-Anchor" href="#jdk9的jshell"></a> JDK9的JShell</h1><p>什么时候会用到 JShell 工具呢，当我们编写的代码非常少的时候，而又不愿意编写类，main方法，也不愿意去编译和运 行，这个时候可以使用JShell工具。 启动JShell工具，在DOS命令行直接输入JShell命令。</p><p>打开cmd</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200204082417.png" alt></p><p>​</p><p>输入jshell</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200204082552.png" alt></p><p>​</p><p>退出/exit</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200204082647.png" alt></p><h1 id="编译器的两点优化"><a class="markdownIt-Anchor" href="#编译器的两点优化"></a> 编译器的两点优化</h1><p>byte,short,char类型右侧没有超过本身范围,会自动强制转换类型<br>byte a = 12<br>常量优化<br>1 + 1常量表达式 在编译时会计算结果,而不是在运行时计算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span> a = <span class="number">12</span> <span class="comment">//隐式的把12从int类型转换为byte类型</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jdk9的jshell&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#jdk9的jshell&quot;&gt;&lt;/a&gt; JDK9的JShell&lt;/h1&gt;
&lt;p&gt;什么时候会用到 JShell 工具呢，当我们编写的代码非常少的时候，而又不愿意编写类，ma
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>java方法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00005%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00005方法/</id>
    <published>2020-02-04T00:02:04.000Z</published>
    <updated>2020-02-04T00:15:05.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h1><h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h4><p>​public static void 方法名称(){语句块}</p><p>​方法的定义是无序性的<br>​不能嵌套定义方法</p><h4 id="命名方法"><a class="markdownIt-Anchor" href="#命名方法"></a> 命名方法</h4><p>​小驼峰式法</p><h4 id="方法调用"><a class="markdownIt-Anchor" href="#方法调用"></a> 方法调用</h4><h5 id="格式"><a class="markdownIt-Anchor" href="#格式"></a> 格式</h5><p>​方法名称();</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class test009 &#123;</span><br><span class="line">    </span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(intAdd(10,20));//方法调用</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //方法定义</span><br><span class="line">    public static int intAdd(int a,int b)</span><br><span class="line">    &#123;</span><br><span class="line">        return a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#方法&quot;&gt;&lt;/a&gt; 方法&lt;/h1&gt;
&lt;h4 id=&quot;定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定义&quot;&gt;&lt;/a&gt; 定义&lt;/h4&gt;
&lt;p&gt;​		publ
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
</feed>
