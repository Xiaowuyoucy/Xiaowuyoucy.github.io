<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanChen</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaowuyoucy.github.io/"/>
  <updated>2021-03-29T15:08:59.457Z</updated>
  <id>https://xiaowuyoucy.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://xiaowuyoucy.github.io/2021/03/29/yyy0002%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://xiaowuyoucy.github.io/2021/03/29/yyy0002正则表达式/</id>
    <published>2021-03-29T08:23:07.000Z</published>
    <updated>2021-03-29T15:08:59.457Z</updated>
    
    <content type="html"><![CDATA[<h1 id="正则表达式"><a class="markdownIt-Anchor" href="#正则表达式"></a> 正则表达式</h1><h3 id="点号应用之简单的数据提取"><a class="markdownIt-Anchor" href="#点号应用之简单的数据提取"></a> 点号应用之简单的数据提取</h3><p>利用点匹配我们想要的数据并提取出来可以匹配任何一个单字符除换行符外</p><p>1个点号只能匹配字符,如123456789abcde… .等,必须为<code>半角</code>的如果想要匹配全半数字,字母，或汉字,就必须要<code>2个点号</code></p><h3 id="星号正则的认识与应用"><a class="markdownIt-Anchor" href="#星号正则的认识与应用"></a> 星号正则的认识与应用</h3><p><code>*</code>星号表示之前的元素出现任意次数或0次</p><p>比如: 4.*8我们来看一下他是什么意思，星号出现在点号的后面，这代表点号有出现也行，没有出现也行:</p><p>打个比方，他可以匹配48、41238、412345678、4012345670123458</p><h3 id="问号和加号的认识与应用"><a class="markdownIt-Anchor" href="#问号和加号的认识与应用"></a> 问号和加号的认识与应用</h3><p><img src="/images/javawz/1617009958851.png" alt="1617009958851"></p><h3 id="连字符和范围描述符的认识与应用"><a class="markdownIt-Anchor" href="#连字符和范围描述符的认识与应用"></a> 连字符和范围描述符的认识与应用</h3><p>在学习&quot;-&quot;连字符前，我们先来认识一个强大的符号: [ ]， 这个[ ]所括的内容，可以不按顺序进行匹配。[] 范围描述符 范围描述符。如: [a-z]表示从a到z之间的任意一个。</p><p>-  连字符</p><p>A一般都与&quot;[]”起使用，只有连字符在字符组内部</p><p>时，并且出现在两个字符之间时，才能表示字符的范围;如果出现在字符组的开头，则只能表示连字符本身</p><p>例如:</p><p>[0-9]匹配任意0到9的数字</p><p>[a-z]匹配所有小写字母</p><p>[A-Z]匹配所有大写字母</p><p>当然，你可以把它们混在一起写成[a-z0-9]、[0-9a-zA-z]的样 子都可以下面我们举2个例子就明白了</p><p>必从一个网页源码中，区分出数字并提取出来</p><h3 id="脱字符和美元符的认识与应用"><a class="markdownIt-Anchor" href="#脱字符和美元符的认识与应用"></a> 脱字符^和美元符$的认识与应用</h3><p><img src="/images/javawz/1617012879072.png" alt="1617012879072"></p><p>排除:<code>[^1-9]匹配除了1到9的数字,其他的都可以匹配</code></p><h3 id="转义符的认识与应用"><a class="markdownIt-Anchor" href="#转义符的认识与应用"></a> 转义符\的认识与应用</h3><p><code>\</code>转义符作用:把正 则的元字符转换成元字符本身</p><p>如果需要匹配的某个字符本身就是元字符(如:<code>.?*+</code>) ，正则表达式将如何处理呢?</p><p>比如:我想要检索互联网的主机名，也就是我们说的网址,如: www.23 .com我们的正则语句要怎么写呢?</p><p>想的快的会员就会说，我直接就用www.23.com来匹配点号可以匹配任何字符包括点号本身，当然， 这样是可以匹配到。</p><p>但是，<a href="http://xn--www123-hh4kv70g1eb.com" target="_blank" rel="noopener">如果有www123.com</a></p><p>www223. com它们同样也会被匹配出来，唯一的解决办法就是把点号用转义符转换成他自身。</p><h3 id="字符组简记法"><a class="markdownIt-Anchor" href="#字符组简记法"></a> 字符组简记法</h3><p><img src="/images/javawz/1617019185120.png" alt="1617019185120"></p><p><img src="/images/javawz/1617019408172.png" alt="1617019408172"></p><h3 id="大括号与选择符的认识与应用"><a class="markdownIt-Anchor" href="#大括号与选择符的认识与应用"></a> 大括号与选择符的认识与应用</h3><p><img src="/images/javawz/1617020477744.png" alt="1617020477744"></p><h3 id="子表达式的认识与应用"><a class="markdownIt-Anchor" href="#子表达式的认识与应用"></a> 子表达式的认识与应用</h3><p><img src="/images/javawz/1617026254233.png" alt="1617026254233"></p><h3 id="贪婪和懒惰的匹配"><a class="markdownIt-Anchor" href="#贪婪和懒惰的匹配"></a> 贪婪和懒惰的匹配</h3><p><img src="/images/javawz/1617028212400.png" alt="1617028212400"></p><table><thead><tr><th>通配符匹配规则：</th></tr></thead><tbody><tr><td>* ：任意数量的字符</td></tr><tr><td>？：任何单个字符</td></tr><tr><td>正则 匹配规则：</td></tr><tr><td>*         前面元素出现0次以上</td></tr><tr><td>.            匹配任何单个字符</td></tr><tr><td>?           前面元素出现0次或1次</td></tr><tr><td>+          前面元素出现1次以上</td></tr><tr><td>^         表示开头。</td></tr><tr><td>$           表示结尾。</td></tr><tr><td>.*           表示0个以上的任意字符。</td></tr><tr><td>[  ]          范围描述符。[a-z]表示从a到z之间的任意一个。</td></tr><tr><td>\w          英文字母和数字。即[0-9 A-Z a-z]。</td></tr><tr><td>\W          非英文字母和数字</td></tr><tr><td>\s          空字符，即[\t\n\r\f]。</td></tr><tr><td>\S          非空字符。</td></tr><tr><td>\d           数字，即[0-9]。</td></tr><tr><td>\D          非数字。</td></tr><tr><td>\b          词边界字符（在范围描述符外部时）</td></tr><tr><td>\B          非词边界字符</td></tr><tr><td>\b         退格符（0x08）（在范围描述符内部时）</td></tr><tr><td>{m,n}        前面元素最少出现m次,最多出现n次</td></tr><tr><td>|           选择</td></tr><tr><td>(  )           群组</td></tr><tr><td>其他字符   该字符本身</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;正则表达式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#正则表达式&quot;&gt;&lt;/a&gt; 正则表达式&lt;/h1&gt;
&lt;h3 id=&quot;点号应用之简单的数据提取&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#点号应用之简单的
      
    
    </summary>
    
      <category term="易语言" scheme="https://xiaowuyoucy.github.io/categories/%E6%98%93%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>数据类型</title>
    <link href="https://xiaowuyoucy.github.io/2021/03/29/yyy0001%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>https://xiaowuyoucy.github.io/2021/03/29/yyy0001数据类型/</id>
    <published>2021-03-29T07:07:49.000Z</published>
    <updated>2021-03-29T08:22:32.860Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h1><p>什么是变量的数据类型呢?实际就是指变量内所存储的数据的类型。</p><p>下面我们来讲讲变量内所能存储的基本数据类型。</p><h3 id="1字节型"><a class="markdownIt-Anchor" href="#1字节型"></a> 1.字节型。</h3><p>可容纳0到255之间的数值。</p><h3 id="2短整数型"><a class="markdownIt-Anchor" href="#2短整数型"></a> 2.短整数型。</h3><p>可容纳-32,768到32,767之间的数值，尺寸为2个字节。</p><h3 id="3整数型"><a class="markdownIt-Anchor" href="#3整数型"></a> 3.整数型。</h3><p>可容纳-2,147 ,483,648到2,147,483,647之间的数值，尺寸为4个字节。</p><h3 id="4长整数型"><a class="markdownIt-Anchor" href="#4长整数型"></a> 4.长整数型。</h3><p>可容纳-9,223,372,036,854,775,808到</p><p>9,223,372,036,854,775,807之间的数值，尺寸为8个字节。</p><h3 id="5小数型"><a class="markdownIt-Anchor" href="#5小数型"></a> 5.小数型。</h3><p>可容纳3.4E +/- 38 (7位小数)之间的数值，尺寸为4个字节。</p><h3 id="6双精度小数型"><a class="markdownIt-Anchor" href="#6双精度小数型"></a> 6.双精度小数型。</h3><p>可容纳1.7E +/- 308 (15位小数)之间的数值，尺寸为8个字节。</p><h3 id="7逻辑型"><a class="markdownIt-Anchor" href="#7逻辑型"></a> 7.逻辑型。</h3><p>值只可能为“真&quot;或“假”，尺寸为2个字节。“真&quot;和“假&quot;为系统预定义常量，其对应的英文常量名称为“true&quot;和false&quot;.</p><h3 id="8日期时间型"><a class="markdownIt-Anchor" href="#8日期时间型"></a> 8.日期时间型。</h3><p>用作记录日期及时间，尺寸为8个字节。</p><h3 id="9文本型"><a class="markdownIt-Anchor" href="#9文本型"></a> 9.文本型。</h3><p>用作记录一段文本，文本由以字节0结束的一系列字符组成。</p><h3 id="10字节集"><a class="markdownIt-Anchor" href="#10字节集"></a> 10.字节集。</h3><p>用作记录一段字节型数据。 字节集与字节数组之间可以互相转换，在程序中允许使用字节数组的地方也可以使用字节集，或者相反。字节数组的使用方法，譬如用中括号对(“[]&quot;)加索引数值引用字节成员，使用数组型数值数据进行赋值等等，都可以被字节集所使用。两者之间唯一的不同是字节集可以变长，因此可把字节集看作可变长的字节数组。</p><h3 id="11子程序指针"><a class="markdownIt-Anchor" href="#11子程序指针"></a> 11.子程序指针。</h3><p>用作指向一个子程序，尺寸为4个字节。</p><p>在以上的基本数据类型中，字节型、短整数型、整数型、长整数型、小数型、双精度小数型被统称为“数值型”，它们之间可以任意转换。不过编程需要注意转换可能带来的精度丢失。譬如:将整数257转换为字节后的结果为1，这是因为值257超出了字节型数据的最大上限255,从而产生了溢出。查看变量所可以使用的数据类型，在定义变量中双击类型就可以查看所支持的所有数据类型。</p><h1 id="创建变量"><a class="markdownIt-Anchor" href="#创建变量"></a> 创建变量</h1><h3 id="局部变量"><a class="markdownIt-Anchor" href="#局部变量"></a> 局部变量</h3><p><img src="../../themes/pure/source/images/javawz/1617002258932.png" alt="1617002258932"></p><p>快捷键: <code>ctrl + L</code></p><p>子程序内有效</p><h3 id="全局变量"><a class="markdownIt-Anchor" href="#全局变量"></a> 全局变量</h3><p><img src="../../themes/pure/source/images/javawz/1617002541052.png" alt="1617002541052"></p><p>快捷键:<code>ctrl +G</code></p><p>整个程序有效</p><h3 id="程序集变量"><a class="markdownIt-Anchor" href="#程序集变量"></a> 程序集变量</h3><p><img src="../../themes/pure/source/images/javawz/1617003138851.png" alt="1617003138851"></p><p>点击程序集1按下<code>回车键</code></p><p>整个程序集有效</p><h5 id="变量可以先使用后声明"><a class="markdownIt-Anchor" href="#变量可以先使用后声明"></a> 变量可以先使用后声明</h5><h3 id="易语言规定用代表日期类型数据"><a class="markdownIt-Anchor" href="#易语言规定用代表日期类型数据"></a> 易语言规定用<code>[]</code>代表日期类型数据</h3><p><code>[年-月-日 时-分-秒]</code></p><p><code>[年:月:日 时:分:秒]</code></p><p>[2020-1-1 11-11-22]</p><p>[2020:1:1 11:11:22]</p><h3 id="静态变量和非静态变量的区别"><a class="markdownIt-Anchor" href="#静态变量和非静态变量的区别"></a> 静态变量和非静态变量的区别</h3><h5 id="静态变量"><a class="markdownIt-Anchor" href="#静态变量"></a> 静态变量</h5><p>经过第一次初始化之后,后面就不用初始化了</p><p>子程序结束,变量不释放</p><h5 id="非静态变量"><a class="markdownIt-Anchor" href="#非静态变量"></a> 非静态变量</h5><p>每次都会初始化</p><p>子程序结束,变量释放</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数据类型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据类型&quot;&gt;&lt;/a&gt; 数据类型&lt;/h1&gt;
&lt;p&gt;什么是变量的数据类型呢?实际就是指变量内所存储的数据的类型。&lt;/p&gt;
&lt;p&gt;下面我们来讲讲变量内所能存储的基本数据类型。&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="易语言" scheme="https://xiaowuyoucy.github.io/categories/%E6%98%93%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>介绍Android系统的发展历史和发行版本</title>
    <link href="https://xiaowuyoucy.github.io/2021/03/29/%E4%BB%8B%E7%BB%8DAndroid%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2%E5%92%8C%E5%8F%91%E8%A1%8C%E7%89%88%E6%9C%AC/"/>
    <id>https://xiaowuyoucy.github.io/2021/03/29/介绍Android系统的发展历史和发行版本/</id>
    <published>2021-03-28T16:11:26.000Z</published>
    <updated>2021-03-28T16:11:53.533Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Android" scheme="https://xiaowuyoucy.github.io/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>易语言介绍</title>
    <link href="https://xiaowuyoucy.github.io/2021/03/29/%E6%98%93%E8%AF%AD%E8%A8%80%E4%BB%8B%E7%BB%8D/"/>
    <id>https://xiaowuyoucy.github.io/2021/03/29/易语言介绍/</id>
    <published>2021-03-28T16:09:38.000Z</published>
    <updated>2021-03-29T06:39:47.350Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官方网站"><a class="markdownIt-Anchor" href="#官方网站"></a> 官方网站</h2><p><span style="font-size:28px;"><a href="http://www.dywt.com.cn/" target="_blank" rel="noopener">http://www.dywt.com.cn/</a> </span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;官方网站&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#官方网站&quot;&gt;&lt;/a&gt; 官方网站&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;font-size:28px;&quot;&gt;&lt;a href=&quot;http://www.dywt.com.cn/&quot; ta
      
    
    </summary>
    
      <category term="易语言" scheme="https://xiaowuyoucy.github.io/categories/%E6%98%93%E8%AF%AD%E8%A8%80/"/>
    
    
  </entry>
  
  <entry>
    <title>第二章 物理层</title>
    <link href="https://xiaowuyoucy.github.io/2021/01/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%89%A9%E7%90%86%E5%B1%82/"/>
    <id>https://xiaowuyoucy.github.io/2021/01/10/计算机网络原理笔记-第二章-物理层/</id>
    <published>2021-01-10T08:53:04.000Z</published>
    <updated>2021-01-14T07:41:11.865Z</updated>
    
    <content type="html"><![CDATA[<h3 id="计算机网络原理-第二章-物理层"><a class="markdownIt-Anchor" href="#计算机网络原理-第二章-物理层"></a> 计算机网络原理 第二章 物理层</h3><ul><li><a href="#2.1%E7%89%A9%E7%90%86%E5%B1%82%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">2.1 物理层的基本概念</a></li><li><a href="#2.2%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E7%9A%84%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86">2.2 数据通信的基础知识</a></li><li><a href="#%E7%9B%B8%E5%85%B3%E6%9C%AF%E8%AF%AD">相关术语</a></li><li><a href="#%E6%9C%89%E5%85%B3%E4%BF%A1%E9%81%93%E7%9A%84%E5%87%A0%E4%B8%AA%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">有关信道的几个基本概念</a></li><li><a href="#2.3%E7%89%A9%E7%90%86%E5%B1%82%E4%B8%8B%E9%9D%A2%E7%9A%84%E4%BC%A0%E8%BE%93%E5%AA%92%E4%BD%93">2.3 物理层下面的传输媒体</a></li><li><a href="#2.4%E4%BF%A1%E9%81%93%E5%A4%8D%E7%94%A8%E6%8A%80%E6%9C%AF">2.4 信道复用技术</a></li><li><a href="#2.5%E6%95%B0%E5%AD%97%E4%BC%A0%E8%BE%93%E7%B3%BB%E7%BB%9F">2.5 数字传输系统</a></li><li><a href="#2.6%E5%AE%BD%E5%B8%A6%E6%8E%A5%E5%85%A5%E6%8A%80%E6%9C%AF">2.6 宽带接入技术</a></li></ul><p><span id="2.1物理层的基本概念"></span></p><h2 id="21-物理层的基本概念"><a class="markdownIt-Anchor" href="#21-物理层的基本概念"></a> 2.1 物理层的基本概念</h2><p>物理层解决如何在连接各种计算机传输媒体上传输bit流，注意，不是指用什么传输媒体（介质）<br><strong>物理层主要任务</strong>：确定传输媒体接口的一些特性：（为了统一规划，标准化，各个厂商生产一致，可以通用）<br><strong>机械特性</strong>：接口形状 大小 引线数目 网线内有几根线<br><strong>电气特性</strong>：例如规定电压范围<br><strong>功能特性</strong>：例如规定-5V表示0 +5V表示1（电压信号代表数字信号）<br><strong>过程特性</strong>：（规程特性）规定建立连接时各个部件的工作步骤<br><span id="2.2数据通信的基础知识"></span></p><h2 id="22-数据通信的基础知识"><a class="markdownIt-Anchor" href="#22-数据通信的基础知识"></a> 2.2 数据通信的基础知识</h2><p>数据通信模型（图）<br><img src="/images/javawz/20201219080914249.png" alt="在这里插入图片描述"></p><h2 id="相关术语"><a class="markdownIt-Anchor" href="#相关术语"></a> 相关术语</h2><p>通信的目的是传送消息<br><strong>数据（data）</strong>：运送消息的实体<br><strong>信号（signal）</strong>：数据的电气或电磁表现</p><ul><li>–模拟信号：代表消息的参数取值连续（如电压高低电平代表01数据）</li><li>–数字信号：代表消息的参数取值离散</li></ul><p><strong>码元（code）</strong>：在使用时间域的波形表示数字信号时，则代表不同</p><p>离散数值的基本波形就称为码元<br>在数字通信中常常用时间间隔相同的符号来表示一个二进制数字，这样的时间间隔内的信号称为二进制码元，而这个间隔被称为码元长度，1码元可以携带n bit的信息量<br>解释：<br>如果信号一共用2种可能，那么1码元代表1bit信息（只有高低电平）<br>如果信号一共用4种可能，那么1码元代表2bit信息，00 01 10 11，码元有四种可能，一码元代表2bit<br>……<br>如果信号一共用2的n次方种可能，那么1码元代表nbit信息。</p><h2 id="有关信道的几个基本概念"><a class="markdownIt-Anchor" href="#有关信道的几个基本概念"></a> 有关信道的几个基本概念</h2><p>信道一般表示向一个方向传送的信息的媒体。所以咱们说平常的信息线路往往包含一条发送信息的信道和一条接受信息的信道。<br><strong>单向通信</strong>（单工通信）–只能发送或只能接收<br>例子：电视塔发送电视信号，但是电视无法向电视塔发送信号<br><strong>双向交替通信</strong>（半双工通信）–双方可以收发，但是不能同时发送或同时接收<br><strong>双向同时通信</strong>（全双工通信）–通信的双方可以同时发送和接收消息<br>例子：打电话<br>计算机通信大多数是半双工和全双工通信</p><p><strong>基带信号</strong>（baseband）和<strong>带通信号</strong>（band pass）<br>前提：信号是会衰减的，比如人说话，当距离较远之后，声音就会听不到。<br><strong>基带信号</strong>（baseband）：来自信息源的信号。<br><strong>带通信号</strong>（band pass）：把基带信息经过载波调制后的信号（载波调制就是把信号的频率搬到较高的频段，以便传输）<br>因此，如果传输距离短，信息衰减可以接受，那就直接使用基带信号，如果距离长，信号衰减大，那就得通过调制将基带信号转换为带通信号，以减小衰减，接收方收到后再进行解调，分析成基带信号进行解读。</p><p><strong>几种基本调制方法</strong>：<br>调幅<br>调频<br>调相<br>具体见图：<br><img src="/images/javawz/20201219080923486.png" alt="在这里插入图片描述"></p><p>（数字信号的）<strong>编码格式</strong>：<br>单极性不归零码<br>双极性不归零码<br>单极性归零码<br>双极性归零码<br><strong>归零码</strong>：一次信号结尾始终为0电压 不归零码：一次信号结尾不需要归零<br><strong>单极性</strong>：只有正向和0电压 双极性：有正负电压<br><strong>曼彻斯特编码</strong>：低电平跳高电平代表0 高电平条低电平代表1，可以代表没有数据传输（用电平变化代表数据传输）<br><strong>差分曼彻斯特编码</strong>：0和1没有固定高低电平，后面的信号是几取决于前面的信号<br><img src="/images/javawz/20201219080946865.png" alt="在这里插入图片描述"></p><p><strong>信道极限容量</strong>：信号波形在实际信道传输时，会受到带宽受限、噪声、干扰等引起失真。</p><p><strong>奈氏准则</strong>：在理想条件下，为了避免码间串扰（码元太短，无法识别高低电平），码元传输速率是有上限的（上一章带宽可以无限增加吗例子）<br><strong>信噪比</strong>：带宽受阻且有高斯白噪声干扰的信道的情况下，信道的极限无差错信息传输速率信道的极限信息传输速率C的计算公式：（<strong>香农公式</strong>）<br>C = Wlog<sub>2</sub>(1+S/N) b/s (log<sub>2</sub>是log以2为底)<br>W：信道带宽（单位Hz）<br>S：信道内所传信号的平均功率<br>N：信道内部高斯噪声功率<br><strong>香农公式的结论</strong>：<br>1信道的带宽或信道的信噪比(S/N)越大，信息极限传输速率越高，若W或S/N没有上限，则C没有上限（实际不可能）<br>2只要信息传输速率低于信道极限信息传输速率，则一定可以找到方法确保数据的无差错传输<br>实际上信道所能达到的速率比香农公式计算出的低不少</p><p>例子：每分钟说200字，外面有噪声，降低说话速度，来确保收听者听到<br>又例如：无线网的衰减：路由器和计算机在相同房间，计算机速率150M，计算机搬到隔壁，速率只剩下100M，因为隔了一道墙，要确保可靠传输就要降低速率，墙可以理解为噪声。<br><img src="/images/javawz/20201219080955663.png" alt="在这里插入图片描述"><br><span id="2.3物理层下面的传输媒体"></span></p><h1 id="23-物理层下面的传输媒体"><a class="markdownIt-Anchor" href="#23-物理层下面的传输媒体"></a> 2.3 物理层下面的传输媒体</h1><p>导向传输媒体：电磁波沿着固体介质传播<br><img src="/images/javawz/202012190810070.png" alt="在这里插入图片描述"></p><p><strong>双绞线</strong></p><ul><li>–屏蔽双绞线STP（铜线绞在一起，避免电流相互作用，减少干扰）</li><li>–无屏蔽双绞线UTP（比上面多了一层绝缘层，避免外界干扰）</li></ul><p><strong>同轴电缆</strong> （结构和有线电视的电线一样）</p><ul><li>–50欧姆同轴电缆用于数字传输，多用于基带传输，也叫基带同轴电缆</li><li>–75欧姆同轴电缆用于模拟传输，即宽带同轴电缆</li></ul><p><strong>光缆</strong><br>单模光纤<br>多模光纤<br><img src="/images/javawz/20201219081015693.png" alt="在这里插入图片描述"></p><p><strong>非导向传输媒体</strong>（无线传输）：无线传输所使用的频段很广。<br>短波通信主要是靠电离层的反射，但短波信道的通信质量较差。<br>微波在空间主要是直线传播。</p><ul><li>地面微波接力通信</li><li>卫星通信</li></ul><p><span id="2.4 信道复用技术"></span></p><h1 id="24-信道复用技术"><a class="markdownIt-Anchor" href="#24-信道复用技术"></a> 2.4 信道复用技术</h1><p>目的：多用户同时传输，不会相互影响。提高信道利用率<br><img src="/images/javawz/20201219081023953.png" alt="在这里插入图片描述"></p><p><strong>频分复用 FDM(Frequency Division Multiplexing)</strong><br>用户在分配到一定的频带后，在通信过程中自始至终都占用这个频带。<br>频分复用的所有用户在同样的时间占用不同的带宽资源（请注意，这里的“带宽”是频率带宽而不是数据的发送速率）。<br>解释：特定的用户使用特定的频率波段，传输时采用不同频率的波段进行调制和解调，已达到区分其他数据的目的<br><strong>时分复用TDM(Time Division Multiplexing)</strong><br>时分复用则是将时间划分为一段段等长的时分复用帧（TDM 帧）。每一个时分复用的用户在每一个 TDM 帧中占用固定序号的时隙。<br>每一个用户所占用的时隙是周期性地出现（其周期就是 TDM 帧的长度）。<br>TDM 信号也称为等时(isochronous)信号。<br>时分复用的所有用户是在不同的时间占用同样的频带宽度。<br>时分复用可能会造成线路资源的浪费 ：<br>使用时分复用系统传送计算机数据时，由于计算机数据的突发性质，用户对分配到的子信道的利用率一般是不高的。<br><strong>统计时分复用 STDM(Statistic TDM)</strong><br>与时分复用类似，只不过每次发送时标记是哪个用户发出的，解析时按标记解析。可以避免线路资源的浪费<br><strong>波分复用 WDM(Wavelength Division Multiplexing)</strong><br>波分复用就是光的频分复用。<br><strong>码分复用 CDM(Code Division Multiplexing)</strong><br>常用的名词是码分多址 CDMA (Code Division Multiple Access)。<br>各用户使用经过特殊挑选的不同码型，因此彼此不会造成干扰。这种系统发送的信号有很强的抗干扰能力，其频谱类似于白噪声，不易被敌人发现。 每一个比特时间划分为 m 个短的间隔，称为码片(chip)。</p><p><span id="2.5数字传输系统"></span></p><h1 id="25-数字传输系统"><a class="markdownIt-Anchor" href="#25-数字传输系统"></a> 2.5 数字传输系统</h1><p><strong>脉码调制 PCM 体制</strong>：最初是为了在电话局之间的中继线上传送多路的电话。<br>由于历史上的原因，PCM 有两个互不兼容的国际标准，即北美的 24 路 PCM（简称为 T1）和欧洲的 30 路 PCM（简称为 E1）。我国采用的是欧洲的 E1 标准。<br>E1 的速率是 2.048 Mb/s，而 T1 的速率是 1.544 Mb/s。当需要有更高的数据率时，可采用复用的方法。<br>E1取样8000次/s 每个码元代表8位bit E1 采用时分复用技术 32路同时传输<br>8<em>8000</em>32 = 2.048Mb/s<br>T1只有24路同时传播，且有控制信号<br>8<em>8000</em>24+8K=1.544Mb/s(8K表示控制信号)<br><span id="2.6宽带接入技术"></span></p><h1 id="26-宽带接入技术"><a class="markdownIt-Anchor" href="#26-宽带接入技术"></a> 2.6 宽带接入技术</h1><p><strong>ADSL</strong> (Asymmetric Digital Subscriber Line)：非对称数字用户线（就是通过电话线上网）<br>用数字技术对现有的模拟电话用户线进行改造，使它能够承载宽带业务。把 0~4 kHz 低端频谱留给传统电话使用，而把原来没有被利用的高端频谱留给用户上网使用。<br><strong>ADSL</strong>实现原理采用DMT技术<br>DMT 调制技术采用频分复用的方法，把 40 kHz 以上一直到 1.1 MHz 的高端频谱划分为许多的子信道，其中 25  个子信道用于上行信道，而 249 个子信道用于下行信道。每个子信道占据 4 kHz 带宽（严格讲是 4.3125  kHz），并使用不同的载波（即不同的音调）进行数字调制。这种做法相当于在一对用户线上使用许多小的调制解调器并行地传送数据。<br><img src="/images/javawz/2020121908103317.png" alt="在这里插入图片描述"></p><p>ADSL上网图解：<br><img src="/images/javawz/20201219081052766.png" alt="在这里插入图片描述"></p><p>光纤同轴混合网 <strong>HFC</strong> (Hybrid Fiber Coax)（就是利用有线电视线路上网）<br>HFC 网是在目前覆盖面很广的有线电视网 CATV 的基础上开发的一种居民宽带接入网。HFC 网除可传送 CATV  外，还提供电话、数据和其他宽带交互型业务。现有的 CATV 网是树形拓扑结构的同轴电缆网络，它采用模拟技术的频分复用对电视节目进行单向传输。而  HFC 网则需要对 CATV 网进行改造。<br><strong>HFC 的主要特点</strong><br>HFC网的主干线路采用光纤<br>HFC 网将原 CATV 网中的同轴电缆主干部分改换为光纤，并使用模拟光纤技术。<br>在模拟光纤中采用光的振幅调制 AM，这比使用数字光纤更为经济。<br>模拟光纤从头端连接到光纤结点(fiber node)，即光分配结点 ODN (Optical Distribution Node)。在光纤结点光信号被转换为电信号。在光纤结点以下就是同轴电缆<br>HFC结构示意图</p><p><img src="/images/javawz/2020121908105979.png" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;计算机网络原理-第二章-物理层&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#计算机网络原理-第二章-物理层&quot;&gt;&lt;/a&gt; 计算机网络原理 第二章 物理层&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#2.1%E7%89%A9%E7%9
      
    
    </summary>
    
      <category term="计算机网络原理" scheme="https://xiaowuyoucy.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>第一章 概述</title>
    <link href="https://xiaowuyoucy.github.io/2021/01/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%80%E7%AB%A0-%E6%A6%82%E8%BF%B0/"/>
    <id>https://xiaowuyoucy.github.io/2021/01/10/计算机网络原理笔记-第一章-概述/</id>
    <published>2021-01-10T08:15:21.000Z</published>
    <updated>2021-01-13T10:12:33.989Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-概述"><a class="markdownIt-Anchor" href="#第一章-概述"></a> 第一章 概述</h1><h3 id="计算机网络基础韩立刚视频笔记第一章-概述"><a class="markdownIt-Anchor" href="#计算机网络基础韩立刚视频笔记第一章-概述"></a> 计算机网络基础（韩立刚视频笔记）第一章 概述</h3><ul><li><a href="#%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%88%E6%A6%82%E8%BF%B0%EF%BC%89">第一章（概述）</a></li><li><a href="#%E5%B1%80%E5%9F%9F%E7%BD%91">局域网</a></li><li><a href="#%E5%B9%BF%E5%9F%9F%E7%BD%91">广域网</a></li><li><a href="#OSI%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B">OSI参考模型</a></li><li><a href="#OSI%E6%9E%B6%E6%9E%84%E5%9B%BE">OSI架构图</a></li><li><a href="#%E5%90%84%E5%B1%82%E9%97%B4%E7%9A%84%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93">各层间的数据传输</a></li><li><a href="#%E7%BD%91%E7%BB%9C%E6%8E%92%E9%94%99">网络排错</a></li><li><a href="#OSI%E7%BD%91%E7%BB%9C%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%9A%84%E4%BE%8B%E5%AD%90">OSI网络参考模型和网络安全的例子</a></li><li><a href="#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87">计算机网络性能指标</a></li></ul><h2 id="第一章概述"><a class="markdownIt-Anchor" href="#第一章概述"></a> 第一章（概述）</h2><h1 id="局域网"><a class="markdownIt-Anchor" href="#局域网"></a> 局域网</h1><p>覆盖范围小，自己单位维护，带宽固定（由硬件决定） 100米 带宽小<br>多台计算机连接到接入层交换机 多台接入层交换机连接到汇聚层交换机<br>每一层都是一个星型结构</p><p><strong>接入层交换机</strong>：接入口多<br><strong>汇聚层交换机</strong>：连接各个接入层交换机，端口带宽高</p><h1 id="广域网"><a class="markdownIt-Anchor" href="#广域网"></a> 广域网</h1><p>距离远 花钱买服务 花钱租带宽</p><p><strong>ISP</strong>（Internet Server Provider）网络服务提供商<br>自己的机房 对网民提供Internet服务<br>运营的网站放在运营商服务器机房<br>运营商直之间只有一条线路连接，所以这条线路会成为通信速率瓶颈，也是为什么我们跨运营商访问网站比较慢的原因</p><p><strong>物理地址的作用</strong>：数据传输时记录当前物理地址和下次的传输物理地址<br><strong>IP地址的作用</strong>：记录当前IP地址和目标IP地址</p><h1 id="osi参考模型"><a class="markdownIt-Anchor" href="#osi参考模型"></a> OSI参考模型</h1><p><strong>应用层</strong> 能产生流量的程序<br><strong>表示层</strong> 加密 压缩等处理 传输格式（二进制 ASCII码）乱码是表示层问题（开发者处理）<br><strong>会话层</strong> 可以查木马 netstat -n查看链接状态 netstat -nb 查看连接由谁创建<br><strong>传输层</strong> 可靠传输 流量控制 不可靠传输<br><strong>网络层</strong> 选择最佳路径 规划IP地址<br><strong>数据链路层</strong> 标记帧的开始和结束 透明传输 差错校验 交换机速度<br><strong>物理层</strong> 网络设备接口标准 电器（气？）标准 如何在物理链路进行更快的传输（电压 接口数量 接口类型 通信介质：光纤 网线 双绞线）</p><p><strong>分层的好处</strong>：7层相互独立，某一层变化不会影响其他层（相当于软件开发的耦合性小的意思）<br>比如在应用程序写入服务器的IP地址是不符合分层的思想的，万一服务器的IP地址修改 应用程序就挂了（IP地址是网络层的内容，应用程序属于应用层）<br><strong>各层关系</strong>：低层向高层提供服务</p><h1 id="osi架构图"><a class="markdownIt-Anchor" href="#osi架构图"></a> OSI架构图</h1><p><img src="/images/javawz/20200425104644679.jpg" alt="在这里插入图片描述"></p><h1 id="各层间的数据传输"><a class="markdownIt-Anchor" href="#各层间的数据传输"></a> 各层间的数据传输</h1><p>数据封装<br><img src="/images/javawz/20201219080529572.png" alt="在这里插入图片描述"></p><p><img src="/images/javawz/20201219080547223.png" alt="在这里插入图片描述"></p><p>（途中的五层架构，就是OSI架构图右侧的五层架构）<br><img src="/images/javawz/20201219080558322.gif" alt="在这里插入图片描述"></p><h1 id="网络排错"><a class="markdownIt-Anchor" href="#网络排错"></a> 网络排错</h1><p>从底层向上排除<br>1.物理层故障：网络连接状态 查看发送和接收数据包<br>2.数据链路层故障：MAC地址冲突 ADSL欠费 网速无法协商 计算机连接到错误的VLAN<br>3.网络层故障：配置了错误的IP 子网掩码 网关，路由器没有配置可达目标的路由<br>4.应用层故障：（上四层都在这里说）应用程序配置错误（如如浏览器配置了错误的代理）</p><h1 id="osi网络参考模型和网络安全的例子"><a class="markdownIt-Anchor" href="#osi网络参考模型和网络安全的例子"></a> OSI网络参考模型和网络安全的例子</h1><p><strong>1.物理层安全</strong> 一栋大厦是保险公司的，建造时布好网线，使用时10层租给了其他公司，其他公司通过原先布好的网线就可以访问保险公司网络。（别人应该无法私自连接到你的网络，租售10层时 应将网线断开服务器，或配置将网络断开）<br><strong>2.数据链路层安全</strong> 上网时 ADSL 上网账号密码 VLAN划分 交换机绑定固定MAC地址<br><strong>3.网络层安全</strong> 路由器上使用ACL控制数据包流量（指定IP才传输） 防火墙设置<br><strong>4.应用层安全</strong> 开发的应用程序没有漏洞（比如没有SQL注入漏洞等等）</p><h1 id="计算机网络性能指标"><a class="markdownIt-Anchor" href="#计算机网络性能指标"></a> 计算机网络性能指标</h1><p><strong>1.速率</strong><br>连接在计算机网络上的主机在数字信道上传送数据位数的速率（data rate，bit rate）单位为b/s,kb/s,Mb/s,Gb/s<br>这就是我们常说的“我家装的100M的带宽”，不过，有些网站测速显示的速率是按字节来表示的，即需要拿100M/8得到网站显示数据<br>还有交换机的带宽为100M，100M其实是100Mb/s<br><strong>2.带宽</strong><br>数据通信中，数字信道所能传输的最高速率，单位为b/s,kb/s,Mb/s,Gb/s<br>注意，这也是一个速率，只不过是最大速率，和上面的理解几乎一样，多数情况受硬件限制<br><strong>3.吞吐量</strong><br>单位时间内通过某个网络数据量（有可能是几条数据链路流量和）<br><strong>4.时延</strong><br>也就是我们平时玩游戏说的延时<br>时延包括 发送时延 传播时延 处理时延 排队时延<br>发送时延 = 数据块长度（bit）/信道带宽（bit/s）=N s<br>加带宽是减少发送时延 传播速度由介质介质决定，介质固定，传播速度固定<br><strong>带宽可以无限增加吗？</strong><br>不可以：数据块长度固定，增加带宽意味着发送时间变短，同时数据块在信道中的长度也变短了（波形长度 = 发送时间 * 传播速度），之前说过传播速度由介质决定，一般固定，那么发送时间越短，波形越短，短到一定程度，接收方就无法识别高低电平了<br><strong>铜线和光纤的对比：</strong><br>铜线的传播速率其实和光纤的速率接近，那为什么使用光纤呢？因为光纤支持更高的发送速率，光纤使用光信号，即使数据很短，也能解析出高低电平。而铜线使用电信号，波形太短，无法识别高低电平。<br>5.时延带宽积=传播时延*带宽<br>6.往返时间（RTT Round-Trip Time）<br>ping出的时间就是往返时间 &gt;2000ms请求超时<br><strong>7.利用率</strong><br><img src="/images/javawz/20201219080635246.png" alt="在这里插入图片描述"></p><p>最形象的例子是汽车和公路。以汽车类比数据块，以高速公路类比网络光纤。当汽车较少时，利用率较低，但汽车开的很快，延时较低。如果遇到节假日，高速公路塞满了汽车，公路利用率高了，同时延时也高了，因为车已经开不快了，堵车啊。。。</p><h2 id="网络模式"><a class="markdownIt-Anchor" href="#网络模式"></a> 网络模式:</h2><p>单工模式：只能发或收  电视台  广播</p><p>半双工模式:  可以发和收，但不能同时进行   对讲机</p><p>全双工模式:  可以同时发和收    互联网   电话</p><p>无线网的带宽 由网络强度决定</p><p>集线器 物理层<br>交换机 物理层 数据链路层<br>路由器 物理层   数据链路层   网络层</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一章-概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#第一章-概述&quot;&gt;&lt;/a&gt; 第一章 概述&lt;/h1&gt;
&lt;h3 id=&quot;计算机网络基础韩立刚视频笔记第一章-概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href
      
    
    </summary>
    
      <category term="计算机网络原理" scheme="https://xiaowuyoucy.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>linux1-2</title>
    <link href="https://xiaowuyoucy.github.io/2020/11/18/001linux1-2/"/>
    <id>https://xiaowuyoucy.github.io/2020/11/18/001linux1-2/</id>
    <published>2020-11-18T09:24:59.000Z</published>
    <updated>2020-11-18T16:29:51.407Z</updated>
    
    <content type="html"><![CDATA[<h4 id="操作系统的作用"><a class="markdownIt-Anchor" href="#操作系统的作用"></a> 操作系统的作用:</h4><p>使计算机系统易于使用</p><p>有效管理系统资源</p><p>方便用户开发、测试和引进新功能</p><p>向下封装硬件，向上提供操作接口</p><p>linux分为内核版本和发行版本</p><p>内核源码网站：<a href="http://www.kernel.org" target="_blank" rel="noopener">www.kernel.org</a></p><p>发行版本就是给系统披上了UI</p><h3 id="文件系统"><a class="markdownIt-Anchor" href="#文件系统"></a> 文件系统:</h3><p>采用  “路径” + “文件名”</p><p>linux 采用 ‘’/&quot; 且没有盘符</p><p>路径分为:</p><ol><li>绝对路径</li><li>相对路径</li><li><code>./</code>表示当前目录</li><li><code>../</code>表示上一级目录</li></ol><p>linux目录结构</p><ul><li>/  根目录</li><li>/home  家目录</li><li>/bin   放工具(可执行文件)</li><li>/lib  库文件</li><li>/usr/include  头文件</li></ul><h3 id="文件权限"><a class="markdownIt-Anchor" href="#文件权限"></a> 文件权限</h3><p>文件分类</p><ul><li>普通文件 -</li><li>目录文件 d</li><li>设备文件  c字符设备   b块设备</li><li>管道文件</li><li>链接文件</li></ul><table><thead><tr><th style="text-align:center">文件类型</th><th style="text-align:center">文件所有者</th><th style="text-align:center">用户组</th><th style="text-align:center">其他人</th></tr></thead><tbody><tr><td style="text-align:center">-</td><td style="text-align:center">rwx</td><td style="text-align:center">rwx</td><td style="text-align:center">rwx</td></tr></tbody></table><p>-rwxrwxrwx</p><p>查看用户组信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /ect/gruop</span><br></pre></td></tr></table></figure><p>查看用户信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /ect/passwd</span><br></pre></td></tr></table></figure><p>用户名: x : 用户id : 组id</p><p>文件目录的x权限代表可进入权限</p><p>一般情况下linux/unix只允许文件所有者或超级用户(root)改变文件权限</p><p>命令 [-可选参数1] [-可选参数n]</p><p>[]是可选参数</p><h3 id="查命令"><a class="markdownIt-Anchor" href="#查命令"></a> 查命令</h3><p>使用–hellp</p><p>查手册</p><p>用man命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man [选项] 命令名</span><br></pre></td></tr></table></figure><p>按q退出</p><p>enter下一行</p><p>空格下一屏</p><p>h列出所有功能键</p><p>/字符串 搜索所有该字符串</p><p>可以使用方向键操控</p><p>以章节方式分类</p><p>1代表命令</p><p>2代表系统调用</p><p>3代表库调用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man 3 printf //查询printf函数使用说明</span><br></pre></td></tr></table></figure><p>按tab键可以补全命令</p><p>方向键可以查使用过的命令</p><p><code>history</code> 命令</p><p>列出历史命令(连续重复的命令只列举一次)</p><h3 id="ls-遍历当前目录"><a class="markdownIt-Anchor" href="#ls-遍历当前目录"></a> ls 遍历当前目录</h3><p><code>ls [-选项]</code></p><table><thead><tr><th style="text-align:left">-a</th><th style="text-align:left">遍历所有子目录与文件</th></tr></thead><tbody><tr><td style="text-align:left">-l</td><td style="text-align:left">详细显示信息</td></tr><tr><td style="text-align:left">-h</td><td style="text-align:left">以人性化方式显示文件大小</td></tr></tbody></table><p>使用方式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls -ahl</span><br><span class="line">ls -a</span><br><span class="line">ls -l</span><br><span class="line">ll  #等价于 ls -l</span><br></pre></td></tr></table></figure><p>一个文件夹默认有两个目录,一个是<code>.</code>另一个是<code>..</code>   分别代表当前目录和上一级目录。</p><table style="font-size:13px;"><tr>    <td>文件类型</td>    <td>权限</td>    <td>硬连接数目</td>    <td>文件所有者</td>    <td>用户组</td>    <td>文件大小</td>    <td>创建日期</td>    <td>文件名/目录</td></tr></table><p>如果是文件夹,硬链接数目代表其下有多少子目录</p><h3 id="touch-创建文件"><a class="markdownIt-Anchor" href="#touch-创建文件"></a> touch 创建文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch 文件名</span><br><span class="line">touch abc</span><br><span class="line">touch 文件名1  文件名2  文件名3...文件名n</span><br></pre></td></tr></table></figure><p>如果文件存在则修改日期时间为当下时间,否则则创建新文件</p><table style="font-size:14px;"><tr><td>?     代表任意一个字符</td></tr><tr><td>[abc]  匹配a、b、c中任意一个字符</td></tr><tr><td>[a~z] 匹配a~z中任意一个字符</td></tr><tr><td> \  转义字符</td></tr></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls ?.c</span><br><span class="line">ls a.?</span><br><span class="line">ls [a~d]*</span><br><span class="line">ls [abc].?</span><br></pre></td></tr></table></figure><h3 id="输出重定向命令"><a class="markdownIt-Anchor" href="#输出重定向命令"></a> 输出重定向命令: &gt;</h3><p>将命令执行结果重定向到一个文件上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls &gt; text.txt  #如果文件不存在,则创建.存在则覆盖</span><br><span class="line">ls &gt;&gt; a.txt  #如果文件不存在,则创建.存在则追加内容,不覆盖</span><br><span class="line">set -C   #禁止覆盖</span><br><span class="line">set +C   #解除禁止覆盖</span><br></pre></td></tr></table></figure><h3 id="分屏显示more"><a class="markdownIt-Anchor" href="#分屏显示more"></a> 分屏显示:more</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">more 文件名</span><br><span class="line">more abc</span><br></pre></td></tr></table></figure><p>按q退出空格下一页   h帮助</p><h3 id="管道"><a class="markdownIt-Anchor" href="#管道"></a> 管道:|</h3><p>一个命令的输出可以通过管道做为另一个命令输入</p><p>输出|输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls | grep std   #从ls中搜索std字符</span><br><span class="line"></span><br><span class="line">ls | more</span><br></pre></td></tr></table></figure><h3 id="从切换工作目录-cd"><a class="markdownIt-Anchor" href="#从切换工作目录-cd"></a> 从切换工作目录 cd</h3><p>Linux所有的目录或文件名大小写敏感</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">切换到当前用户的主目录(/home/用户目录)</span></span><br><span class="line">cd ~  </span><br><span class="line"><span class="meta">#</span><span class="bash">当前目录</span></span><br><span class="line">cd .  </span><br><span class="line"><span class="meta">#</span><span class="bash">上一级目录</span></span><br><span class="line">cd ..</span><br><span class="line"><span class="meta">#</span><span class="bash">上一次进入的目录</span></span><br><span class="line">cd -</span><br><span class="line">cd 相对路径和绝对路径</span><br><span class="line">cd ~/share  #等价于cd /home/用户名/share</span><br></pre></td></tr></table></figure><h3 id="查看当前路径-pwd"><a class="markdownIt-Anchor" href="#查看当前路径-pwd"></a> 查看当前路径  pwd</h3><h3 id="清屏-clear"><a class="markdownIt-Anchor" href="#清屏-clear"></a> 清屏 clear</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clear</span><br></pre></td></tr></table></figure><p><code>ctrl+l</code>也可以</p><h3 id="创建文件夹-mkdir"><a class="markdownIt-Anchor" href="#创建文件夹-mkdir"></a> 创建文件夹 mkdir</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir 文件名</span><br><span class="line">mkdir 123  #创建一个123的文件夹</span><br><span class="line">mkdir /home/yc/aaa   #指定路径创建一个aa文件夹</span><br><span class="line">mkdir -p  /home/yc/a/b/c #递归创建</span><br></pre></td></tr></table></figure><p>创建者需要有当前文件夹写的权限</p><h3 id="删除文件夹-rmdir"><a class="markdownIt-Anchor" href="#删除文件夹-rmdir"></a> 删除文件夹 rmdir</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rmdir 文件夹名</span><br><span class="line">rmdir aaa</span><br></pre></td></tr></table></figure><p>文件夹必须是空的才可以删除</p><h3 id="rm-可以删除非空文件夹或文件"><a class="markdownIt-Anchor" href="#rm-可以删除非空文件夹或文件"></a> rm  可以删除非空文件夹或文件</h3><p><code>-f</code>不提示</p><p><code>-r</code>删除文件夹</p><p><code>-i</code>交互式删除</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rm 文件</span><br><span class="line">rm -r 文件夹</span><br><span class="line">rm * -rf  #危险操作</span><br><span class="line">rm 文件1  文件2  文件3...文件n</span><br></pre></td></tr></table></figure><h3 id="建立链接文件-ln"><a class="markdownIt-Anchor" href="#建立链接文件-ln"></a> 建立链接文件 ln</h3><p>硬链接:</p><p>给某个文件拷贝一份,这两个文件独立存在</p><p>改变其中一个,另一个也会改变</p><p>删除某个硬链接,不会影响另一个文件</p><p>只能链接普通文件,不能链接目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln 源文件 链接文件</span><br><span class="line">ln 1.txt a.txt  #a.txt是硬链接文件</span><br></pre></td></tr></table></figure><p>软链接:</p><p>类似windows的快捷方式</p><p>如果源文件删除,软连接文件没有意义</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s 源文件 链接文件</span><br><span class="line">ln -s aaa bbb</span><br></pre></td></tr></table></figure><p>和windows快捷方式的区别:</p><p>假设有一个软连接目录是aaa,源文件是b,进入aaa路径会显示xx/aaa而不是xx/b,aaa实际上是b的别名,实际进入的是b目录</p><p>软链接文件的大小是固定的</p><h3 id="gedit-图形化文本编辑"><a class="markdownIt-Anchor" href="#gedit-图形化文本编辑"></a> gedit 图形化文本编辑</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gedit 文件名</span><br></pre></td></tr></table></figure><p>文件存在就打开,不存在就创建一个</p><h3 id="查看或合并文本内容-cat"><a class="markdownIt-Anchor" href="#查看或合并文本内容-cat"></a> 查看或合并文本内容 cat</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat 文件名</span><br><span class="line">cat 文件名1...文件名n</span><br><span class="line">cat 文件名1 文件名2 文件名n &gt;&gt; 文件名x1 #追加合并文本内容</span><br><span class="line">cat 文件名1 文件名2 文件名n &gt; 文件名x1 #覆盖合并文本内容</span><br></pre></td></tr></table></figure><h3 id="文本搜索-grep"><a class="markdownIt-Anchor" href="#文本搜索-grep"></a> 文本搜索 grep</h3><p><code>grep [-选项] '字符串' 文件名</code></p><p>字符串最好用双引号括起来</p><p><code>-v</code>求反</p><p><code>-n</code>显示行号</p><p><code>-i</code>不区分大小写</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep "sss" 1.txt</span><br><span class="line">grep aaa 1.txt -n</span><br></pre></td></tr></table></figure><h5 id="正则表达式"><a class="markdownIt-Anchor" href="#正则表达式"></a> 正则表达式</h5><p><code>^a</code>代表以a开头</p><p><code>ke$</code>以ke结尾</p><p><code>[1~9]</code>1~9中任意一个</p><p><code>[1~9]aaa[1~9]</code>aaa是固定字符</p><p><code>.a.</code>点代表任意一个字符,a是固定字符</p><p>?和*失效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls | grep ^a</span><br></pre></td></tr></table></figure><h3 id="查找文件-find"><a class="markdownIt-Anchor" href="#查找文件-find"></a> 查找文件 find</h3><p>​<code>find 路径 -name 文件名</code></p><p><code>find 路径 -size 文件大小</code></p><p><code>find 路径 -perm 0777</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">find ./ -size 2M #搜索等于2M的文件</span><br><span class="line">find ./ -size +2M #搜索大于2M的文件</span><br><span class="line">find ./ -size -2M #搜索小于2M的文件</span><br><span class="line">find ./ -size +4k -size -5M #搜索大于4k小于5M的文件</span><br><span class="line">find 路径 -perm 0777 #搜索777权限的文件</span><br><span class="line">find ./ -name abc</span><br><span class="line">find ./ -name "*.ssh"</span><br><span class="line">find ./ -name "[a-z]*"</span><br></pre></td></tr></table></figure><h3 id="拷贝文件-cp"><a class="markdownIt-Anchor" href="#拷贝文件-cp"></a> 拷贝文件 cp</h3><p><code>cp 源文件或目录 文件名 [-选项]</code></p><p><code>-a</code>保持文件原有属性</p><p><code>-f</code>不提醒</p><p><code>-i</code>交互式复制</p><p><code>-r</code>递归复制目录</p><p><code>-v</code>显示进度</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp ./a /b -r</span><br><span class="line">cp ./1.txt ./a/b</span><br></pre></td></tr></table></figure><h3 id="移动文件-mv"><a class="markdownIt-Anchor" href="#移动文件-mv"></a> 移动文件 mv</h3><p>用来移动或重命名文件或目录</p><p><code>-f</code>  不提示</p><p><code>-i</code> 交互式移动</p><p><code>-v</code>显示进度</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv ./a.txt ./b </span><br><span class="line">mv ./a.txt ./b.txt #重命名</span><br><span class="line">mv ./a /</span><br></pre></td></tr></table></figure><h3 id="获取文件类型-file"><a class="markdownIt-Anchor" href="#获取文件类型-file"></a> 获取文件类型 file</h3><p><code>file 文件名</code></p><p>executable 可执行文件</p><p>ASCII text 文本文件</p><h3 id="编译文件"><a class="markdownIt-Anchor" href="#编译文件"></a> 编译文件</h3><p><code>gcc 源文件 -o 文件名</code></p><h3 id="运行程序"><a class="markdownIt-Anchor" href="#运行程序"></a> 运行程序</h3><p>直接输入路径+文件名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./a.exe</span><br></pre></td></tr></table></figure><h3 id="归档管理-tar"><a class="markdownIt-Anchor" href="#归档管理-tar"></a> 归档管理 tar</h3><p>打包和解包但不压缩</p><p><code>tar [参数] 打包文件名 源文件</code></p><p><code>-</code>可以不写</p><p>打包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf 打包名称.tar 源文件</span><br><span class="line">c 创建包  v 进度  f 后面是打包名,f放最后</span><br><span class="line"></span><br><span class="line">tar -cvf aaa.tar *</span><br></pre></td></tr></table></figure><p>解包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf 包名</span><br><span class="line">tar -xvf 包名 -C 路径</span><br><span class="line">指定路径要加大写C,x代表解包</span><br><span class="line"></span><br><span class="line">tar -xvf aaa.tar</span><br></pre></td></tr></table></figure><h3 id="gzip压缩和解压"><a class="markdownIt-Anchor" href="#gzip压缩和解压"></a> gzip压缩和解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip xxx.tar #自动生成一个xxx.tar.gz压缩包</span><br></pre></td></tr></table></figure><p><code>-r</code>代表压缩,一般省略不写</p><p><code>-d</code>代表解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gzip -r xxx.tar xxx.tar.gz</span><br><span class="line">加了-r  xxx.tar.gz要自己写</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip -d xxx.tar.gz</span><br></pre></td></tr></table></figure><h3 id="bzip2-解压压缩"><a class="markdownIt-Anchor" href="#bzip2-解压压缩"></a> bzip2 解压/压缩</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bzip2 xxx.tar #压缩</span><br><span class="line">bzip2 -d xxx.tar.bz2 #解压</span><br></pre></td></tr></table></figure><h3 id="打包压缩"><a class="markdownIt-Anchor" href="#打包压缩"></a> 打包压缩</h3><p>指定路径要加 <code>-C</code></p><h4 id="gzip"><a class="markdownIt-Anchor" href="#gzip"></a> gzip</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf xxx.tar.gz *.*</span><br></pre></td></tr></table></figure><h4 id="bzip2"><a class="markdownIt-Anchor" href="#bzip2"></a> bzip2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cjvf xxx.tar.bz2 *.*</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cjvf xxx.tar.bz2 -C ./my/*.*</span><br></pre></td></tr></table></figure><h3 id="解压解包"><a class="markdownIt-Anchor" href="#解压解包"></a> 解压解包</h3><h4 id="gzip-2"><a class="markdownIt-Anchor" href="#gzip-2"></a> gzip</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf xxx.tar.gz</span><br></pre></td></tr></table></figure><h4 id="bzip2-2"><a class="markdownIt-Anchor" href="#bzip2-2"></a> bzip2</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xjvf xxx.tar.bz2</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xjvf xxx.tar.bz2 -C ./my/</span><br></pre></td></tr></table></figure><h3 id="文件压缩和解压-zip-unzip"><a class="markdownIt-Anchor" href="#文件压缩和解压-zip-unzip"></a> 文件压缩和解压 zip unzip</h3><h4 id="压缩-zip"><a class="markdownIt-Anchor" href="#压缩-zip"></a> 压缩 zip</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zip -r 压缩文件名</span><br><span class="line">-r是必须要加的</span><br></pre></td></tr></table></figure><h4 id="解压-unzip"><a class="markdownIt-Anchor" href="#解压-unzip"></a> 解压 unzip</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unzip -d 压缩包名</span><br><span class="line">unzip -d ./text.zip</span><br></pre></td></tr></table></figure><h3 id="查看命令所在目录-which"><a class="markdownIt-Anchor" href="#查看命令所在目录-which"></a> 查看命令所在目录 which</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">which 命令名</span><br><span class="line">which ls</span><br></pre></td></tr></table></figure><h3 id="who查看最近登录的用户"><a class="markdownIt-Anchor" href="#who查看最近登录的用户"></a> who查看最近登录的用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">who</span><br></pre></td></tr></table></figure><h3 id="w-查看最近登录的用户显示ip"><a class="markdownIt-Anchor" href="#w-查看最近登录的用户显示ip"></a> w 查看最近登录的用户,显示ip</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w</span><br></pre></td></tr></table></figure><h3 id="exit-退出当前用户"><a class="markdownIt-Anchor" href="#exit-退出当前用户"></a> exit 退出当前用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><p>如果是图像界面终端,退出当前终端<br>如果是使用ssh远程登录,退出登录用户<br>如果是切换后的登录用户,退出则返回上一个登录账户.</p><h3 id="su-切换用户"><a class="markdownIt-Anchor" href="#su-切换用户"></a> su 切换用户</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">su  #切换到root用户</span><br><span class="line">su root #切换root用户</span><br><span class="line">su - #切换root用户,同时切换到/root目录</span><br><span class="line">su - root#切换root用户,同时切换到/root目录  -两边都有空格</span><br><span class="line">su 普通用户</span><br><span class="line">su - 普通用户</span><br></pre></td></tr></table></figure><p>sudo 运行普通用户执行一些或全部的root命令的一个工具,减少了root用户的登录和管理时间,提高安全性</p><p>需要root权限</p><h3 id="添加删除组账号groupadd-groupdel"><a class="markdownIt-Anchor" href="#添加删除组账号groupadd-groupdel"></a> 添加删除组账号:groupadd  groupdel</h3><p><code>groupadd</code> 新建组账号<br><code>groupdel</code>删除组账号<br>如果有用户属于组了,就不能删组了,把用户移出该组才可以删<br><code>groupadd</code> 组名<br><code>groupdel</code>组名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd abc</span><br><span class="line">groupdel abc</span><br></pre></td></tr></table></figure><h3 id="修改用户所在组-usermod"><a class="markdownIt-Anchor" href="#修改用户所在组-usermod"></a> 修改用户所在组 usermod</h3><p><code>usermod -g 用户组 用户名</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -g root abc</span><br></pre></td></tr></table></figure><h3 id="查看用户组信息-cat-etcgroup"><a class="markdownIt-Anchor" href="#查看用户组信息-cat-etcgroup"></a> 查看用户组信息 cat /etc/group</h3><h3 id="查看用户信息-cat-etcpasswd"><a class="markdownIt-Anchor" href="#查看用户信息-cat-etcpasswd"></a> 查看用户信息   cat /etc/passwd</h3><p><code>yxc19980620c:x:1000:0:yc:/home/yxc19980620c:/bin/bash</code><br>1000代表用户id<br>0代表用户组id</p><h3 id="添加用户-useradd或adduser"><a class="markdownIt-Anchor" href="#添加用户-useradd或adduser"></a> 添加用户 useradd或adduser</h3><p>添加用户时需要在/home目录下添加一个和新建用户同名的文件夹<br>useradd和adduser功能完全一样<br><code>useradd -d 用户文件夹 用户名 -m</code><br><code>useradd -d /home/abc abc -m</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd -d 用户文件夹 用户名 -m </span><br><span class="line">useradd -d /home/abc abc -m</span><br></pre></td></tr></table></figure><p><code>-d</code>代表指定用户文件夹<br><code>-m</code>代表如果用户文件夹不存在则新建一个用户文件夹</p><h5 id="新建用户并指定用户组"><a class="markdownIt-Anchor" href="#新建用户并指定用户组"></a> 新建用户并指定用户组</h5><p><code>useradd -d 用户文件夹 用户名 -g 用户组 -m</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -d /home/abc abc -g root -m</span><br></pre></td></tr></table></figure><h3 id="删除用户-userdel"><a class="markdownIt-Anchor" href="#删除用户-userdel"></a> 删除用户 userdel</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">userdel 用户名  #不会自动删除用户的主目录</span><br><span class="line">userdel 用户名 -r  #会同时删除用户的主目录</span><br></pre></td></tr></table></figure><h3 id="给用户添加密码-passwd"><a class="markdownIt-Anchor" href="#给用户添加密码-passwd"></a> 给用户添加密码 passwd</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">passwd 用户名</span><br><span class="line">passwd abc</span><br></pre></td></tr></table></figure><h3 id="查看用户登录情况-last"><a class="markdownIt-Anchor" href="#查看用户登录情况-last"></a> 查看用户登录情况 last</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo last</span><br></pre></td></tr></table></figure><h3 id="修改文件权限-chmod"><a class="markdownIt-Anchor" href="#修改文件权限-chmod"></a> 修改文件权限 chmod</h3><h4 id="字母法"><a class="markdownIt-Anchor" href="#字母法"></a> 字母法:</h4><p><code>chmod 修改权限 文件名</code></p><p>u 用户所有者  g 用户组  o 其他人</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+ 代表加权限</span><br><span class="line">- 代表减权限</span><br><span class="line">= 赋值权限</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x 1.c  #给1.c文件添加所有者x执行权限</span><br><span class="line"></span><br><span class="line">chmod g-x 1.c  #给1.c文件减去所属组x执行权限</span><br><span class="line"></span><br><span class="line">chmod o=rwx    #给1.c文件赋予其他人rwx权限</span><br></pre></td></tr></table></figure><h4 id="数字法"><a class="markdownIt-Anchor" href="#数字法"></a> 数字法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">u g o</span><br><span class="line">0 0 0</span><br><span class="line">第一个数字0 对应着u权限</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rwx</span><br><span class="line">--- 000 代表没有权限</span><br><span class="line">r-- 1004</span><br><span class="line">-w- 0102</span><br><span class="line">--x 0011</span><br><span class="line">rw- 1106</span><br><span class="line">r-x 1015</span><br><span class="line">-wx 0113</span><br><span class="line">rwx 111 7</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 1.c  #代表1.c的权限是-rwx rwx rwx</span><br><span class="line"></span><br><span class="line">chmod 444 1.c  #代表1.c的权限是-r--r--r--</span><br></pre></td></tr></table></figure><h5 id="文件夹权限说明"><a class="markdownIt-Anchor" href="#文件夹权限说明"></a> 文件夹权限说明</h5><p>目录没有x权限,表示不能进此目录<br>没有r权限,不能查看文件夹内容<br>没有w权限,不能新建或删除,修改文件</p><h3 id="改变文件所有者-chown"><a class="markdownIt-Anchor" href="#改变文件所有者-chown"></a> 改变文件所有者 chown</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown 用户名 文件或目录</span><br><span class="line">chown root aa</span><br></pre></td></tr></table></figure><h3 id="改变文件所属组-chgrp"><a class="markdownIt-Anchor" href="#改变文件所属组-chgrp"></a> 改变文件所属组 chgrp</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chgrp 用户组  文件或目录</span><br><span class="line">chgrp root aa</span><br></pre></td></tr></table></figure><h3 id="查看当前日历-cal"><a class="markdownIt-Anchor" href="#查看当前日历-cal"></a> 查看当前日历 cal</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cal</span><br><span class="line">cal -y  #查看一年的日历</span><br></pre></td></tr></table></figure><h3 id="显示或设置时间-date"><a class="markdownIt-Anchor" href="#显示或设置时间-date"></a> 显示或设置时间 date</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date</span><br></pre></td></tr></table></figure><h3 id="查看进程信息-ps"><a class="markdownIt-Anchor" href="#查看进程信息-ps"></a> 查看进程信息  ps</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux</span><br></pre></td></tr></table></figure><p>可以不用加-<br><code>-a</code>显示所有进程,包括其他用户进程<br><code>-u</code>显示进程的详细信息<br><code>-x</code> 显示没有控制终端的进程<br><code>-w</code>显示加宽,以便显示更多的详细</p><p><code>USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND</code></p><p>USER      用户名<br>PID  进程ID<br>%CPU      进程占用的CPU百分比<br>%MEM      占用内存的百分比<br>VSZ      该进程使用的虚拟內存量（KB）<br>RSS      该进程占用的固定內存量（KB）（驻留中页的数量）<br>TTY    //该进程在哪个终端上运行，若与终端无关，则显示? 若为pts/0等，则表示由网络连接主机进程。<br>STAT     进程的状态<br>START    该进程被触发启动时间<br>TIME     该进程实际使用CPU运行的时间<br>COMMAND:所执行的指令</p><h3 id="动态显示进程信息-top"><a class="markdownIt-Anchor" href="#动态显示进程信息-top"></a> 动态显示进程信息 top</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><h3 id="结束进程-kill"><a class="markdownIt-Anchor" href="#结束进程-kill"></a> 结束进程 kill</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kill 进程id</span><br><span class="line">kill -9  进程id   #强制结束</span><br></pre></td></tr></table></figure><h3 id="后台运行-jobs-fg"><a class="markdownIt-Anchor" href="#后台运行-jobs-fg"></a> 后台运行 &amp;、jobs、fg</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> ./hello.exe &amp;  #表示后台运行</span><br><span class="line"> </span><br><span class="line"> jobs  #查看后台程序</span><br><span class="line"> </span><br><span class="line">fg 后台编号 #把后台程序调出前台</span><br></pre></td></tr></table></figure><h3 id="关机重启-reboot-shutdown-init"><a class="markdownIt-Anchor" href="#关机重启-reboot-shutdown-init"></a> 关机重启 reboot shutdown  init</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">reboot  #重启</span><br><span class="line">shutdown -r now  #重启</span><br><span class="line">shutdown -h now  #立刻关机</span><br><span class="line">shutdown -h 20:25  #在20:25分关机</span><br><span class="line">shutdown -h +10  #十分钟后关机</span><br><span class="line">init 0 #关机</span><br><span class="line">init 6 #重启</span><br></pre></td></tr></table></figure><h3 id="字符界面和图像界面切换"><a class="markdownIt-Anchor" href="#字符界面和图像界面切换"></a> 字符界面和图像界面切换</h3><h5 id="redhat平台"><a class="markdownIt-Anchor" href="#redhat平台"></a> redhat平台</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">init 3  #字符界面</span><br><span class="line">init 5#图形界面</span><br></pre></td></tr></table></figure><h3 id="ubuntu快捷键切换"><a class="markdownIt-Anchor" href="#ubuntu快捷键切换"></a> Ubuntu快捷键切换</h3><p><code>ctrl+alt+F2 字符界面</code><br><code>ctrl+alt+F1 图像界面</code></p><h3 id="检测硬盘空间-df"><a class="markdownIt-Anchor" href="#检测硬盘空间-df"></a> 检测硬盘空间 df</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><h3 id="检查目录所占磁盘空间du"><a class="markdownIt-Anchor" href="#检查目录所占磁盘空间du"></a> 检查目录所占磁盘空间:du</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -h 目录</span><br></pre></td></tr></table></figure><p><code>-a</code> 递归显示指定目录中各文件和子目录中文件占用的数据块<br><code>-s</code> 显示指定文件和目录占用的数据块<br><code>-b</code> 以字节为单位显示磁盘占用情况<br><code>-h</code>人性化输出大小</p><h3 id="安装软件-rpm"><a class="markdownIt-Anchor" href="#安装软件-rpm"></a> 安装软件 rpm</h3><p><code>rpm [选项][软件包名]</code></p><p><code>-i</code>指定安装的软件包<br><code>-h</code>显示安装过程及进度<br><code>-v</code> 显示安装的详细信息<br><code>-q</code>查询系统是否已安装指定软件包<br><code>-a</code> 查看系统已安装的软件包<br><code>-e</code> 卸载软件<br><code>--nodeps</code> 配合<code>-e</code>使用 ,强制卸载,不检查依赖项<br><code>--force</code> 强制操作,如强制安装或卸载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ihv ./aaa.rpm</span><br></pre></td></tr></table></figure><h3 id="获取最新的软件包的列表"><a class="markdownIt-Anchor" href="#获取最新的软件包的列表"></a> 获取最新的软件包的列表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="从源中添加xxx软件"><a class="markdownIt-Anchor" href="#从源中添加xxx软件"></a> 从源中添加xxx软件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install xxx</span><br></pre></td></tr></table></figure><h3 id="删除xxx软件"><a class="markdownIt-Anchor" href="#删除xxx软件"></a> 删除xxx软件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove xxx</span><br></pre></td></tr></table></figure><h3 id="dpkg"><a class="markdownIt-Anchor" href="#dpkg"></a> dpkg</h3><p>Debian Linux系统用来安装、创建和管理软件包的实用工具。</p><h5 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h5><p><code>dpkg(选项)(参数)</code></p><h5 id="选项"><a class="markdownIt-Anchor" href="#选项"></a> 选项</h5><p><code>-i</code>：安装软件包；<br><code>-r</code>：删除软件包；<br><code>-P</code>：删除软件包的同时删除其配置文件；<br><code>-L</code>：显示于软件包关联的文件；<br><code>-l</code>：显示已安装软件包列表；<br><code>--unpack</code>：解开软件包；<br><code>-c</code>：显示软件包内文件列表；<br><code>--confiugre</code>：配置软件包。</p><h5 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h5><p>Deb软件包：指定要操作的.deb软件包。</p><h5 id="实例"><a class="markdownIt-Anchor" href="#实例"></a> 实例</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i package.deb     #安装包</span><br><span class="line">dpkg -r package         #删除包</span><br><span class="line">dpkg -P package         #删除包（包括配置文件）</span><br><span class="line">dpkg -L package         #列出与该包关联的文件</span><br><span class="line">dpkg -l package         #显示该包的版本</span><br><span class="line">dpkg --unpack package.deb  #解开deb包的内容</span><br><span class="line">dpkg -S keyword            #搜索所属的包内容</span><br><span class="line">dpkg -l                    #列出当前已安装的包</span><br><span class="line">dpkg -c package.deb        #列出deb包的内容</span><br><span class="line">dpkg --configure package   #配置包</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;操作系统的作用&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#操作系统的作用&quot;&gt;&lt;/a&gt; 操作系统的作用:&lt;/h4&gt;
&lt;p&gt;使计算机系统易于使用&lt;/p&gt;
&lt;p&gt;有效管理系统资源&lt;/p&gt;
&lt;p&gt;方便用户开发、测试和引进新功能&lt;/p&gt;
&lt;p
      
    
    </summary>
    
      <category term="linux" scheme="https://xiaowuyoucy.github.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>属性选择器</title>
    <link href="https://xiaowuyoucy.github.io/2020/06/04/html-css00022%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>https://xiaowuyoucy.github.io/2020/06/04/html-css00022属性选择器/</id>
    <published>2020-06-04T04:39:16.000Z</published>
    <updated>2020-06-04T04:56:52.137Z</updated>
    
    <content type="html"><![CDATA[<h1 id="属性选择器"><a class="markdownIt-Anchor" href="#属性选择器"></a> 属性选择器</h1><p>在<code>HBuilder</code>中按<code>ctrl+shift+f</code>可以折叠代码</p><p><code>title</code>属性</p><p>可以给标签起一个标题名字</p><p>鼠标放上去会显示属性值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"123"</span>&gt;</span>zzz<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>元素名[属性名] 选择含有指定属性的元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[class]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>元素名[属性名=属性值] 选择含有指定属性和属性值的元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title="123"]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[class="111"]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>元素名[属性名^=属性值] 选择属性值以指定值开头的元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title^="a"]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[class^="b"]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>元素名[属性名$=属性值] 选择属性值以指定值结尾的元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title$="a"]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[class$="b"]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>元素名[属性名*=属性值] 选择属性值中含有某值的元素的元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title*="a"]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[class*="b"]</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-attr">[class]</span>&#123;</span></span><br><span class="line"><span class="undefined">background-color: yellow;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-attr">[title="a"]</span>&#123;</span></span><br><span class="line"><span class="undefined">background-color: red;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-attr">[title^="ac"]</span>&#123;</span></span><br><span class="line"><span class="undefined">background-color: green;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-attr">[title$="bc"]</span>&#123;</span></span><br><span class="line"><span class="undefined">color: red;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-attr">[title*="z"]</span>&#123;</span></span><br><span class="line"><span class="undefined">color: brown;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"acc"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"acc"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"abc"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"abc"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"a"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bc"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"bc"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"azs"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"aza"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"azc"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;属性选择器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#属性选择器&quot;&gt;&lt;/a&gt; 属性选择器&lt;/h1&gt;
&lt;p&gt;在&lt;code&gt;HBuilder&lt;/code&gt;中按&lt;code&gt;ctrl+shift+f&lt;/code&gt;可以折叠代码&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>伪元素</title>
    <link href="https://xiaowuyoucy.github.io/2020/06/04/html-css00021%E4%BC%AA%E5%85%83%E7%B4%A0/"/>
    <id>https://xiaowuyoucy.github.io/2020/06/04/html-css00021伪元素/</id>
    <published>2020-06-04T04:12:31.000Z</published>
    <updated>2020-06-04T04:27:13.487Z</updated>
    
    <content type="html"><![CDATA[<h1 id="伪元素"><a class="markdownIt-Anchor" href="#伪元素"></a> 伪元素</h1><p><code>:first-letter</code></p><p>首字符伪元素</p><p>修改第一个字符的样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">元素名<span class="selector-pseudo">:first-letter</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>:first-line</code></p><p>首行伪元素</p><p>修改首行的样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">元素名<span class="selector-pseudo">::first-line</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>:before</code></p><p>表示元素最前面部分</p><p><code>:before</code>和<code>:after</code>通常搭配<code>content</code>来使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">"2133"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>:after</code></p><p>表示元素最后面</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">"2133"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-pseudo">:first-letter</span>&#123;</span></span><br><span class="line"><span class="undefined">color: red;</span></span><br><span class="line"><span class="undefined">font-size: 50px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-pseudo">:first-line</span>&#123;</span></span><br><span class="line"><span class="undefined">background-color: saddlebrown;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-pseudo">:before</span>&#123;</span></span><br><span class="line"><span class="undefined">font-size: 50px;</span></span><br><span class="line"><span class="undefined">content: "www";</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-pseudo">:after</span>&#123;</span></span><br><span class="line"><span class="undefined">font-size: 50px;</span></span><br><span class="line"><span class="css"><span class="selector-tag">content</span>: "<span class="selector-class">.com</span>";</span></span><br><span class="line"><span class="undefined">color: green;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>12342112423141242<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;伪元素&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#伪元素&quot;&gt;&lt;/a&gt; 伪元素&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;:first-letter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;首字符伪元素&lt;/p&gt;
&lt;p&gt;修改第一个字符的样式&lt;/p&gt;
&lt;figur
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>元素的伪类选择器</title>
    <link href="https://xiaowuyoucy.github.io/2020/05/30/html-css00020%E5%85%83%E7%B4%A0%E7%9A%84%E4%BC%AA%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>https://xiaowuyoucy.github.io/2020/05/30/html-css00020元素的伪类选择器/</id>
    <published>2020-05-30T11:43:22.000Z</published>
    <updated>2020-05-30T12:01:39.341Z</updated>
    
    <content type="html"><![CDATA[<h1 id="元素的伪类选择器"><a class="markdownIt-Anchor" href="#元素的伪类选择器"></a> 元素的伪类选择器</h1><p>伪类专门用来表示元素的一种特殊的状态.</p><p>比如访问过的超链接等</p><p><img src="/images/javawz/1590839109726.png" alt="1590839109726"></p><p><code>:link</code>表示普通的链接（没访问过的超链接）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>:visited</code>表示访问过的超链接</p><p>浏览器是通过历史记录来判断一个链接是否访问过.</p><p>由于隐私的原因，所以visited这个伪类只能修改链接的颜色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>:hover</code>表示鼠标移入的状态</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>:active</code>表示的是超链接被点击的状态.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>:hover</code>和<code>:active</code>也可以为其他元素设置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IE6中,不支持对超链接以为的元素设置<code>:hover</code>和<code>:active</code></p><p><code>:focus</code>获取焦点</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>::selection</code>为p标签中选中的内容使用样式</p><p>可以用::selection伪类</p><p>注意:这个伪类在火狐浏览器中需要采用另外一种方式编写<code>::-moz-selection</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::-moz-selection</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::selection</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;元素的伪类选择器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#元素的伪类选择器&quot;&gt;&lt;/a&gt; 元素的伪类选择器&lt;/h1&gt;
&lt;p&gt;伪类专门用来表示元素的一种特殊的状态.&lt;/p&gt;
&lt;p&gt;比如访问过的超链接等&lt;/p&gt;
&lt;p&gt;&lt;img src=
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>后代选择器和子元素选择器</title>
    <link href="https://xiaowuyoucy.github.io/2020/05/30/html-css00019%E5%90%8E%E4%BB%A3%E9%80%89%E6%8B%A9%E5%99%A8%E5%92%8C%E5%AD%90%E5%85%83%E7%B4%A0%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>https://xiaowuyoucy.github.io/2020/05/30/html-css00019后代选择器和子元素选择器/</id>
    <published>2020-05-30T09:52:56.000Z</published>
    <updated>2020-05-30T10:04:18.151Z</updated>
    
    <content type="html"><![CDATA[<h1 id="后代选择器和子元素选择器"><a class="markdownIt-Anchor" href="#后代选择器和子元素选择器"></a> 后代选择器和子元素选择器</h1><h5 id="父元素"><a class="markdownIt-Anchor" href="#父元素"></a> 父元素</h5><p>直接包含子元素的元素叫做父元素</p><h5 id="子元素"><a class="markdownIt-Anchor" href="#子元素"></a> 子元素</h5><p>直接被父元素包含的元素是子元素</p><h5 id="祖先元素"><a class="markdownIt-Anchor" href="#祖先元素"></a> 祖先元素</h5><p>​    直接或间接包含后代元素的元素叫做祖先元素<br>​            一个元素的父元素也是它的祖先元素</p><h5 id="后代元素"><a class="markdownIt-Anchor" href="#后代元素"></a> 后代元素</h5><p>​    直接或间接被祖先元素包含的元素叫做后代元素<br>​            子元素也是后代元素</p><h5 id="兄弟元素"><a class="markdownIt-Anchor" href="#兄弟元素"></a> 兄弟元素</h5><p>拥有相同父元素的元素是兄弟元素</p><h3 id="后代元素选择器"><a class="markdownIt-Anchor" href="#后代元素选择器"></a> 后代元素选择器</h3><p>作用：选中指定元素内的指定后代元素<br>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">祖先 后代&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">div span&#123;</span></span><br><span class="line"><span class="undefined">background-color: red;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>我是div的后代<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我也是div的后代<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>我span也是div的后代<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="子元素选择器"><a class="markdownIt-Anchor" href="#子元素选择器"></a> 子元素选择器</h3><p>​        作用：选中指定父元素的指定子元素<br>​                语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">父元素&gt;子元素&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">div&gt;span&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>我是div的直接子元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>我span不是div的直接子元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;后代选择器和子元素选择器&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#后代选择器和子元素选择器&quot;&gt;&lt;/a&gt; 后代选择器和子元素选择器&lt;/h1&gt;
&lt;h5 id=&quot;父元素&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hre
      
    
    </summary>
    
      <category term="HTML/CSS" scheme="https://xiaowuyoucy.github.io/categories/HTML-CSS/"/>
    
    
  </entry>
  
  <entry>
    <title>关于MoTa利用互联网</title>
    <link href="https://xiaowuyoucy.github.io/2020/05/09/%E5%85%B3%E4%BA%8E%E6%91%A9%E6%89%93%E5%88%A9%E7%94%A8%E4%BA%92%E8%81%94%E7%BD%91%E7%9A%84%E6%88%98%E7%95%A5/"/>
    <id>https://xiaowuyoucy.github.io/2020/05/09/关于摩打利用互联网的战略/</id>
    <published>2020-05-09T15:02:07.000Z</published>
    <updated>2020-05-09T17:24:44.044Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于mota利用互联网"><a class="markdownIt-Anchor" href="#关于mota利用互联网"></a> 关于MoTa利用互联网</h1><p>摩打需要拥有自己的官方网站以及公众号</p><p>以下内容并非固化思维，可自行天马行空，增加或减少选项。</p><h3 id="官方网站内容"><a class="markdownIt-Anchor" href="#官方网站内容"></a> 官方网站内容</h3><ol><li>用户信息</li><li>活动信息</li><li>最新消息</li><li>菜品展示</li><li>预定系统</li><li>支付系统</li><li>招聘信息</li><li>积分系统</li><li>会员系统</li></ol><h4 id="用户信息"><a class="markdownIt-Anchor" href="#用户信息"></a> 用户信息:</h4><p>收集客户的姓名,电话,性别，生日<br><br></p><h4 id="活动信息"><a class="markdownIt-Anchor" href="#活动信息"></a> 活动信息:</h4><p>展示关于摩打新出的活动,吸引客户参与.<br><br></p><h4 id="最新消息"><a class="markdownIt-Anchor" href="#最新消息"></a> 最新消息:</h4><p>摩打有新出的菜式或与其相关的消息<br><br></p><h4 id="菜品展示"><a class="markdownIt-Anchor" href="#菜品展示"></a> 菜品展示:</h4><p>可以将摩打的所有菜品的图片都发布到网站，供客户参考并选择。<br><br></p><h4 id="预定系统"><a class="markdownIt-Anchor" href="#预定系统"></a> 预定系统：</h4><p>给客户提供预约服务，可提前一星期以内或更久的预定。</p><p>需要用户给出预定的时间，以及菜品。</p><p>需要用户给出定金或菜品全金。</p><p>如果用户到点未到，可根据情况作出部分退款</p><p>优势：客户到点就可马上就餐，缩短客户等待的时间</p><p>缺点：客户已预约且未到的情况，需要有一套方案去处理<br><br></p><h4 id="支付系统"><a class="markdownIt-Anchor" href="#支付系统"></a> 支付系统：</h4><p>可以在网站接如第三方平台的支付，如支付宝，微信，银联。</p><p>技术性要点：</p><p>支付成功：我们官方平台需要做些相应处理</p><p><br><br></p><h4 id="招聘信息"><a class="markdownIt-Anchor" href="#招聘信息"></a> 招聘信息：</h4><p>可在官方网站发布人才招聘信息。<br><br></p><h4 id="积分系统"><a class="markdownIt-Anchor" href="#积分系统"></a> 积分系统：</h4><p>假设用户累计到XXX分，可以赠送指定菜品或物品</p><p>积分衰减（可选）：如果用户在指定时间内（月或季度）未来本店消费，将衰退一定的积分。</p><p>积分可以是1元=1积分，或x元 = y积分（根据情况来定制）<br><br></p><h4 id="会员系统"><a class="markdownIt-Anchor" href="#会员系统"></a> 会员系统：</h4><p>每个新用户或老用户都可以免费成为新会员。</p><p>会员可分等级，等级越高，享受到的优惠越多。</p><p>等级可按照用户总消费金额上下浮度来决定。</p><p>会员系统与积分系统交互使用，既会员系统包含积分系统</p><p>会员等级可按照月或季度衰减或增加。</p><h2 id="挽留老客户以及吸引新用户"><a class="markdownIt-Anchor" href="#挽留老客户以及吸引新用户"></a> 挽留老客户以及吸引新用户</h2><h3 id="挽留老用户"><a class="markdownIt-Anchor" href="#挽留老用户"></a> 挽留老用户：</h3><ol><li>先保证服务质量以及菜品质量</li><li>新鲜感</li><li>惊喜度</li><li>客户口味信息</li><li>天下没有吃不腻的食物，唯有吃不腻的创新，所以需要不断创新</li><li>感受度（如环境、温度等）</li></ol><h3 id="吸引新用户可用于外卖"><a class="markdownIt-Anchor" href="#吸引新用户可用于外卖"></a> 吸引新用户（可用于外卖）：</h3><h4 id="充分平台吸引"><a class="markdownIt-Anchor" href="#充分平台吸引"></a> 充分平台吸引：</h4><p>可利用官方网站，公众号，淘宝，美团，饿了么等平台（最好是广州市区的，其他市区的也可，但这是伏笔）。</p><p><br><br></p><h4 id="从老客户中挖掘新客户"><a class="markdownIt-Anchor" href="#从老客户中挖掘新客户"></a> 从老客户中挖掘新客户：</h4><p>例如：</p><p>老客户介绍了一名新客户来本店消费，可以赠送折惠劵或现金劵、积分等奖励。</p><p>这需要有一套完整的电子系统支撑，以防止客户作弊</p><p>新用户被登记后便自动成为老用户，如上所述，老用户可介绍新用户</p><p><br><br></p><h4 id="活动性吸引"><a class="markdownIt-Anchor" href="#活动性吸引"></a> 活动性吸引</h4><p>写一篇关于介绍摩打的文章，散播到朋友圈，要求客户转发的文章点赞数量达到我们的要求，可赠送xxx菜品或礼物、优惠劵、积分等，每天需要限制人数，如前X名达到我们要求且先到达门店的客户才可享受前面所述的活动。达到点赞数目却不是最先前X名到达门店的可赠送某些物品或获得少量积分等。</p><p><br><br></p><h4 id="限时或限数量抢购"><a class="markdownIt-Anchor" href="#限时或限数量抢购"></a> 限时或限数量抢购：</h4><p>新出的菜品或xxx菜品打折,可限制时间或数量。</p><p><br><br></p><h4 id="策划指定节假日活动"><a class="markdownIt-Anchor" href="#策划指定节假日活动"></a> 策划指定节假日活动</h4><p>根据店面人员已经情况策划。</p><p><br><br><br></p><h4 id="打折与免单活动需要微信小程序支撑"><a class="markdownIt-Anchor" href="#打折与免单活动需要微信小程序支撑"></a> 打折与免单活动（需要微信小程序支撑）：</h4><p>活动要求：</p><ol><li>在本店正在消费的客户</li><li>在规定的时间内，客户转发本店文章，并且该文章已让客户的朋友阅读数量达到xxx</li></ol><p>限制免单名额和打折名额。如免单名额一天为X个，打折名额一天为Y个</p><p>每天公开前一天的免单名单以及打折名单（打消客户的质疑度，可建立一个当天所有用户的微信群，在群里发布消息，这样可以方便发布二次推广）</p><p><br><br><br></p><h2 id="食品网站参考"><a class="markdownIt-Anchor" href="#食品网站参考"></a> 食品网站参考：</h2><h3 id="海底捞"><a class="markdownIt-Anchor" href="#海底捞"></a> 海底捞</h3><p><a href="https://www.haidilao.com/zh/gyhdl/index.html" target="_blank" rel="noopener">https://www.haidilao.com/zh/gyhdl/index.html</a></p><h3 id="肯德基"><a class="markdownIt-Anchor" href="#肯德基"></a> 肯德基</h3><p><a href="http://www.kfc.com.cn/kfccda/index.aspx" target="_blank" rel="noopener">http://www.kfc.com.cn/kfccda/index.aspx</a></p><h3 id="必胜客"><a class="markdownIt-Anchor" href="#必胜客"></a> 必胜客</h3><p><a href="http://www.pizzahut.com.cn/" target="_blank" rel="noopener">http://www.pizzahut.com.cn/</a></p><h3 id="星巴克"><a class="markdownIt-Anchor" href="#星巴克"></a> 星巴克</h3><p><a href="https://www.starbucks.com.cn/" target="_blank" rel="noopener">https://www.starbucks.com.cn/</a></p><br><br><br><h3 id="网站开发渠道"><a class="markdownIt-Anchor" href="#网站开发渠道"></a> 网站开发渠道:</h3><p>一般商家会根据你的要求提供一条龙技术服务的。</p><p>预估价格1k以内或1k~2k之间。</p><p><img src="/images/javawz/1589043822696.png" alt="1589043822696"></p><p><img src="/images/javawz/1589043854881.png" alt="1589043854881"></p><div style="font-family: 微软雅黑;font-size:15px">上面所述的可自行增加、删除与采纳、且所有的前提在于服务质量与菜品质量</div><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于mota利用互联网&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#关于mota利用互联网&quot;&gt;&lt;/a&gt; 关于MoTa利用互联网&lt;/h1&gt;
&lt;p&gt;摩打需要拥有自己的官方网站以及公众号&lt;/p&gt;
&lt;p&gt;以下内容并非固化思维，可自行天马行空，
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在某某食堂的经历</title>
    <link href="https://xiaowuyoucy.github.io/2020/05/07/%E5%9C%A8%E6%9F%90%E6%9F%90%E9%A3%9F%E5%A0%82%E7%9A%84%E7%BB%8F%E5%8E%86/"/>
    <id>https://xiaowuyoucy.github.io/2020/05/07/在某某食堂的经历/</id>
    <published>2020-05-06T17:55:39.000Z</published>
    <updated>2020-05-11T18:35:42.887Z</updated>
    
    <content type="html"><![CDATA[<h3 id="center如果使用手机观看在文章接近末尾时请使用横屏阅读-以避免排版结构错误center"><a class="markdownIt-Anchor" href="#center如果使用手机观看在文章接近末尾时请使用横屏阅读-以避免排版结构错误center"></a> <center>如果使用手机观看，在文章接近末尾时，请使用横屏阅读。以避免排版结构错误！</center></h3><h3 id="事情的开始"><a class="markdownIt-Anchor" href="#事情的开始"></a> 事情的开始</h3><p>原本打算2020年成立的工作室的，可造化弄人啊。千算万算，还是算漏了天灾。所以导致我们的工作室一直迟迟开不起来。就这样我在家里一直待到三月份才回广州，我自己意识到这个时候想进公司还是有点困难的，因为目前很多公司都裁员了，就连教育行业兄弟连公司也倒闭了。所以我只能先随便找一份工作让自己先生存下来。</p><p>回到广州的时候，广州还是属于一级防护，很多村子都封了，外地人基本都进不去。那时候可把我愁坏了，因为很多旅店都是要进村的，还好最后还是被自己混进去了，然后拿到某个村子的通行证。这也多亏了自己学过社会工程学。其实感觉很矛盾，就算拿到了一个村子的通行证，证明了自己是健康的，当去其他村的时候还是不能进。</p><p>在住旅店的这段时间找了很多工作，其实这些工作很多都是工厂和服务员的，没办法，我回来的时候还没有正式开始复工。我面试了很多工作，第一份是仓库管理的，后面因为某些原因就没去了。后面我朋友介绍了一份某某食堂服务员的工作给我，面试我的是一位叫小萱的小姐姐，那时候我们还是在线面试的，开视频的时候，就问了一些问题，之后就叫我们去办健康证了，再之后就是让我们去总部培训，培训的时候那叫一个精彩呀，满满的鸡汤和大饼（自己百度）。</p><h3 id="入职的第一天"><a class="markdownIt-Anchor" href="#入职的第一天"></a> 入职的第一天</h3><p>当我踏进某某食堂的第一步的时候，我觉得这里面的人都很好呀，特别是我们的店长，那个笑脸真的让人意外的感觉到亲切的感觉。</p><p>上岗的时候，楼面的李某某主管就安排了我补家私，然后家私没有补完就叫我去洗毛巾，洗完毛巾之后叫我去收桌，收桌之前一个叫啊西的经理和李某某主管一直强调说我们这里要的是效率，效率，效率，这时我心里那个叫惨呀。</p><p>其实我感觉日企文化的公司都很干净，我们收桌的时候要带黄色的一次性手套，而弄食材的时候必须带透明的手套，因为疫情期间嘛，这方面我感觉到了人性化，为员工着想的同时，也给顾客带来了健康。唯一的缺点是规矩真的很多，很多规矩都是很死板的，这也是我一直不想进入日企或日企文化公司的原因。没办法我还是来了。随后我发现，天啊，这里的桌是收不完的，从上班一直收到下班，我心里那个叫苦呀，可能是之前没有做好心理准备吧。随后又发现，每当遇见阿西的时候，她都会对我说加油哦。我心想，我会不会以后听到加油两个字都毛骨悚然呀。不过这里的正能量还是挺多的。感觉来到这里，就是再重温一遍学生会的感觉。比如见到人就要打招呼，哪怕是见到我们内部的员工也是要打招呼，发现某个员工的错误马上就指出来（这与其他职场完全不一样）有些地方是不会当面马上大声的指出来的，因为怕得罪人嘛。特别是在有管理层的人在旁边的时候，这样会让犯错误的那个同事很难堪的，表面上是不会怨恨，可背后呢？谁也不敢保证吧？这里也是对一个人情商的一个大考场地。</p><h3 id="亮点"><a class="markdownIt-Anchor" href="#亮点"></a> 亮点</h3><ol><li>这里的服务与普通餐饮的行业相比，可以说是所向披靡的。</li><li>卫生方面在我所接触过的餐饮行业中也是数一数二的。</li><li>小伙伴累的时候，某些管理层会给小伙伴一罐红牛或者营养快线，这点心里还是会觉得自己的付出还是有被认可的。被认可不一定是给物质，还可以是精神上的认可。比如说xxx你今天表现得很棒哦！你今天的努力，我都有看到哦。</li><li>大部分小伙伴都很热情。</li><li>很多小伙伴都很上进,虽然 有些时候上进的方式缺少了情商的方式，但拥有上进的心就是一种正能量，能量是会传递的。</li><li>管理层的人都比较友善，没有一副高高在上的感觉，这点是我最欣赏的地方，因为现实中很少这样的管理者。</li><li>大波店长的笑容可以治愈每个人的心，每当不开心时，他的笑容都能让人觉得很欣慰。因为工作中总会积累到一些负面的情绪，可他这么一笑，所有的负面都烟消云散了，在职场上，一位领导对你的微笑意味着对你的认可，虽然不知道他的笑意是什么，但总要往好处想嘛。人们常说微笑是一种无穷大的能量，它可以让你战胜一切，所向披靡。</li></ol><p>还有很多很多，我就先省略掉吧！</p><h3 id="缺陷"><a class="markdownIt-Anchor" href="#缺陷"></a> 缺陷</h3><ol><li>为什么这里的女生厕所要男生去洗，这对男员工心理不舒服的同时还给顾客带来不舒服。每次搞完厕所出来的时候，遇到哪些女顾客时，她们都会带着一种异样的眼光看着我们。难道某某食堂这里没有女生吗？我还记得有一次，我搞完厕所出来的时候，有一位女生很大声的说，“咦，女厕所居然有男生的”，这时候我心里贼尴尬呀。</li><li>这里的员工餐贼不公平，除了第一批吃的，其他批次吃时可能渣都没有了，更别说最后一批了。我提前半个小时公司了，发现菜和饭一点都不剩了，这还是人做的事情么？然后让我挨饿上班工作，还好一位叫鱼子酱的去熟食窗口那里打了一位饭并且反应给啊西经理让她让我去休息室吃。要不然我还真担心自己会饿晕在那里。</li><li>某位经理说我没有融入进这群伙伴里，其实我觉得这不是一个人的问题吧，毕竟一个巴掌是拍不响的。他们老员工不接纳我们这些新员工，我们不管做什么都融入不进去呀。</li><li>我发现这里收桌的人都是最低等最低贱的，恰好我就是那个收桌的。任何人都可以指挥我们这个岗位的人去做事，哪怕这些不在我们份内的事，还是要我们做。叫我们帮他们很容易，叫他们帮我们那个叫困难呀。</li><li>某位经理真的是用人千疑啊，有一天肚子不舒服，两个小时上了两次厕所，他居然说怎么你又上厕所，天天上厕所。我杀人的心都有了，怀疑人家偷懒就直说嘛。</li><li>停下来就是闲的。有一次忙得不可开交了，好不容易停下来站了一会，某位经理上来就直接说，你这么闲，去扫一下地。这时心里一万句cnm啊，我忙的时候，你的眼睛去哪里了？莫非是被卖冰棍的老太太当冰块串起来了？</li><li>刚刚入职工作的第三天，没有人教我们看班表，直接就发一张图片过来，然后第二天就问我们为什么没上班 ，我们一脸懵逼呀。鬼知道那张图片是要来干嘛的？</li><li>普通员工的事情，管理层的人不上心。最记得的是宿舍的WiFi永远都是马上就来装的，结果一天拖一天，一直拖了大半个月才装好。如果是这样，直接就说公司不装宿舍WiFi嘛。</li><li>管理层的意见没有统一化，比如收夜最后补家私的时候有些经理说全部要补进消毒柜，有些经理说只补筷子勺子，和酱油碟就可以了。这样我们听谁的？</li><li>啊姨放家私的窗口永远都是有零碎的家私。</li><li>厨余垃圾的那个桶永远都是有生活垃圾的。只要收桌的人离开一会回来马上就能看到有生活垃圾了。然后我们每次都要伸手进厨余垃圾桶里捡起来，所以我们收桌的小伙伴还有另外一个称呼“捡垃圾的垃圾佬”。</li><li>有一次有一位小伙伴不小心把家私弄掉了，刚刚好砸在我头上，当时那个叫疼啊，然后某位经理就催我快点收桌，我都和他说了我被砸到头了，他还再催我去收桌，当时觉得超级憋屈呀。如果不是因为差不多到离职那天了，我绝对会当场发飙的。</li><li>下班搞卫生的时候，安排到我扫地，我就拿出手机来照着地上来扫，有个叫渣女就不断的讽刺，说哇你好认真哦，扫个地还用电筒照着。我都是打算要走的人了，是和你抢功劳呢？还是怕我和你竞争升职呢？我都一而再再而三的忍让她了，她还咄咄逼人，最后我还是爆发了，这是我来这某某食堂以来第一次发的脾气。说实话我本来就不容易发脾气的人，能把我逼到这种地步的人还真的是人才啊。</li><li>感觉这里的物料老是不足，例如 黄色手套，早几天前都说了手套快没了，还没用完了之后还没有买回来，然后不知道怎么突然又找到几包暂时能支撑着，谁知道他们还不会亡羊补牢，是不是每次都要等到危机来临的时候才去处理呢？这些是谁的责任呢？哪怕手套这些是采购买的，但管理层领导的工作是什么？带领好自己手下的同时是不是应该和其他部门交接好呀？</li><li>有一次一位叫啊西的管理层领导叫我去女厕所搞卫生，搞完之后要拍照发在钉钉那个群上。刚刚好我搞完卫生拍好照走出去门口准备把照片发在钉钉上的时候，另外一位管理层的就马上说我玩手机了，根本就没有解释的机会，我只能说这个管理层领导也是个人才（蠢材）。</li><li>在我离职的那段时间，那些管理层的一直安排我收桌，收桌就算了。有一次整个场子就我一个收桌的，场子分三个区嘛，分别是ＡＢＣ区，Ａ区称为内场，因为内场一直很忙，收桌一直收个不停，吃宵夜的时候Ｃ区的小伙伴就开始抱怨我了，她说：我是不是得罪你了？为什么一直不过来Ｃ区收桌啊。这时我那个叫憋屈啊，我在内场忙得冒烟了，哪里还有时间去Ｃ区收桌啊！真的当我会分身啊？</li><li>E区真的很搞笑,每次下大雨都会淹水，这个问题其实也不是很复杂，既然不能改变建筑的结构，但可以软性的去解决问题。例如买些隔水的物品回来，如果每次下雨都让客人湿鞋或在水中进食，可想而知，这给客人的体验感是多差，这也是潜在的客户流失的存在。问题往往只有那么一两个，但解决问题的方法却可以有千万种。</li></ol><br><br><br><h3 id="最后的个人总结与感慨"><a class="markdownIt-Anchor" href="#最后的个人总结与感慨"></a> 最后的个人总结与感慨</h3><p>上述的文字言语或许会比较偏激，这其中我自身也是有问题的，因为我缺乏在这里上进的动力，所以一直都很消沉。我的光芒也并没有在这里展现出来，因为这不是我的舞台。其实这里面大部分的同事都是蛮可爱的，还没有被尘世染化，正是他们的这份纯情的天真，才能勾起我曾在学生时代学生会的点点滴滴。可惜我不再是过往的那个我，而他们也不是我曾经的小伙伴。到最后我才发现最开始啊西总是对我喊的那句“加油哦！”并没有成为我心里最恐惧的话，而成为了我最难以忘怀的能量源泉。我知道自己是一个非常容易陷入感情却又难以自拔的人，所以我一直很抗拒自己的社交，所以这一次我狠下了心，并不想和他们有深入的交情。其实也挺矛盾的，明明不想成为这样的人，可却要伪装成这样的人，现在想想还是挺可笑的。我很清楚每个地方都会有矛盾、明中暗斗、误会等。但这并不影响他们的可爱。最后我还是没有留下点什么，悄然的离开了这个我最不喜欢也最不讨厌的地方。</p><center style="font-size:28px;">假若有缘，我想我们还是不见了吧！</center><center style="font-size:28px;">祝愿你们前程似锦，面对困难不畏不惧。</center><center style="font-size:28px;">记得要把微笑常挂在脸上哦！</center><center style="font-size:28px;">因为你们真的真的很可爱！</center><center style="font-size:50px;">(*^o^)(^o^*)</center><p>最后我要对<span style="font-size:18px;font-weight:bold;">彩虹</span>、<span style="font-size:18px;font-weight:bold;">小劳</span>、<span style="font-size:18px;font-weight:bold;">西红柿</span>、<span style="font-size:18px;font-weight:bold;">鱼子酱</span>、<span style="font-size:18px;font-weight:bold;">文庆</span>，<span style="font-size:18px;font-weight:bold;">博锐</span>、<span style="font-size:18px;font-weight:bold;">肥龙</span>、<span style="font-size:18px;font-weight:bold;">小弟</span>，说声谢谢，你们身上各自的光芒，成功的留在了我的心里。当然不能忘记了我们的<span style="font-size:18px;font-weight:bold;">浩业大哥</span>！大人物嘛总是要最后出场的。哈哈哈！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;center如果使用手机观看在文章接近末尾时请使用横屏阅读-以避免排版结构错误center&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#center如果使用手机观看在文章接近末尾时请使用横屏阅读-以避免排版结构错误center&quot;&gt;&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="https://xiaowuyoucy.github.io/2020/04/30/006%E7%AE%97%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/04/30/006算法/</id>
    <published>2020-04-30T05:24:52.000Z</published>
    <updated>2020-05-08T17:45:29.234Z</updated>
    
    <content type="html"><![CDATA[<h1 id="算法"><a class="markdownIt-Anchor" href="#算法"></a> 算法</h1><h2 id="查找与排序技术"><a class="markdownIt-Anchor" href="#查找与排序技术"></a> 查找与排序技术</h2><h3 id="顺序查找"><a class="markdownIt-Anchor" href="#顺序查找"></a> 顺序查找</h3><p>顺序表又称为顺序搜索。</p><p>从表中的第一个元素开始比较，若相等则查找成功，若元素不存在，则查找失败。</p><p>当一个线性表的长度为n时，最坏情况下，查找一个元素需要比较n次</p><h3 id="二分查找法"><a class="markdownIt-Anchor" href="#二分查找法"></a> 二分查找法</h3><p>二分查找只适用于顺序存储的有序表。</p><p>步骤：</p><p>将x与线性表的中间元素进行比较：</p><p>  若中间元素的值等于x，则说明查找成功，查找结束</p><p>  若x小于中间元素的值，则在线性表的前半部分以相同的方法查找。</p><p>  若x大于中间元素的值，则在线性表的后半部分以相同的方法查找。</p><p>  这个过程一直进行到查找成功或子表长度为0（说明线性表中没有这个元素）为止。</p><p>最糟糕的情况需要查找log<sub>2</sub>n次。</p><h2 id="交换类排序法"><a class="markdownIt-Anchor" href="#交换类排序法"></a> 交换类排序法</h2><h3 id="冒泡排序"><a class="markdownIt-Anchor" href="#冒泡排序"></a> 冒泡排序</h3><p>通过相邻数据元素的交换逐步将线性表变成有序的。</p><p>从前往后，然后从后往前比较并交换元素。</p><p>最坏情况时要比较<code>n(n - 1)/2</code> 次，n代表线性表的长度。</p><h3 id="快速排序"><a class="markdownIt-Anchor" href="#快速排序"></a> 快速排序</h3><p>快速排序法是对冒泡排序法的改进，又叫作分区交换排序法。</p><h5 id="基本思想如下"><a class="markdownIt-Anchor" href="#基本思想如下"></a> 基本思想如下：</h5><p>从线性表中任意选取一个元素（通常选第一个元素），设为T，将线性表中小于T的元素移到T的前面，而大于T的元素移到T的后面，结果就将线性表分成了两部分（称为两个子表），T处于分界线的位置处，这个过程称为线性表的分割。通过对线性表的一次分割，就以T为分界线，将线性表分成了前后两个子表，且前面子表中的所有元素均不大于T，而后面子表中的所有元素均不小于T，然后用同样的方法对分割后的子表进行快速排序，直到各个子表的长度为1为止。</p><h2 id="插入类排序法"><a class="markdownIt-Anchor" href="#插入类排序法"></a> 插入类排序法</h2><h3 id="简单插入排序法"><a class="markdownIt-Anchor" href="#简单插入排序法"></a> 简单插入排序法</h3><p>简单插入排序法也叫直接插入排序法。</p><p>插入排序是指将无序序列中各元素依次插入到已经有序的线性表中。</p><h3 id="希尔排序法"><a class="markdownIt-Anchor" href="#希尔排序法"></a> 希尔排序法</h3><p>希尔排序法（Shell Sort）又称缩小增量排序法，它对简单插入排序做了比较大的改进。</p><p>其方法如下：</p><p>将整个无序序列分割成若干小的子序列分别进行简单插入排序。</p><p>时间复杂度: O（n<sup>1.5</sup>）</p><h3 id="堆排序法"><a class="markdownIt-Anchor" href="#堆排序法"></a> 堆排序法</h3><p><img src="../../themes/pure/source/images/javawz/1588917918697.png" alt="1588917918697"></p><p>每个父节点同时大于等于两个子结点或每个父结点同时小于等于两个子结点的结构成为堆</p><p>时间复杂度: O（ nlog<sub>2</sub>n ）</p><h3 id="考点总结"><a class="markdownIt-Anchor" href="#考点总结"></a> 考点总结</h3><ol><li>二分法查找只适用于顺序存储的线性表，且表中的元素必须按关键字有序（升序，但允许相邻元素值相等）排列；</li><li>在长度为n的有序线性表中进行二分查找其时间复杂度为O（ log<sub>2</sub>n ）。</li></ol><p>交换类</p><ol><li>冒泡排序：n(n-1)/2</li><li>快速排序：n(n-1)/2</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;算法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#算法&quot;&gt;&lt;/a&gt; 算法&lt;/h1&gt;
&lt;h2 id=&quot;查找与排序技术&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#查找与排序技术&quot;&gt;&lt;/a&gt; 查找与排序技术&lt;
      
    
    </summary>
    
      <category term="计算机公共基础" scheme="https://xiaowuyoucy.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%85%AC%E5%85%B1%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>树与二叉树</title>
    <link href="https://xiaowuyoucy.github.io/2020/04/28/005%E6%A0%91%E4%B8%8E%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>https://xiaowuyoucy.github.io/2020/04/28/005树与二叉树/</id>
    <published>2020-04-27T18:05:59.000Z</published>
    <updated>2020-04-27T19:31:29.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="树与二叉树"><a class="markdownIt-Anchor" href="#树与二叉树"></a> 树与二叉树</h1><h2 id="树的基本概念"><a class="markdownIt-Anchor" href="#树的基本概念"></a> 树的基本概念</h2><p>树（tree）是一种非线性结构。在树这种数据结构中，所有数据元素之间的关系具有明显的层次特点。</p><p><img src="/images/javawz/1588010945355.png" alt="1588010945355"></p><p>每一个结点只有一个前件，称为父结点。</p><p>没有前件的结点称为根节点。</p><p>每一个结点都可以有多个后件，它们都称为该结点的子结点。</p><p>没有后件的结点称为叶子结点。</p><p>一个结点所拥有的后件的个数称为该结点的度。</p><p>所有结点中的最大的度称为树的度</p><p>以某结点的一个子结点为根构成的树称为该结点的一棵子树。</p><p>叶子结点没有子树。</p><h2 id="二叉树"><a class="markdownIt-Anchor" href="#二叉树"></a> 二叉树</h2><h3 id="二叉树的基本概念"><a class="markdownIt-Anchor" href="#二叉树的基本概念"></a> 二叉树的基本概念</h3><p>二叉树的特点：</p><ol><li>非空二叉树只有一个根结点</li><li>每一个结点最多有两棵子树，且分别称为该结点的左子树与右子树。</li></ol><h3 id="满二叉树与完全二叉树"><a class="markdownIt-Anchor" href="#满二叉树与完全二叉树"></a> 满二叉树与完全二叉树</h3><p>满二叉树与完全二叉树是两种特殊的二叉树。</p><h4 id="满二叉树"><a class="markdownIt-Anchor" href="#满二叉树"></a> 满二叉树</h4><p>在一棵二叉树中，如果所有分支结点都存在左子树和右子树，并且所有叶子结点都在同一层上，这样的二叉树称为满二叉树。</p><p><img src="/images/javawz/1588011949688.png" alt="1588011949688"></p><h4 id="完全二叉树"><a class="markdownIt-Anchor" href="#完全二叉树"></a> 完全二叉树</h4><p>完全二叉树是指最后一层外，每一层上的结点数均达到最大值，而在最后一层上只缺少右边的若干结点。</p><p>满二叉树也是完全二叉树，而完全二叉树不一定是满二叉树</p><p><img src="/images/javawz/1588012008087.png" alt="1588012008087"></p><h3 id="二叉树的基本性质"><a class="markdownIt-Anchor" href="#二叉树的基本性质"></a> 二叉树的基本性质</h3><p>性质1：在二叉树中，第i层的结点数最多为2<sup>i-1</sup>个（i≥1）</p><p>性质2：在深度为k的二叉树中，结点总数最多为2<sup>k</sup>-1个（k≥1）。</p><p>性质3：对任意一棵二叉树，度为0的结点（既叶子结点）总是比度为2的结点多一个。</p><p>性质4：</p><ol><li>具有n个结点的二叉树，其深度至少为[ log<sub>2</sub>n ] + 1，其中[log<sub>2</sub>n]表示取log<sub>2</sub>n的整数部分。</li><li>具有n个结点的完全二叉树的深度为[log<sub>2</sub>n]+1。</li></ol><h3 id="二叉树的存储结构"><a class="markdownIt-Anchor" href="#二叉树的存储结构"></a> 二叉树的存储结构</h3><p>二叉树通常采用链式存储结构。</p><p>用于存储二叉树中各元素的存储结点。</p><p>由两部分组成：数据域与指针域。</p><p><img src="/images/javawz/1588013059247.png" alt="1588013059247"></p><h3 id="二叉树遍历"><a class="markdownIt-Anchor" href="#二叉树遍历"></a> 二叉树遍历</h3><p>按一定的次序访问二叉树中的每一个结点,使每个结点被访问一次且只被访问一次。</p><p>二叉树的遍历分为三种：</p><ol><li>前序遍历</li><li>中序遍历</li><li>后序遍历</li></ol><p>D，L，R</p><p>D代表访问根结点</p><p>L代表遍历根节点的左子树</p><p>R代表遍历根节点的右子树</p><p>前序遍历：D L R</p><p>中序遍历：L D R</p><p>后序遍历：L R D</p><h4 id="前序遍历dlr"><a class="markdownIt-Anchor" href="#前序遍历dlr"></a> 前序遍历(DLR)</h4><p>先访问根节点，然后遍历左子树，最后遍历右子树；并且，在遍历左、右子树时，仍然先访问根结点，然后遍历左子树，最后遍历右子树。</p><p><img src="/images/javawz/1588013579154.png" alt="1588013579154"></p><p>前序遍历结果：ABDGCEHIF</p><h4 id="中序遍历ldr"><a class="markdownIt-Anchor" href="#中序遍历ldr"></a> 中序遍历（LDR）：</h4><p>首先遍历左子树，然后访问根节点，最后遍历右子树；并且，在遍历左、右子树时，仍然先遍历左子树，然后访问根结点，最后遍历右子树。</p><p><img src="/images/javawz/1588013579154.png" alt="1588013579154"></p><p>中序遍历结果:DGBAHEICF</p><h4 id="后序遍历lrd"><a class="markdownIt-Anchor" href="#后序遍历lrd"></a> 后序遍历(LRD)</h4><p>首先遍历左子树，然后遍历右子树，最后访问根节点；并且，在遍历左、右子树时，仍然先遍历左子树，然后遍历右子树，最后访问根结点。</p><p><img src="/images/javawz/1588013579154.png" alt="1588013579154"></p><p>后序遍历结果:GDBHIEFCA</p><h3 id="考题"><a class="markdownIt-Anchor" href="#考题"></a> 考题</h3><p><img src="/images/javawz/1588014165874.png" alt="1588014165874"></p><p><img src="/images/javawz/1588014204264.png" alt="1588014204264"></p><p><img src="/images/javawz/1588014299726.png" alt="1588014299726"></p><p><img src="/images/javawz/1588014360345.png" alt="1588014360345"></p><p><img src="/images/javawz/1588014406263.png" alt="1588014406263"></p><p><img src="/images/javawz/1588014480791.png" alt="1588014480791"></p><p><img src="/images/javawz/1588015614895.png" alt="1588015614895"></p><p><img src="/images/javawz/1588015660400.png" alt="1588015660400"></p><p>扇入代表前件</p><p>扇出代表后件</p><p><img src="/images/javawz/1588015687351.png" alt="1588015687351"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;树与二叉树&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#树与二叉树&quot;&gt;&lt;/a&gt; 树与二叉树&lt;/h1&gt;
&lt;h2 id=&quot;树的基本概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#树的基本概念&quot;&gt;&lt;/a&gt; 树
      
    
    </summary>
    
      <category term="计算机公共基础" scheme="https://xiaowuyoucy.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%85%AC%E5%85%B1%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>栈和队列</title>
    <link href="https://xiaowuyoucy.github.io/2020/04/25/004%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/"/>
    <id>https://xiaowuyoucy.github.io/2020/04/25/004栈和队列/</id>
    <published>2020-04-25T03:17:47.000Z</published>
    <updated>2020-04-25T04:01:10.244Z</updated>
    
    <content type="html"><![CDATA[<h1 id="栈和队列"><a class="markdownIt-Anchor" href="#栈和队列"></a> 栈和队列</h1><h2 id="栈及其基本运算"><a class="markdownIt-Anchor" href="#栈及其基本运算"></a> 栈及其基本运算</h2><h3 id="栈的基本概念"><a class="markdownIt-Anchor" href="#栈的基本概念"></a> 栈的基本概念</h3><p>栈<code>（stack）</code>是限定仅在一端进行插入和删除运算的线性表。</p><p>在栈中，允许插入与删除的一端称为<code>栈顶</code>，而不允许插入与删除的另一端称为<code>栈底</code>。</p><p>栈的入口和出口是同一个口。</p><p><img src="/images/javawz/1587784945123.png" alt="1587784945123"></p><p><code>top=bottom=0的时候，说明栈是空的。</code></p><h3 id="栈的基本运算"><a class="markdownIt-Anchor" href="#栈的基本运算"></a> 栈的基本运算</h3><p>入栈，退栈与读栈顶元素。</p><h4 id="入栈运算"><a class="markdownIt-Anchor" href="#入栈运算"></a> 入栈运算</h4><p>入栈运算是指在栈顶位置插入一个新元素。</p><p>有两个基本操作：</p><ol><li>将栈顶指针加1，top=top+1；</li><li>然后将新元素插入栈顶指针指向的位置；</li></ol><h4 id="退栈运算"><a class="markdownIt-Anchor" href="#退栈运算"></a> 退栈运算</h4><p>取出栈顶元素，并赋值给某个变量</p><p>两个基本操作：</p><ol><li>将栈顶元素赋值给变量</li><li>然后栈顶指针减1，top=top-1</li></ol><h4 id="读栈顶元素"><a class="markdownIt-Anchor" href="#读栈顶元素"></a> 读栈顶元素</h4><p>将栈顶元素赋值给一个指定的变量且栈顶指针不会改变。</p><h4 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h4><ol><li>栈是按照<code>“先进后出”</code>或先进先出的原则组织数据的线性表</li><li>在栈的入栈和退栈的运算当中，栈底指针<code>bottom</code>维持不变。</li><li>因为栈能保存数据，因此栈具有记忆作用</li><li>栈内的元素个数计算：<code>|TOP-BOTTOM|+1</code>,其中<code>BOTTOM&gt;=1</code>,如果栈当中<code>TOP=BOTTOM=0</code>说明栈是空的</li><li>栈是线性结构，在计算机中担当着临时存储的功能。</li></ol><p><img src="/images/javawz/1587785817849.png" alt="1587785817849"></p><p><img src="/images/javawz/1587785837714.png" alt="1587785837714"></p><p><img src="/images/javawz/1587785862309.png" alt="1587785862309"></p><p><img src="/images/javawz/1587785896715.png" alt="1587785896715"></p><p><img src="/images/javawz/1587785946660.png" alt="1587785946660"></p><p><img src="/images/javawz/1587786057993.png" alt="1587786057993"></p><p><img src="/images/javawz/1587786096972.png" alt="1587786096972"></p><h2 id="队列及其基本运算"><a class="markdownIt-Anchor" href="#队列及其基本运算"></a> 队列及其基本运算</h2><h3 id="队列的基本概念"><a class="markdownIt-Anchor" href="#队列的基本概念"></a> 队列的基本概念</h3><p>队列（<code>queue</code>）是限定仅在表的一端进行插入，而在表的另一端进行删除的线性表。</p><p>在队列中，允许插入的一端称为<code>队尾</code>，允许删除的一端称为<code>队头</code>。</p><p>队列又称为“<code>先进先出</code>”或&quot;<code>后进后出</code>&quot;的线性表。</p><p>在队列中，通常用指针<code>front</code>指向队头元素的前一个位置，用<code>rear</code>指向队尾最后一个元素。</p><p><img src="/images/javawz/1587786463729.png" alt="1587786463729"></p><p><br><br><br></p><h3 id="循环队列"><a class="markdownIt-Anchor" href="#循环队列"></a> 循环队列</h3><p><img src="/images/javawz/1587786545701.png" alt="1587786545701"></p><p><img src="/images/javawz/1587786584490.png" alt="1587786584490"></p><p>循环队列元素个数计算:</p><p>循环队列中元素的个数=<code>rear（尾）- front（头）</code>。</p><p><code>rear-front</code>为正数时，便是循环队列的元素个数。</p><p><code>rear-front</code>为负数时,需要再加上循环队列的容量.</p><p><code>rear-front</code>为零时,说明要么队列是空的,要么是满的.</p><p><img src="/images/javawz/1587786836823.png" alt="1587786836823"></p><p><img src="/images/javawz/1587786887422.png" alt="1587786887422"></p><p><img src="/images/javawz/1587786921047.png" alt="1587786921047"></p><p><img src="/images/javawz/1587786948792.png" alt="1587786948792"></p><p><img src="/images/javawz/1587786973763.png" alt="1587786973763"></p><p><img src="/images/javawz/1587787010764.png" alt="1587787010764"></p><p><img src="/images/javawz/1587787058120.png" alt="1587787058120"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;栈和队列&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#栈和队列&quot;&gt;&lt;/a&gt; 栈和队列&lt;/h1&gt;
&lt;h2 id=&quot;栈及其基本运算&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#栈及其基本运算&quot;&gt;&lt;/a&gt; 栈及
      
    
    </summary>
    
      <category term="计算机公共基础" scheme="https://xiaowuyoucy.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%85%AC%E5%85%B1%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>数据结构与算法</title>
    <link href="https://xiaowuyoucy.github.io/2020/04/23/003%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/04/23/003数据结构与算法/</id>
    <published>2020-04-22T17:58:30.000Z</published>
    <updated>2020-04-25T03:16:35.920Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据结构与算法"><a class="markdownIt-Anchor" href="#数据结构与算法"></a> 数据结构与算法</h1><h2 id="算法的概念"><a class="markdownIt-Anchor" href="#算法的概念"></a> 算法的概念</h2><p>解题方案的准确而完整的描述.</p><p>算法:</p><ol><li>运行有限的时间</li><li>有限的存储空间</li><li>得到正确的结果</li></ol><p>算法不等于程序,也不等于计算方法,是两者的结合。</p><p>特征：</p><ol><li>可行性</li><li>确定性（并且在任何条件下，算法都只有一条执行路径）</li><li>有穷性</li><li>拥有足够的情报</li></ol><p>算法的基本结构：</p><p>对数据的运算操作(算数，逻辑)</p><p>算法的控制结构：</p><ol><li>顺序结构</li><li>条件结构（分支结构）</li><li>循环结构</li></ol><p>描述算法：</p><ol><li>传统流程图</li><li>N-S结构化流程图（盒图）</li><li>自然语言</li><li>伪代码</li></ol><p>一个算法可以用三种基本控制结构组合而成</p><h2 id="算法设计方法"><a class="markdownIt-Anchor" href="#算法设计方法"></a> 算法设计方法</h2><ol><li>列举法：列举所有可能</li><li>归纳法：从特殊到一般</li><li>递归法：函数的自调用</li><li>递推法：从条件到结论</li><li>减半递推：分治</li><li>回溯：反证</li></ol><h2 id="算法的复杂度"><a class="markdownIt-Anchor" href="#算法的复杂度"></a> 算法的复杂度</h2><h5 id="算法复杂度可以分为"><a class="markdownIt-Anchor" href="#算法复杂度可以分为"></a> 算法复杂度可以分为：</h5><ol><li>时间复杂度</li><li>空间复杂度</li></ol><h3 id="算法的时间复杂度和时间没有关系"><a class="markdownIt-Anchor" href="#算法的时间复杂度和时间没有关系"></a> 算法的时间复杂度（和时间没有关系）</h3><p>算法的计算工作量： 用算法所执行的基本运算次数来度量。</p><p>基本运算次数：是问题规模的函数</p><p>算法的计算工作量= f ( n )，其中n是问题的规模</p><h5 id="分析算法工作量的方法"><a class="markdownIt-Anchor" href="#分析算法工作量的方法"></a> 分析算法工作量的方法：</h5><ol><li>平均性态（把每次运行程序执行的基本次数平均下来）</li><li>最坏情况复杂性（可能选最小，也可能选最大）</li></ol><h3 id="算法的空间复杂度"><a class="markdownIt-Anchor" href="#算法的空间复杂度"></a> 算法的空间复杂度</h3><p>执行这个算法所需要的存储空间或者内存空间。</p><h2 id="数据结构的基本概念"><a class="markdownIt-Anchor" href="#数据结构的基本概念"></a> 数据结构的基本概念</h2><p>数据元素之间固有的逻辑关系，既数据的逻辑结构</p><p>数据中出现物理两个字,说明数据和计算机中的存放位置或地址有关系</p><h3 id="数据的逻辑结构"><a class="markdownIt-Anchor" href="#数据的逻辑结构"></a> 数据的逻辑结构</h3><p>数据结构是指带有结构的数据元素集合</p><p>结构是指数据元素之间前后件关系</p><h5 id="一个数据结构包含两种信息"><a class="markdownIt-Anchor" href="#一个数据结构包含两种信息"></a> 一个数据结构包含两种信息：</h5><ol><li>数据元素的信息</li><li>数据元素之间的前后件关系。</li></ol><br><p>数据的逻辑结构是指反映数据元素之间逻辑关系的数据结构。</p><h3 id="数据的存储结构"><a class="markdownIt-Anchor" href="#数据的存储结构"></a> 数据的存储结构</h3><p>数据的逻辑结构在计算机存储空间中存放的形式称为存储结构（也称数据的物理结构）</p><h5 id="数据的存储结构存放"><a class="markdownIt-Anchor" href="#数据的存储结构存放"></a> 数据的存储结构存放：</h5><ol><li>数据元素的信息</li><li>数据元素之间的前后件关系</li></ol><br><p>一种数据的逻辑结构,可以拥有多种物理结构（存储结构）</p><p>数据的物理结构不会影响数据本身的逻辑结构</p><p>采用不同的存储结构，则数据处理的效率是不同的</p><h5 id="数据结构的表示"><a class="markdownIt-Anchor" href="#数据结构的表示"></a> 数据结构的表示：</h5><ol><li>二元关系表示</li><li>图形表示</li></ol><br><p>数据结构分为线性结构和非线性结构。</p><p>数据元素有时候也称为节点或结点</p><p>最后一个节点称为叶子节点</p><h3 id="线性结构线性表"><a class="markdownIt-Anchor" href="#线性结构线性表"></a> 线性结构（线性表）：</h3><ol><li>有且只有一个根节点</li><li>有且只有一个叶子节点</li><li>除根节点外，其他节点均只有一个前件（前继）</li><li>除叶子节点外，其他节点均只有一个后件（后继）</li></ol><p>线性表示指n个数据元素的有限序列。</p><p>当n=0时，称为空表</p><h3 id="线性表的顺序存储结构"><a class="markdownIt-Anchor" href="#线性表的顺序存储结构"></a> 线性表的顺序存储结构：</h3><ol><li>存储空间是连续的</li><li>按逻辑顺序依次存放的</li></ol><p><img src="/images/javawz/1587581664058.png" alt="1587581664058"></p><p>在长度为n的线性表顺序存储结构中插入一个数,最坏情况下需要移动n个数</p><p>在长度为n的线性表顺序存储结构中删除一个数,最坏情况下需要移动n-1个数</p><h3 id="考题"><a class="markdownIt-Anchor" href="#考题"></a> 考题</h3><p>算法的空间复杂度与算法所处理的数据存储空间有关。</p><p>设数据集合为D={1,2,3,4,5,6}。</p><p>B=（D,R）中为非线性结构的是 R={（1,2），（2,3），（4,3），(3,5) }</p><p>其中R代表关系</p><p>数据的存储结构会影响算法的效率。</p><p>线性表的顺序存储结构中，其存储空间连续，各个元素所占字节数相同，元素的存储顺序与逻辑顺序一致。</p><p>时间复杂度与所用的计算工具无关。</p><p>算法设计必须考虑算法的复杂度。</p><p>算法必须能在有限个步骤之后终止。</p><p>算法强调动态的执行过程，不同于静态的计算公式。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数据结构与算法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据结构与算法&quot;&gt;&lt;/a&gt; 数据结构与算法&lt;/h1&gt;
&lt;h2 id=&quot;算法的概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#算法的概念&quot;&gt;&lt;/
      
    
    </summary>
    
      <category term="计算机公共基础" scheme="https://xiaowuyoucy.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%85%AC%E5%85%B1%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>计算机硬件系统</title>
    <link href="https://xiaowuyoucy.github.io/2020/04/18/002%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    <id>https://xiaowuyoucy.github.io/2020/04/18/002计算机硬件系统/</id>
    <published>2020-04-18T07:54:42.000Z</published>
    <updated>2020-04-19T18:43:01.225Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机硬件系统"><a class="markdownIt-Anchor" href="#计算机硬件系统"></a> 计算机硬件系统</h1><p>以前冯诺依曼计算机结构以运算器为中心</p><p>现在以存储器为中心</p><p>计算机硬件系统主要包括:</p><ol><li>中央处理器</li><li>内存储器</li><li>输入输出设备</li></ol><p>它们通过总线相连接到一起</p><h5 id="中央处理器"><a class="markdownIt-Anchor" href="#中央处理器"></a> 中央处理器:</h5><ol><li>运算器:对数据进行算术运算符,逻辑运算</li><li>控制器:对指令分析,控制,协调输入输出,对内存访问</li></ol><h5 id="存储器"><a class="markdownIt-Anchor" href="#存储器"></a> 存储器:</h5><ol><li>存储程序和数据</li><li>内存储器</li><li>外存储器</li></ol><h5 id="输入设备"><a class="markdownIt-Anchor" href="#输入设备"></a> 输入设备:</h5><p>将程序和数据输入到计算机中</p><h5 id="输出设备"><a class="markdownIt-Anchor" href="#输出设备"></a> 输出设备:</h5><p>将用户信息(程序或数据)输出到外部输出设备供用户查看.</p><h2 id="中央处理器-2"><a class="markdownIt-Anchor" href="#中央处理器-2"></a> 中央处理器</h2><p>也叫CPU,计算机的核心部件。</p><p>负责执行软件指令将数据加工成信息。</p><p>CPU分为两部分：</p><ol><li>控制器</li><li>运算器（算术逻辑单元）</li></ol><p>它们都包含有寄存器和高速存储区域，用<code>总线连接</code>起来。</p><h5 id="控制器"><a class="markdownIt-Anchor" href="#控制器"></a> 控制器：</h5><p>计算机的控制中心和指挥中心</p><p>对于每个指令，控制单元都要执行4个基本操作</p><ol><li>取指令</li><li>分析指令</li><li>执行指令</li><li>存储结果</li></ol><h5 id="运算器"><a class="markdownIt-Anchor" href="#运算器"></a> 运算器:</h5><p>可以执行算数运算,逻辑运算</p><p>算数运算: +,-,*,/</p><p>逻辑运算: ＞,≥,＜,≤,=,≠</p><h5 id="寄存器"><a class="markdownIt-Anchor" href="#寄存器"></a> 寄存器:</h5><p>提高计算机性能</p><p>高速存储区域</p><p>临时存储数据和指令或内存地址</p><p>寄存器的大小和数量可以决定计算机的性能和速度</p><p>寄存器的类型</p><ol><li>指令寄存器</li><li>地址寄存器</li><li>存储寄存器</li><li>累加寄存器等</li></ol><h5 id="总线"><a class="markdownIt-Anchor" href="#总线"></a> 总线:</h5><p>在CPU内部或CPU和主板中其他部件进行信息传输的电子数据线路</p><p>通道越多,位的传输越快.</p><p>例如32位总线一次可以传输32位数据信息</p><p>CPU品质的高低，是主频和字长</p><p>主时钟：</p><ol><li>控制CPU工作的节拍</li><li>不断产生固定频率的时钟</li><li>主时钟的频率就是主频</li><li>主频越高，运算速度越快</li></ol><p>字长：CPU可以同时处理二进制的位数</p><p>CPU还可以通过总线访问各种输入输出设备</p><br><br><h2 id="计算机的基本工作原理"><a class="markdownIt-Anchor" href="#计算机的基本工作原理"></a> 计算机的基本工作原理</h2><h4 id="计算机指令格式"><a class="markdownIt-Anchor" href="#计算机指令格式"></a> 计算机指令格式</h4><p><img src="/images/javawz/1587317971777.png" alt="1587317971777"></p><p>计算机指令是能够被识别和执行的二进制代码</p><h5 id="指令由两部分组成"><a class="markdownIt-Anchor" href="#指令由两部分组成"></a> 指令由两部分组成：</h5><ol><li>操作码</li><li>操作数（地址码）</li></ol><p>操作码二进制位数决定了最多可以有多少种操作</p><p>操作的最多总数：2<sup>k</sup> ,其中k代表二进制位数</p><p>n种操作至少拥有的位数:[log<sub>2</sub>(n - 1)] + 1 , 其中[ ] 代表取整.</p><h5 id="地址码"><a class="markdownIt-Anchor" href="#地址码"></a> 地址码:</h5><ol><li>操作对象</li><li>操作数</li><li>存储地址</li><li>寄存器</li></ol><h5 id="操作数"><a class="markdownIt-Anchor" href="#操作数"></a> 操作数:</h5><ol><li>源操作数: 本身带有的</li><li>目的操作数: 计算出来的结果</li></ol><br><p>操作数一般称为地址码</p><p>有的指令只有操作码没有地址码,例如暂停指令</p><p>单字节指令:  一个字节的指令</p><p>双字节指令: 两个字节的指令</p><p>操作数和操作码所占的n个字节称为n字节指令</p><p><br><br></p><h4 id="计算机指令的寻址方式"><a class="markdownIt-Anchor" href="#计算机指令的寻址方式"></a> 计算机指令的寻址方式</h4><p>有效地址: 寻址方式和形式地址决定的</p><p>寻址方式: 本条指令的数据地址以及下一条将要执行的指令地址</p><h5 id="寻址方式分两种"><a class="markdownIt-Anchor" href="#寻址方式分两种"></a> 寻址方式分两种:</h5><ol><li>指令寻址</li><li>数据寻址</li></ol><h5 id="指令寻址"><a class="markdownIt-Anchor" href="#指令寻址"></a> 指令寻址:</h5><ol><li>顺序寻址</li><li>跳跃寻址</li></ol><h5 id="数据寻址"><a class="markdownIt-Anchor" href="#数据寻址"></a> 数据寻址:</h5><ol><li>立即寻址</li><li>直接寻址</li><li>隐含寻址</li><li>间接寻址</li><li>寄存器寻址等</li></ol><p><br><br></p><h4 id="计算机指令系统"><a class="markdownIt-Anchor" href="#计算机指令系统"></a> 计算机指令系统</h4><p><code>指令系统</code>: 本计算机所有指令的集合</p><h5 id="指令系统共有的功能"><a class="markdownIt-Anchor" href="#指令系统共有的功能"></a> 指令系统共有的功能:</h5><ol><li>数据传送指令</li><li>数据处理指令</li><li>程序控制指令</li><li>输入/输出指令</li><li>其他指令(对计算机的硬件进行管理、堆栈操作等)<br><br></li></ol><h4 id="计算机执行指令的基本过程"><a class="markdownIt-Anchor" href="#计算机执行指令的基本过程"></a> 计算机执行指令的基本过程</h4><p>程序是解决实际问题的计算机指令的集合</p><p><code>程序计数器</code>：决定了指令的执行顺序，某个程序被载入内存的时候，会将程序的第一条指令的内存单元地址赋值给程序计数器。</p><h5 id="执行程序指令的过程"><a class="markdownIt-Anchor" href="#执行程序指令的过程"></a> 执行程序指令的过程</h5><ol><li>取指令</li><li>分析指令</li><li>执行指令</li><li>修改程序计数器</li></ol><p><code>指令周期</code>：完成一条指令所费的时间，越短越快</p><h4 id="指令执行的时序"><a class="markdownIt-Anchor" href="#指令执行的时序"></a> 指令执行的时序</h4><p><code>机器周期</code>：在内存中读取一个指令字的最短时间</p><p>取指令必须占用一个机器周期</p><p><br><br></p><h2 id="存储器-2"><a class="markdownIt-Anchor" href="#存储器-2"></a> 存储器</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;计算机硬件系统&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#计算机硬件系统&quot;&gt;&lt;/a&gt; 计算机硬件系统&lt;/h1&gt;
&lt;p&gt;以前冯诺依曼计算机结构以运算器为中心&lt;/p&gt;
&lt;p&gt;现在以存储器为中心&lt;/p&gt;
&lt;p&gt;计算机硬件系统主要包括:&lt;/
      
    
    </summary>
    
      <category term="计算机公共基础" scheme="https://xiaowuyoucy.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%85%AC%E5%85%B1%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>计算机的发展历程</title>
    <link href="https://xiaowuyoucy.github.io/2020/04/18/001%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%8F%91%E5%B1%95%E5%8E%86%E7%A8%8B/"/>
    <id>https://xiaowuyoucy.github.io/2020/04/18/001计算机的发展历程/</id>
    <published>2020-04-18T06:53:12.000Z</published>
    <updated>2020-04-18T07:53:21.591Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><h2 id="计算机的发展历程"><a class="markdownIt-Anchor" href="#计算机的发展历程"></a> 计算机的发展历程</h2><h3 id="eniac"><a class="markdownIt-Anchor" href="#eniac"></a> ENIAC:</h3><p>1946年</p><p>美国宾夕法尼亚大学</p><p>18000个电子管,1500个继电器</p><p>30吨</p><p>170㎡</p><p>耗电140kW</p><p>每秒加法计算5000次</p><p>发展分为4个阶段:</p><ol><li>电子管计算时代</li><li>晶体管计算机时代</li><li>集成电路计算机时代</li><li>大规模集成电路计算机时代</li></ol><h2 id="计算机体系结构"><a class="markdownIt-Anchor" href="#计算机体系结构"></a> 计算机体系结构</h2><p>存储程序控制的计算机结构.</p><p>EDSAC是第一台存储程序的计算机</p><p>存储程序思想是冯诺依曼提出的,概括了:</p><ol><li>计算机(硬件)由<code>运算器</code>,<code>存储器</code>,<code>控制器</code>,<code>输入输出设备</code>五大基本部件组成.</li><li>计算机内部采用<code>二进制</code>来表示<code>指令</code>和<code>数据</code></li><li>将编好的程序和源数据放在存储器中,再启动计算机工作.</li></ol><p>非冯诺依曼结构计算机:</p><ol><li>数据流计算机</li><li>归约计算机</li><li>智能计算机</li></ol><h2 id="计算机系统基本组成"><a class="markdownIt-Anchor" href="#计算机系统基本组成"></a> 计算机系统基本组成</h2><p>分为<code>硬件系统</code>和<code>软件系统</code>.</p><p>计算机软件: 在硬件设备上运行的各种<code>程序</code>、<code>数据</code>。</p><p>程序：指挥计算机完成各种任务的<code>指令集合</code>。</p><p>为了方便阅读和修改程序，会提供关于程序的说明和资料，称为<code>文档</code></p><p><code>裸机</code>（硬件系统），只能识别机器代码</p><p>硬件系统和软件系统是相互依赖，不可分割的。</p><p>软件系统：运行，管理，维护计算机编制的程序，数据和文档的总称。</p><h5 id="计算机软件分为"><a class="markdownIt-Anchor" href="#计算机软件分为"></a> 计算机软件分为：</h5><p><code>系统软件</code>（控制，协调计算机，外部设备，应用软件开发和运行）：主要负责调度，监控，维护计算机系统</p><ol><li><code>操作系统</code></li><li>语言处理系统</li><li>数据库管理系统</li><li>系统辅助处理程序</li></ol><p><code>应用软件</code></p><ol><li>信息管理软件</li><li>辅助设计软件</li><li>文字处理软件</li><li>图形软件</li><li>各种程序包</li></ol><p><img src="/images/javawz/1587196283812.png" alt="1587196283812"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;h2 id=&quot;计算机的发展历程&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#计算机的发展历程&quot;&gt;&lt;/a&gt; 计算机的发展
      
    
    </summary>
    
      <category term="计算机公共基础" scheme="https://xiaowuyoucy.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%85%AC%E5%85%B1%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>模拟斗地主洗牌发牌(有序版本)</title>
    <link href="https://xiaowuyoucy.github.io/2020/04/06/java00195%E6%A8%A1%E6%8B%9F%E6%96%97%E5%9C%B0%E4%B8%BB%E6%B4%97%E7%89%8C%E5%8F%91%E7%89%8C/"/>
    <id>https://xiaowuyoucy.github.io/2020/04/06/java00195模拟斗地主洗牌发牌/</id>
    <published>2020-04-05T16:52:57.000Z</published>
    <updated>2020-04-05T16:57:29.087Z</updated>
    
    <content type="html"><![CDATA[<h1 id="模拟斗地主洗牌发牌有序版本"><a class="markdownIt-Anchor" href="#模拟斗地主洗牌发牌有序版本"></a> 模拟斗地主洗牌发牌(有序版本)</h1><p><img src="/images/javawz/1586105843538.png" alt="1586105843538"></p><p>按照斗地主的规则，完成洗牌发牌的动作。</p><p><img src="/images/javawz/%E6%96%97%E5%9C%B0%E4%B8%BB.png" alt></p><h3 id="具体规则"><a class="markdownIt-Anchor" href="#具体规则"></a> 具体规则：</h3><ol><li>组装54张扑克牌将</li><li>54张牌顺序打乱</li><li>三个玩家参与游戏，三人交替摸牌，每人17张牌，最后三张留作底牌。</li><li>查看三人各自手中的牌（按照牌的大小排序）、底牌</li></ol><blockquote><p>规则：手中扑克牌从大到小的摆放顺序：大王,小王,2,A,K,Q,J,10,9,8,7,6,5,4,3</p></blockquote><h3 id="案例需求分析"><a class="markdownIt-Anchor" href="#案例需求分析"></a> 案例需求分析</h3><ol><li>准备牌：</li></ol><p>完成数字与纸牌的映射关系：</p><p>使用双列Map(HashMap)集合，完成一个数字与字符串纸牌的对应关系(相当于一个字典)。</p><ol start="2"><li>洗牌：</li></ol><p>通过数字完成洗牌发牌</p><ol start="3"><li>发牌：</li></ol><p>将每个人以及底牌设计为ArrayList&lt;String&gt;,将最后3张牌直接存放于底牌，剩余牌通过对3取模依次发牌。</p><p>存放的过程中要求数字大小与斗地主规则的大小对应。</p><p>将代表不同纸牌的数字分配给不同的玩家与底牌。</p><ol start="4"><li>看牌：</li></ol><p>通过Map集合找到对应字符展示。</p><p>通过查询纸牌与数字的对应关系，由数字转成纸牌字符串再进行展示。</p><p><img src="/images/javawz/%E6%96%97%E5%9C%B0%E4%B8%BB%E5%88%86%E6%9E%90.png" alt></p><h2 id><a class="markdownIt-Anchor" href="#"></a> </h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.demo06.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    斗地主综合案例:有序版本</span></span><br><span class="line"><span class="comment">    1.准备牌</span></span><br><span class="line"><span class="comment">    2.洗牌</span></span><br><span class="line"><span class="comment">    3.发牌</span></span><br><span class="line"><span class="comment">    4.排序</span></span><br><span class="line"><span class="comment">    5.看牌</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DouDiZhu</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.准备牌</span></span><br><span class="line">        <span class="comment">//创建一个Map集合,存储牌的索引和组装好的牌</span></span><br><span class="line">        HashMap&lt;Integer,String&gt; poker = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//创建一个List集合,存储牌的索引</span></span><br><span class="line">        ArrayList&lt;Integer&gt; pokerIndex = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//定义两个集合,存储花色和牌的序号</span></span><br><span class="line">        List&lt;String&gt; colors = List.of(<span class="string">"♠"</span>, <span class="string">"♥"</span>, <span class="string">"♣"</span>, <span class="string">"♦"</span>);</span><br><span class="line">        List&lt;String&gt; numbers = List.of(<span class="string">"2"</span>, <span class="string">"A"</span>, <span class="string">"K"</span>, <span class="string">"Q"</span>, <span class="string">"J"</span>, <span class="string">"10"</span>, <span class="string">"9"</span>, <span class="string">"8"</span>, <span class="string">"7"</span>, <span class="string">"6"</span>, <span class="string">"5"</span>, <span class="string">"4"</span>, <span class="string">"3"</span>);</span><br><span class="line">        <span class="comment">//把大王和小王存储到集合中</span></span><br><span class="line">        <span class="comment">//定义一个牌的索引</span></span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        poker.put(index,<span class="string">"大王"</span>);</span><br><span class="line">        pokerIndex.add(index);</span><br><span class="line">        index++;</span><br><span class="line">        poker.put(index,<span class="string">"小王"</span>);</span><br><span class="line">        pokerIndex.add(index);</span><br><span class="line">        index++;</span><br><span class="line">        <span class="comment">//循环嵌套遍历两个集合,组装52张牌,存储到集合中</span></span><br><span class="line">        <span class="keyword">for</span> (String number : numbers) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String color : colors) &#123;</span><br><span class="line">                poker.put(index,color+number);</span><br><span class="line">                pokerIndex.add(index);</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//System.out.println(poker);</span></span><br><span class="line">        <span class="comment">//System.out.println(pokerIndex);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            2.洗牌</span></span><br><span class="line"><span class="comment">            使用Collections中的方法shuffle(List)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Collections.shuffle(pokerIndex);</span><br><span class="line">        <span class="comment">//System.out.println(pokerIndex);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            3.发牌</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//定义4个集合,存储玩家牌的索引,和底牌的索引</span></span><br><span class="line">        ArrayList&lt;Integer&gt; player01 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        ArrayList&lt;Integer&gt; player02 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        ArrayList&lt;Integer&gt; player03 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        ArrayList&lt;Integer&gt; diPai = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//遍历存储牌索引的List集合,获取每一个牌的索引</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;pokerIndex.size() ; i++) &#123;</span><br><span class="line">            Integer in = pokerIndex.get(i);</span><br><span class="line">            <span class="comment">//先判断底牌</span></span><br><span class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">51</span>)&#123;</span><br><span class="line">                <span class="comment">//给底牌发牌</span></span><br><span class="line">                diPai.add(in);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i%<span class="number">3</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//给玩家1发牌</span></span><br><span class="line">                player01.add(in);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i%<span class="number">3</span>==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//给玩家2发牌</span></span><br><span class="line">                player02.add(in);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i%<span class="number">3</span>==<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="comment">//给玩家3发牌</span></span><br><span class="line">                player03.add(in);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            4.排序</span></span><br><span class="line"><span class="comment">            使用Collections中的方法sort(List)</span></span><br><span class="line"><span class="comment">            默认是升序排序</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Collections.sort(player01);</span><br><span class="line">        Collections.sort(player02);</span><br><span class="line">        Collections.sort(player03);</span><br><span class="line">        Collections.sort(diPai);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            5.看牌</span></span><br><span class="line"><span class="comment">            调用看牌的方法</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        lookPoker(<span class="string">"刘德华"</span>,poker,player01);</span><br><span class="line">        lookPoker(<span class="string">"周润发"</span>,poker,player02);</span><br><span class="line">        lookPoker(<span class="string">"周星驰"</span>,poker,player03);</span><br><span class="line">        lookPoker(<span class="string">"底牌"</span>,poker,diPai);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        定义一个看牌的方法,提高代码的复用性</span></span><br><span class="line"><span class="comment">        参数:</span></span><br><span class="line"><span class="comment">            String name:玩家名称</span></span><br><span class="line"><span class="comment">            HashMap&lt;Integer,String&gt; poker:存储牌的poker集合</span></span><br><span class="line"><span class="comment">            ArrayList&lt;Integer&gt; list:存储玩家和底牌的List集合</span></span><br><span class="line"><span class="comment">        查表法:</span></span><br><span class="line"><span class="comment">             遍历玩家或者底牌集合,获取牌的索引</span></span><br><span class="line"><span class="comment">             使用牌的索引,去Map集合中,找到对应的牌</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">lookPoker</span><span class="params">(String name,HashMap&lt;Integer,String&gt; poker,ArrayList&lt;Integer&gt; list)</span></span>&#123;</span><br><span class="line">        <span class="comment">//输出玩家名称,不换行</span></span><br><span class="line">        System.out.print(name+<span class="string">":"</span>);</span><br><span class="line">        <span class="comment">//遍历玩家或者底牌集合,获取牌的索引</span></span><br><span class="line">        <span class="keyword">for</span> (Integer key : list) &#123;</span><br><span class="line">            <span class="comment">//使用牌的索引,去Map集合中,找到对应的牌</span></span><br><span class="line">            String value = poker.get(key);</span><br><span class="line">            System.out.print(value+<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();<span class="comment">//打印完每一个玩家的牌,换行</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;模拟斗地主洗牌发牌有序版本&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#模拟斗地主洗牌发牌有序版本&quot;&gt;&lt;/a&gt; 模拟斗地主洗牌发牌(有序版本)&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/images/javawz/158610584353
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
</feed>
