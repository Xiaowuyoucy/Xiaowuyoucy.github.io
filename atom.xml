<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YanChen</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiaowuyoucy.github.io/"/>
  <updated>2020-02-04T00:36:20.957Z</updated>
  <id>https://xiaowuyoucy.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JDK9的JShell-编译器的两点优化</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00006JDK9%E7%9A%84JShell-%E7%BC%96%E8%AF%91%E5%99%A8%E7%9A%84%E4%B8%A4%E7%82%B9%E4%BC%98%E5%8C%96/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00006JDK9的JShell-编译器的两点优化/</id>
    <published>2020-02-04T00:17:40.000Z</published>
    <updated>2020-02-04T00:36:20.957Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jdk9的jshell"><a class="markdownIt-Anchor" href="#jdk9的jshell"></a> JDK9的JShell</h1><p>什么时候会用到 JShell 工具呢，当我们编写的代码非常少的时候，而又不愿意编写类，main方法，也不愿意去编译和运 行，这个时候可以使用JShell工具。 启动JShell工具，在DOS命令行直接输入JShell命令。</p><p>打开cmd</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200204082417.png" alt></p><p>​</p><p>输入jshell</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200204082552.png" alt></p><p>​</p><p>退出/exit</p><p><img src="/images/javawz/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20200204082647.png" alt></p><h1 id="编译器的两点优化"><a class="markdownIt-Anchor" href="#编译器的两点优化"></a> 编译器的两点优化</h1><p>byte,short,char类型右侧没有超过本身范围,会自动强制转换类型<br>byte a = 12<br>常量优化<br>1 + 1常量表达式 在编译时会计算结果,而不是在运行时计算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test010</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span> a = <span class="number">12</span> <span class="comment">//隐式的把12从int类型转换为byte类型</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jdk9的jshell&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#jdk9的jshell&quot;&gt;&lt;/a&gt; JDK9的JShell&lt;/h1&gt;
&lt;p&gt;什么时候会用到 JShell 工具呢，当我们编写的代码非常少的时候，而又不愿意编写类，ma
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>java方法</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00005%E6%96%B9%E6%B3%95/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00005方法/</id>
    <published>2020-02-04T00:02:04.000Z</published>
    <updated>2020-02-04T00:15:05.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h1><h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h4><p>​public static void 方法名称(){语句块}</p><p>​方法的定义是无序性的<br>​不能嵌套定义方法</p><h4 id="命名方法"><a class="markdownIt-Anchor" href="#命名方法"></a> 命名方法</h4><p>​小驼峰式法</p><h4 id="方法调用"><a class="markdownIt-Anchor" href="#方法调用"></a> 方法调用</h4><h5 id="格式"><a class="markdownIt-Anchor" href="#格式"></a> 格式</h5><p>​方法名称();</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class test009 &#123;</span><br><span class="line">    </span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(intAdd(10,20));//方法调用</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //方法定义</span><br><span class="line">    public static int intAdd(int a,int b)</span><br><span class="line">    &#123;</span><br><span class="line">        return a + b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#方法&quot;&gt;&lt;/a&gt; 方法&lt;/h1&gt;
&lt;h4 id=&quot;定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#定义&quot;&gt;&lt;/a&gt; 定义&lt;/h4&gt;
&lt;p&gt;​		publ
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>java运算符</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00004java%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00004java运算符/</id>
    <published>2020-02-03T23:09:34.000Z</published>
    <updated>2020-02-04T00:02:38.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="运算符"><a class="markdownIt-Anchor" href="#运算符"></a> 运算符</h1><h3 id="基本运算符"><a class="markdownIt-Anchor" href="#基本运算符"></a> 基本运算符</h3><ul><li><h4 id><a class="markdownIt-Anchor" href="#"></a> +</h4></li><li><h4 id="-"><a class="markdownIt-Anchor" href="#-"></a> -</h4></li><li><h4 id="-2"><a class="markdownIt-Anchor" href="#-2"></a> *</h4></li><li><h4 id="-3"><a class="markdownIt-Anchor" href="#-3"></a> /</h4></li><li><h4 id="-4"><a class="markdownIt-Anchor" href="#-4"></a> %</h4></li></ul><h3 id="自增自减"><a class="markdownIt-Anchor" href="#自增自减"></a> 自增自减</h3><ul><li><h4 id="-5"><a class="markdownIt-Anchor" href="#-5"></a> –</h4></li><li><h4 id="-6"><a class="markdownIt-Anchor" href="#-6"></a> ++</h4></li></ul><h3 id="复合运算符"><a class="markdownIt-Anchor" href="#复合运算符"></a> 复合运算符</h3><ul><li><h4 id="-7"><a class="markdownIt-Anchor" href="#-7"></a> +=</h4></li><li><h4 id="--2"><a class="markdownIt-Anchor" href="#--2"></a> -=</h4></li><li><h4 id="-8"><a class="markdownIt-Anchor" href="#-8"></a> *=</h4></li><li><h4 id="-9"><a class="markdownIt-Anchor" href="#-9"></a> /=</h4></li><li><h4 id="-10"><a class="markdownIt-Anchor" href="#-10"></a> %=</h4><p>默认会强制类型转换</p></li></ul><p>类型不同运算时,返回的结果为较大范围的类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test007</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>,b = <span class="number">20</span>,c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        c = a + b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        c = a - b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        </span><br><span class="line">        c = a * b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        c = a / b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line"></span><br><span class="line">        c = a % b;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">        </span><br><span class="line">        c += a / a; <span class="comment">// c = c + (a / a)</span></span><br><span class="line">        System.out.println(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="string-字符串类型"><a class="markdownIt-Anchor" href="#string-字符串类型"></a> String 字符串类型</h3><h5 id="string-变量名"><a class="markdownIt-Anchor" href="#string-变量名"></a> String 变量名</h5><p>字符串 + 字符串 = 拼接字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test008</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String      str = <span class="string">"abc"</span>;</span><br><span class="line">        System.out.println(str + <span class="string">"efg"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="比较运算符"><a class="markdownIt-Anchor" href="#比较运算符"></a> 比较运算符</h3><ul><li><h4 id="大于"><a class="markdownIt-Anchor" href="#大于"></a> &gt;　　　大于</h4></li><li><h4 id="小于"><a class="markdownIt-Anchor" href="#小于"></a> &lt;　　　小于</h4></li><li><h4 id="等于"><a class="markdownIt-Anchor" href="#等于"></a> =　　　等于</h4></li><li><h4 id="小于等于"><a class="markdownIt-Anchor" href="#小于等于"></a> &lt;=　　小于等于</h4></li><li><h4 id="等于等于"><a class="markdownIt-Anchor" href="#等于等于"></a> &gt;=　　等于等于</h4></li><li><h4 id="等于-2"><a class="markdownIt-Anchor" href="#等于-2"></a> ==　　等于</h4></li><li><h4 id="不等于"><a class="markdownIt-Anchor" href="#不等于"></a> !=　　不等于</h4></li></ul><p>运算结果都是布尔值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test008</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> isTrue;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">100</span>,b = <span class="number">99</span>;</span><br><span class="line">        isTrue = a &gt; b;</span><br><span class="line">        System.out.println(isTrue);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a class="markdownIt-Anchor" href="#逻辑运算符"></a> 逻辑运算符</h3><ul><li><h5 id="与或非"><a class="markdownIt-Anchor" href="#与或非"></a> &amp;&amp;(与),||(或),!(非)</h5><ul><li>&amp;&amp; 两个条件为真,结果才为真</li><li>||  只要有一个条件为真,结果就为真</li><li>! 真就是假,假就是真</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test008</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> isTrue;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">100</span>,b = <span class="number">99</span>,c = <span class="number">101</span>;</span><br><span class="line">        isTrue = a &gt; b &amp;&amp; a &lt; c;</span><br><span class="line">        System.out.println(isTrue);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三元运算符"><a class="markdownIt-Anchor" href="#三元运算符"></a> 三元运算符</h3><ul><li><h5 id="变量名-条件判断-表达式a-表达式b"><a class="markdownIt-Anchor" href="#变量名-条件判断-表达式a-表达式b"></a> 变量名 = 条件判断 ? 表达式A :表达式B</h5><ul><li>​条件为真返回表达式A,否则返回表达式B</li><li>​两个表达式类型要和变量类型一致</li><li>​运算结果必须被使用</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test008</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">100</span>,b = <span class="number">99</span>,c;</span><br><span class="line">        </span><br><span class="line">        c = (a &gt; b)? a : b;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;运算符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#运算符&quot;&gt;&lt;/a&gt; 运算符&lt;/h1&gt;
&lt;h3 id=&quot;基本运算符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基本运算符&quot;&gt;&lt;/a&gt; 基本运算符&lt;/h3
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>ASCII码-Unicode码</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00003ASCII%E7%A0%81-Unicode%E7%A0%81/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00003ASCII码-Unicode码/</id>
    <published>2020-02-03T22:26:00.000Z</published>
    <updated>2020-02-03T23:07:54.372Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ascii码"><a class="markdownIt-Anchor" href="#ascii码"></a> ASCII码</h1><p>从0到255都是ASCLL码<br>美国信息交换标准代码(American Standard Code For Information Interchange)</p><h1 id="unicode"><a class="markdownIt-Anchor" href="#unicode"></a> Unicode</h1><p>Unicode 编码包含 ASCII<br>前面127的完全一样<br>称为万国码</p><p>Unicode（统一码、万国码、单一码）于1990年开始研发，1994年正式公布，是计算机领域里一项业界标准，包括字符集，编码方案等。Unicode是为了解决传统字符编码方案的局限而产生的，为每种语言中的每个字符都设定了统一唯一的二进制编码，以实现跨语言、跨平台进行文本转换、处理的要求。</p><p>计算机在设计时采用8个比特(bit)作为一个字节(byte)，所以一个字节最多能表示256个字符，早期对于使用英文的西方国家来说，一个字节可以存储大小写英文字母、数学和一些符号，因此使用一个字节来制作码表（ASCII）。后来计算机传到了其他的国家，很多国家都是使用自己的语言，比如中文、日文、韩文…语言复杂了，为了解决这个问题，每个国家制定自己的码表，中国在1980年便制定了GB2312汉字编码字符集，汉字比英文多很多，一个字节明显不够用，所有就使用2个字节来编码。然而不同国家所定义的字符编码虽然可以使用，但是在不同的国家间却经常出现不兼容的情况。如果电脑想处理多语言环境（使用中文或其他语言）可能存在无法同时支持多语言环境。</p><p>为了统一所有文字的编码，产生了Unicode,把所有语言的都统一到一套编码里，这样就不会乱码了。</p><p>在表示Unicode字符时，通常会用U+然后紧跟一组16进制的数字表示一个字符，在基本多文种平面（第零平面）Basic MultilingualPlane（BMP）里所有的字符都使用4位16进制表示。编码从U+0000到U+FFFF,共支持6万多个字符，在BMP以外的字符则需要使用5位或者6位16进制来表示。</p><p>目前Unicode字符分为17组编排，0x0000至0x10FFFF,每组称为平面（Plane）,每个面拥有65536个码位，共1114112个。</p><p>Unicode就像一张表，包所有的字符都编写到表中，每一个字符对应一个数字，称为码点（code point）,这个数字一般不直接使用，通过不同的编码方式来使用。</p><p>UTF-8、UTF-16、UTF-32就是将数字转换到程序数据的编码方案。UTF是“UnicodeTransformation Format”的缩写，可以翻译成Unicode字符集转换格式，即怎样将Unicode定义的数字转换成程序数据。</p><h5 id="utf-8"><a class="markdownIt-Anchor" href="#utf-8"></a> UTF-8</h5><p>UTF-8是以字节位单位对Unicode编码，第0-127位字符使用1个字节来表示，和ASCII编码相同，从128号开始的字符使用2、3、4位字节来表，UTF-8又被称为可变长编码。</p><p>UTF-8编码中，使用的是变成的字节序列表示字符，字符对应的代码点（code point）可能使用的是1-4个字节，这样一个字节就是一个代码单元。一个代码点（code point）可能由1-4个代码单元（code unit）组成。</p><table><thead><tr><th>十进制</th><th>Unicode编码</th><th>UTF-8字节流</th></tr></thead><tbody><tr><td>0-127位</td><td>0x000000-0x00007F</td><td>0xxxxxxx(7位)</td></tr><tr><td>128-2047位</td><td>0x000080-0x0007FF</td><td>110xxxxx 10xxxxxx（11位）</td></tr><tr><td>2048-65535位</td><td>0x000800-0x00FFFF</td><td>1110xxxx 10xxxxxx 10xxxxxx(16位)</td></tr><tr><td>65536-1114111位</td><td>0x010000-0x10FFFF</td><td>11110xxx 10xxxxxx 10xxxxxx 10xxxxxx(21位)</td></tr></tbody></table><p>比如：“汉”在Unicode中的编码为0x6C49,在表格中的第三行，使用模板为：1110xxxx 10xxxxxx10xxxxxx。将0x6C49转换成二进制：0110 1100 0100 1001，将模板中的x依次替换<span style="color:red"><strong>1110</strong></span>0110 <span style="color:red"><strong>10</strong></span>110001 <span style="color:red"><strong>10</strong></span>001001，即E6 B1 89。</p><h5 id="utf-16"><a class="markdownIt-Anchor" href="#utf-16"></a> UTF-16</h5><p>UTF-16也是可变长度编码，使用2个或者4个字节来存储字符，但是会浪费存储空间。</p><p>UTF-16编码中，字符对应的代码点（code point）可能使用的是2或4个字节，因此2个字节就是一个代码单元（code unit）,一个代码点（codepoint）可由1个或者2个代码单元（code unit）组成。</p><table><thead><tr><th>十进制</th><th>Unicode编码</th><th>UTF-16字节流</th></tr></thead><tbody><tr><td>0-65535位</td><td>0x000000-0x00FFFF</td><td>xxxxxxxx  xxxxxxxx(16位)</td></tr><tr><td>65536-1114111位</td><td>0x010000-0x10FFFF</td><td>110110yy yyyyyyyy  110111xx xxxxxxxx(20位)</td></tr></tbody></table><p>平面0有一个专用区：0xE000-0xF8FF，有6400个码位。<span style="color:red"><strong>平面0</strong></span>的0xD800-0xDFFF，共2048个码位，是一个被称作代理区（Surrogate）的特殊区域。代理区的目的用两个UTF-16字符表示BMP以外的字符。所有大于0x00FFFF的码需要使用代理区的码点。</p><p>为了将一个16位无符号整数的UTF-16编码与二个16位无符号整数的UTF-16编码区分开来，Unicode编码的设计者将0xD800-0xDFFF保留下来，并称为代理区（Surrogate）：</p><table><thead><tr><th>十进制</th><th>Unicode编码</th><th>说明</th><th>说明</th></tr></thead><tbody><tr><td>55296-56191</td><td>0xD800－0xDB7F（896个）</td><td>High Surrogates</td><td>高位替代</td></tr><tr><td>56192-56913</td><td>0xDB80－0xDBFF（128个）</td><td>High Private Use  Surrogates</td><td>高位专用替代</td></tr><tr><td>56320-57343</td><td>0xDC00－0xDFFF（1024个）</td><td>Low Surrogates</td><td>低位替代</td></tr></tbody></table><p>增补的16个平面（第2平面-第17平面），范围为：0x010000-0x10FFFF，需要使用2个代理码元表示，第一个码元为0xD800-0xDBFF(高位)范围是:<span style="color:red"><strong>110110</strong></span>00 00000000到<span style="color:red"><strong>110110</strong></span>11 11111111，第二个码元为0xDC00－0xDFFF（低位）范围是：<span style="color:red"><strong>110111</strong></span>00 00000000到<span style="color:red"><strong>110111</strong></span>11 11111111。</p><p>目前Unicode最大的码位是0x10FFFF，减去0x010000后最大值为0xFFFFF，完全可以用20位来表示。</p><p>把Unicode编码记作U，如果U≥0x10000，我们先计算U’=U-0x10000，然后将U’写成二进制形式：yyyy yyyy yyxx xxxx xxxx，U的UTF-16编码（二进制）就是：110110yyyyyyyyyy110111xxxxxxxxxx</p><p>比如：Unicode编码0x20C30，减去0x10000后，得到0x10C30，写成二进制是：0001 0000 1100 0011 0000。用前10位依次替代模板中的y，用后10位依次替代模板中的x，就得到：</p><p><span style="color:red"><strong>110110</strong></span>0001000011 <span style="color:red"><strong>110111</strong></span>0000110000，即0xD8430xDC30。</p><h5 id="utf-32"><a class="markdownIt-Anchor" href="#utf-32"></a> UTF-32</h5><p>UTF-32编码以32位无符号整数为单位。Unicode的UTF-32编码就是其对应的32位无符号整数。</p><p>UTF-32编码，一个代码点对应4个字节，因此4个字节就是一个代码单元（codeunit）。</p><table><thead><tr><th>十进制</th><th>Unicode编码</th><th>UTF-32字节流</th></tr></thead><tbody><tr><td>0-111411位</td><td>0x000000-0x10FFFF</td><td>xxxxxxxx xxxxxxxx  xxxxxxxx xxxxxxxx (32位)</td></tr></tbody></table><p>比如：编码0x6C49使用UTF-32编码其结果为：0x00006C49。</p><h5 id="字节序"><a class="markdownIt-Anchor" href="#字节序"></a> 字节序</h5><p>字节序有两种，分别是大端（Big Endian, BE）和小段（Little Endian, LE）。根据字节序的不同，UTF-16实现为UTF-16BE和UTF-16LE，UTF-32实现为UTF-32BE和UTF-32LE。</p><p>根据字节序的不同，UTF-16可被实现为UTF-16LE或UTF-16BE，UTF-32可被实现为UTF-32LE或UTF-32BE。</p><table><thead><tr><th><strong>Unicode编码</strong></th><th><strong>UTF-16LE</strong></th><th><strong>UTF-16BE</strong></th><th><strong>UTF32-LE</strong></th><th><strong>UTF32-BE</strong></th></tr></thead><tbody><tr><td>0x006C49</td><td>49 6C</td><td>6C 49</td><td>49 6C 00 00</td><td>00 00 6C 49</td></tr><tr><td>0x020C30</td><td>43 D8 30 DC</td><td>D8 43 DC 30</td><td>30 0C 02 00</td><td>00 02 0C 30</td></tr></tbody></table><p>Unicode标准建议用BOM（Byte Order Mark）来区分字节序，即在传输字节流前，先传输被作为BOM的字符“零宽无中断空格”。这个字符的编码是FEFF，而反过来的FFFE（UTF-16）和FFFE0000（UTF-32）在Unicode中都是未定义的码位，不应该出现在实际传输中。</p><p>UTF编码的BOM：</p><table><thead><tr><th><strong>UTF编码</strong></th><th><strong>Byte Order Mark  (BOM)</strong></th></tr></thead><tbody><tr><td>UTF-8 without BOM</td><td>无</td></tr><tr><td>UTF-8 with BOM</td><td>EF BB BF</td></tr><tr><td>UTF-16LE</td><td>FF FE</td></tr><tr><td>UTF-16BE</td><td>FE FF</td></tr><tr><td>UTF-32LE</td><td>FF FE 00 00</td></tr><tr><td>UTF-32BE</td><td>00 00 FE FF</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ascii码&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#ascii码&quot;&gt;&lt;/a&gt; ASCII码&lt;/h1&gt;
&lt;p&gt;从0到255都是ASCLL码&lt;br&gt;
美国信息交换标准代码(American Standard Code For Inf
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA 中自定义模板代码的缩写</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/IntelliJ-IDEA-%E4%B8%AD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF%E4%BB%A3%E7%A0%81%E7%9A%84%E7%BC%A9%E5%86%99/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/IntelliJ-IDEA-中自定义模板代码的缩写/</id>
    <published>2020-02-03T21:58:59.000Z</published>
    <updated>2020-02-03T22:10:30.936Z</updated>
    
    <content type="html"><![CDATA[<h1 id="intellij-idea-中自定义模板代码的缩写"><a class="markdownIt-Anchor" href="#intellij-idea-中自定义模板代码的缩写"></a> IntelliJ IDEA 中自定义模板代码的缩写</h1><h3 id="方法一新建-live-template"><a class="markdownIt-Anchor" href="#方法一新建-live-template"></a> 方法一：新建 Live Template</h3><p>step1.</p><p>点击 File – Setting</p><p><img src="/images/javawz/ide/1203928-20190227160616868-1557469800.png" alt></p><p>step2.<br>选择 Live Template，点击右侧的+号，选择 Template Group</p><p><img src="/images/javawz/ide/1203928-20190227160645143-961396544.png" alt></p><p>step3.<br>输入自定义的名称，然后点击OK。</p><p><img src="/images/javawz/ide/1203928-20190227160709473-566828200.png" alt></p><p>step4.<br>选中刚创建的 Template Group，再次点击右侧的+号，选择Live Template</p><p><img src="/images/javawz/ide/1203928-20190227160722176-1574384979.png" alt></p><p>step5.<br>填入缩写词、描述、模版内容、生效文件范围等</p><p>配置模板时，变量名以$ $包围的字符的形式出现,调用的方法也是先以变量形式出现，写完模板信息后去编辑变量(Edit variables)。</p><p>$END$是一个特殊的预定义变量，表示光标最后跳转的位置。</p><p><img src="/images/javawz/ide/1203928-20190227160737420-1450085881.png" alt></p><p>step6.<br>点击右边的Edit variables（这个只有在使用了预定义函数的时候才能点击和设置）</p><p><img src="/images/javawz/ide/1203928-20190227160755983-587139911.png" alt></p><p>step7.<br>点击 Apply ，OK，完成！</p><h3 id="方法二使用-idea-自带的-live-template"><a class="markdownIt-Anchor" href="#方法二使用-idea-自带的-live-template"></a> 方法二：使用 IDEA 自带的 Live Template</h3><p>psvm 生成 main 方法<br>fori 生成 for 循环<br>sout 生成 System.out.println();<br>…</p><h3 id="方法三修改-idea-自带的-live-template"><a class="markdownIt-Anchor" href="#方法三修改-idea-自带的-live-template"></a> 方法三：修改 IDEA 自带的 Live Template</h3><p>以将 psvm 修改成 main 和 sout 修改成 syso 为例：</p><p><img src="/images/javawz/ide/1203928-20190227160848935-236915794.png" alt></p><p><img src="/images/javawz/ide/1203928-20190227160905997-1365618359.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;intellij-idea-中自定义模板代码的缩写&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#intellij-idea-中自定义模板代码的缩写&quot;&gt;&lt;/a&gt; IntelliJ IDEA 中自定义模板代码的缩写&lt;/h1&gt;
&lt;h3 id
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数据类型转换</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00002%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00002数据类型转换/</id>
    <published>2020-02-03T20:59:05.000Z</published>
    <updated>2020-02-03T22:21:57.550Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据类型转换"><a class="markdownIt-Anchor" href="#数据类型转换"></a> 数据类型转换</h1><h2 id="隐式"><a class="markdownIt-Anchor" href="#隐式"></a> 隐式</h2><p>​代码不需要进行特殊处理,自动处理<br>​规则:数据范围从小到大</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test006</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*从小到大隐式转换*/</span></span><br><span class="line">        <span class="keyword">byte</span>    a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">short</span>   c = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">int</span>     d = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">long</span>    e = <span class="number">5</span>;</span><br><span class="line">        e = d = c = a;</span><br><span class="line">        System.out.println(e);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="显示"><a class="markdownIt-Anchor" href="#显示"></a> 显示</h2><p>​(类型名) 数据<br>​(类型名)(数据)<br>​可能发生数据溢出和精度损失<br>​byte/char/short整数运算默认会自动提升为int类型<br>​boolean类型不能发生数据类型转换</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test006</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*显示强制转换*/</span></span><br><span class="line">        <span class="keyword">byte</span>    a = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span>     b = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">        a = (<span class="keyword">byte</span>)(b);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        b = <span class="number">20</span>;</span><br><span class="line">        a = (<span class="keyword">byte</span>)b;</span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数据类型转换&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#数据类型转换&quot;&gt;&lt;/a&gt; 数据类型转换&lt;/h1&gt;
&lt;h2 id=&quot;隐式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#隐式&quot;&gt;&lt;/a&gt; 隐式&lt;/h2
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>变量</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/04/java00001%E5%8F%98%E9%87%8F/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/04/java00001变量/</id>
    <published>2020-02-03T20:46:10.000Z</published>
    <updated>2020-02-03T20:56:29.796Z</updated>
    
    <content type="html"><![CDATA[<h1 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h1><p>程序运行期间,内容可以发生改变的值称为变量<br>先定义后使用</p><h2 id="变量声明"><a class="markdownIt-Anchor" href="#变量声明"></a> 变量声明</h2><p>数据类型  变量名;<br>数据类型  变量名 = 初始值;</p><h2 id="变量使用"><a class="markdownIt-Anchor" href="#变量使用"></a> 变量使用</h2><p>变量名 = 值;<br>常量有默认类型,如果常量数值大于默认类型,需要手动转换类型<br>3000000000L</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> FileName&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a;<span class="comment">//变量声明</span></span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">1</span>;<span class="comment">//变量声明</span></span><br><span class="line">        </span><br><span class="line">        b = <span class="number">21</span>;<span class="comment">//变量使用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h2><ol><li>​变量名不能重复</li><li>​float和long类型的字母后缀F和L不能丢</li><li>​右侧数值不能超过左侧数据类型范围</li><li>​没有赋值的变量不能使用</li><li>​变量使用不能超过作用域范围</li><li>​作用域：从定义变量的那行起,到直接所属的大括号结束为止</li><li>​可以用一条语句创建多个变量</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;变量&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#变量&quot;&gt;&lt;/a&gt; 变量&lt;/h1&gt;
&lt;p&gt;程序运行期间,内容可以发生改变的值称为变量&lt;br&gt;
先定义后使用&lt;/p&gt;
&lt;h2 id=&quot;变量声明&quot;&gt;&lt;a class=&quot;markdownIt-
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>基础知识</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/03/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/03/基础知识/</id>
    <published>2020-02-03T03:22:30.000Z</published>
    <updated>2020-02-03T05:03:42.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机基础知识"><a class="markdownIt-Anchor" href="#计算机基础知识"></a> 计算机基础知识</h1><h2 id="二进制"><a class="markdownIt-Anchor" href="#二进制"></a> 二进制</h2><h3 id="十进制转二进制"><a class="markdownIt-Anchor" href="#十进制转二进制"></a> 十进制转二进制</h3><p>用辗转相除法:</p><p><img src="/images/javawz/1580701296582.png" alt="1580701296582"></p><h3 id="二进制转十进制"><a class="markdownIt-Anchor" href="#二进制转十进制"></a> 二进制转十进制</h3><p>用二进制分别乘以位权,在进行相加</p><p><img src="/images/javawz/1580701692321.png" alt="1580701692321"></p><h2 id="存储单位"><a class="markdownIt-Anchor" href="#存储单位"></a> 存储单位</h2><p>一般情况下最小单位为bit</p><p>1Byte = 8bit</p><p>1KB = 1024B</p><p>1MB = 1024KB</p><p>1GB = 1024MB</p><p>1TB = 1024GB</p><h2 id="命令提示符"><a class="markdownIt-Anchor" href="#命令提示符"></a> 命令提示符</h2><h3 id="ms-dos"><a class="markdownIt-Anchor" href="#ms-dos"></a> MS-DOS</h3><p>MS代表微软,DOS 代表 Disk Operating System （磁盘操作系统）</p><h3 id="磁盘命令"><a class="markdownIt-Anchor" href="#磁盘命令"></a> 磁盘命令</h3><h4 id="改变磁盘符"><a class="markdownIt-Anchor" href="#改变磁盘符"></a> 改变磁盘符</h4><h5 id="直接-输入磁盘符-并按下回车"><a class="markdownIt-Anchor" href="#直接-输入磁盘符-并按下回车"></a> 直接 输入磁盘符 并按下回车</h5><p><img src="/images/javawz/1580702094756.png" alt="1580702094756"></p><h4 id="改变目录"><a class="markdownIt-Anchor" href="#改变目录"></a> 改变目录</h4><h5 id="cd-目录-按下tab键会自动补全"><a class="markdownIt-Anchor" href="#cd-目录-按下tab键会自动补全"></a> cd 目录        按下tab键会自动补全</h5><p><img src="/images/javawz/1580702169460.png" alt="1580702169460"></p><h5 id="cd-返回上一层"><a class="markdownIt-Anchor" href="#cd-返回上一层"></a> cd . .       返回上一层</h5><p><img src="/images/javawz/1580702225455.png" alt="1580702225455"></p><h5 id="cd-回到根目录"><a class="markdownIt-Anchor" href="#cd-回到根目录"></a> cd \          回到根目录</h5><p><img src="/images/javawz/1580702268907.png" alt="1580702268907"></p><h3 id="dir遍历内容"><a class="markdownIt-Anchor" href="#dir遍历内容"></a> dir遍历内容</h3><h4 id="dir-遍历上一层内容"><a class="markdownIt-Anchor" href="#dir-遍历上一层内容"></a> dir . . 　　　　遍历上一层内容</h4><p><img src="/images/javawz/1580702589782.png" alt="1580702589782"></p><h4 id="dir-遍历当前目录内容"><a class="markdownIt-Anchor" href="#dir-遍历当前目录内容"></a> dir .　　　　　遍历当前目录内容</h4><p><img src="/images/javawz/1580702614130.png" alt="1580702614130"></p><h4 id="dir-文件目录-遍历指定目录内容"><a class="markdownIt-Anchor" href="#dir-文件目录-遍历指定目录内容"></a> dir  文件目录　　　　遍历指定目录内容</h4><p><img src="/images/javawz/1580702640863.png" alt="1580702640863"></p><h4 id="dir-文件-遍历指定文件"><a class="markdownIt-Anchor" href="#dir-文件-遍历指定文件"></a> dir  文件　　　　遍历指定文件</h4><p><img src="/images/javawz/1580702722875.png" alt="1580702722875"></p><h3 id="cls-清屏"><a class="markdownIt-Anchor" href="#cls-清屏"></a> cls 清屏</h3><p><img src="/images/javawz/0001.png" alt="0001"><br><br><br><img src="/images/javawz/0002.png" alt="0002"></p><h3 id="exit-退出dos系统"><a class="markdownIt-Anchor" href="#exit-退出dos系统"></a> exit 　　退出DOS系统</h3><p><img src="/images/javawz/1580702811177.png" alt="1580702811177"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;计算机基础知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#计算机基础知识&quot;&gt;&lt;/a&gt; 计算机基础知识&lt;/h1&gt;
&lt;h2 id=&quot;二进制&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#二进制&quot;&gt;&lt;/a&gt; 二
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>Java编译和运行</title>
    <link href="https://xiaowuyoucy.github.io/2020/02/03/java00000Java%E7%BC%96%E8%AF%91%E5%92%8C%E8%BF%90%E8%A1%8C/"/>
    <id>https://xiaowuyoucy.github.io/2020/02/03/java00000Java编译和运行/</id>
    <published>2020-02-03T03:22:30.000Z</published>
    <updated>2020-02-03T07:22:02.503Z</updated>
    
    <content type="html"><![CDATA[<h1 id="div-idkt目录div"><a class="markdownIt-Anchor" href="#div-idkt目录div"></a> <div id="kt">目录:</div></h1><h5 id="a-styletext-decoration-nonecolorblack-hrefmd1-源文件后缀名a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd1-源文件后缀名a"></a> <a style="text-decoration: none;color:black;" href="#md1"> 源文件后缀名</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd2编写java源文件模板a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd2编写java源文件模板a"></a> <a style="text-decoration: none;color:black;" href="#md2">编写java源文件模板</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd3编译和运行a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd3编译和运行a"></a> <a style="text-decoration: none;color:black;" href="#md3">编译和运行</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd4注释a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd4注释a"></a> <a style="text-decoration: none;color:black;" href="#md4">注释</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd5关键字a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd5关键字a"></a> <a style="text-decoration: none;color:black;" href="#md5">关键字</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd6标识符a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd6标识符a"></a> <a style="text-decoration: none;color:black;" href="#md6">标识符</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd7常量a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd7常量a"></a> <a style="text-decoration: none;color:black;" href="#md7">常量</a></h5><h5 id="a-styletext-decoration-nonecolorblack-hrefmd8数据类型a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefmd8数据类型a"></a> <a style="text-decoration: none;color:black;" href="#md8">数据类型</a></h5><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefkt-div-idmd1源文件后缀名div-a"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefkt-div-idmd1源文件后缀名div-a"></a> <a style="text-decoration: none;color:black;" href="#kt"> <div id="md1">源文件后缀名</div> </a></h3><p>java的源文件后缀名为  *.java</p><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd2编写java源文件模板diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd2编写java源文件模板diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md2">编写java源文件模板</div></a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"Hello World....."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中filename对应着源文件名</p><p>System.out.println为输出函数 ,输出内容,结尾时换行</p><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd3编译和运行diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd3编译和运行diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md3">编译和运行</div></a></h3><p>编译　javac 文件名　　　　编译成功会生成一个class文件</p><p>运行　java 文件名　　　　　文件名后面不要带class后缀</p><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd4注释diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd4注释diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md4">注释</div></a></h3><p>// 单行注释</p><p>/**/多行注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//我是单行注释</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        我是多行注释</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd5关键字diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd5关键字diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md5">关键字</div></a></h3><ul><li>​特征<ul><li>​全部小写</li><li>​在增强版记事本中有颜色</li></ul></li></ul><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd6标识符diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd6标识符diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md6">标识符</div></a></h3><ul><li><h5 id="命名规则"><a class="markdownIt-Anchor" href="#命名规则"></a> 命名规则</h5><ul><li>可以包含字母，数字，下划线，$</li><li>不能以数字开头</li><li>标识符不能是关键字</li></ul></li><li><h5 id="命名规范"><a class="markdownIt-Anchor" href="#命名规范"></a> 命名规范</h5><ul><li>类名　　大驼峰式 :首字母大写，后面每个单词首字母大写 MyNmae</li><li>变量名　　小驼峰式：首字母小写，后面每个单词首字母大写nameSize</li><li>方法名　　小驼峰式：首字母小写，后面每个单词首字母大写nameSize</li></ul></li></ul><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd7常量diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd7常量diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md7">常量</div></a></h3><p>程序运行期间，固定不变的量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mian</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String a = <span class="string">"abc"</span>;<span class="comment">//字符串常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> iZhengXing = <span class="number">123</span>;<span class="comment">//整型常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">float</span> fXiaoShu = <span class="number">123.2F</span>;<span class="comment">//浮点型常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">char</span> cZifu = <span class="string">'c'</span>;<span class="comment">//字符常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">boolean</span> isBool = <span class="keyword">true</span>;<span class="comment">//布尔型常量</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//还有一个null  空常量</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="a-styletext-decoration-nonecolorblack-hrefktdiv-idmd8数据类型diva"><a class="markdownIt-Anchor" href="#a-styletext-decoration-nonecolorblack-hrefktdiv-idmd8数据类型diva"></a> <a style="text-decoration: none;color:black;" href="#kt"><div id="md8">数据类型</div></a></h3><h4 id="整型"><a class="markdownIt-Anchor" href="#整型"></a> 整型</h4><p>byte，　short，　int，　long</p><h4 id="浮点型"><a class="markdownIt-Anchor" href="#浮点型"></a> 浮点型</h4><p>​float，double</p><h4 id="布尔型"><a class="markdownIt-Anchor" href="#布尔型"></a> 布尔型</h4><p>​boolean</p><h4 id="字符型"><a class="markdownIt-Anchor" href="#字符型"></a> 字符型</h4><p>​char<br>​</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> filename&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mian</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       <span class="comment">/***********整型************/</span></span><br><span class="line">       <span class="keyword">byte</span> bXinBie;<span class="comment">//1个字节</span></span><br><span class="line">       <span class="keyword">short</span>sXiaoZheng;<span class="comment">//2个字节</span></span><br><span class="line">       <span class="keyword">int</span>iRenLei;<span class="comment">//4个字节</span></span><br><span class="line">       <span class="keyword">long</span>lShaZi;<span class="comment">//4个字节</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**********浮点型************/</span></span><br><span class="line">        <span class="keyword">float</span> fFengShu;<span class="comment">//4个字节</span></span><br><span class="line">        <span class="keyword">double</span> dYuanZhouLv;<span class="comment">//8个字节</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**********布尔型************/</span></span><br><span class="line">        <span class="keyword">boolean</span> isOk;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/**********字符型************/</span></span><br><span class="line">        <span class="keyword">char</span> cPingFen;<span class="comment">//1个字节</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h4><ol><li>​字符串不是基本类型，而是引用类型</li><li>​浮点型可能只是一个近似值，并非精确值</li><li>​数据范围与字节数不一定相关，例如float数据比long更加广泛，但是float更加广泛</li><li>​浮点数默认是double类型，如果要用float类型要加后缀F</li><li>​整数默认类型是int，如果要用long，后缀要加L</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;div-idkt目录div&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#div-idkt目录div&quot;&gt;&lt;/a&gt; &lt;div id=&quot;kt&quot;&gt;目录:&lt;/div&gt;&lt;/h1&gt;
&lt;h5 id=&quot;a-styletext-decoration-no
      
    
    </summary>
    
      <category term="Java" scheme="https://xiaowuyoucy.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>个人简历</title>
    <link href="https://xiaowuyoucy.github.io/2019/12/07/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    <id>https://xiaowuyoucy.github.io/2019/12/07/个人简历/</id>
    <published>2019-12-07T10:59:46.000Z</published>
    <updated>2019-12-07T10:59:46.442Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>个人经历</title>
    <link href="https://xiaowuyoucy.github.io/2019/12/07/%E4%B8%AA%E4%BA%BA%E7%BB%8F%E5%8E%86/"/>
    <id>https://xiaowuyoucy.github.io/2019/12/07/个人经历/</id>
    <published>2019-12-07T10:57:37.000Z</published>
    <updated>2019-12-07T10:57:37.110Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Golang 指针</title>
    <link href="https://xiaowuyoucy.github.io/2019/12/05/201912050104/"/>
    <id>https://xiaowuyoucy.github.io/2019/12/05/201912050104/</id>
    <published>2019-12-04T17:05:00.000Z</published>
    <updated>2019-12-04T17:06:13.569Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">%T 类型占位符</span></span><br><span class="line"><span class="comment">%v 值占位符</span></span><br><span class="line"><span class="comment">%p 地址（指针）占位符，只有地址才能替换%p</span></span><br><span class="line"><span class="comment">&amp;value 对值取地址</span></span><br><span class="line"><span class="comment">*addr 对地址取值</span></span><br><span class="line"><span class="comment">**int 指向int型指针的指针</span></span><br><span class="line"><span class="comment">作用：函数传参时，传递指针叫引用传递，值传递是拷贝式的，对被传参数的修改是不会改变本体的，想要改变本体只能是引用传递</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//指针就是地址</span></span><br><span class="line"><span class="comment">//&amp;value 对值取地址</span></span><br><span class="line"><span class="comment">//*ptr 对地址取值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main021</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//声明变量a时，系统开辟了一块内存【地址】，里面存的【值】是123</span></span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span> = <span class="number">123</span></span><br><span class="line">fmt.Printf(<span class="string">"a的类型是%T\n"</span>, a)<span class="comment">//int</span></span><br><span class="line">fmt.Printf(<span class="string">"a的值是%v\n"</span>, a)<span class="comment">//123</span></span><br><span class="line">fmt.Printf(<span class="string">"a的地址是%p\n"</span>, &amp;a)<span class="comment">//0x...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&amp;a取变量a的地址</span></span><br><span class="line">aPointer := &amp;a</span><br><span class="line">fmt.Printf(<span class="string">"aPointer的类型是%T\n"</span>,aPointer)<span class="comment">//*int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将aPointer指向的地址中的值修改为456</span></span><br><span class="line">*aPointer = <span class="number">456</span></span><br><span class="line">fmt.Println(<span class="string">"*aPointer="</span>,*aPointer)<span class="comment">//456</span></span><br><span class="line"><span class="comment">//a的值就变成了456</span></span><br><span class="line">fmt.Println(<span class="string">"a="</span>,a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//先定义原始变量，修改其指针中的值，会直接改变原变量</span></span><br><span class="line"><span class="comment">//指针如果没有重新赋值，永远指向同一块地址</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main022</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//系统给x分配了内存</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="number">456</span></span><br><span class="line">fmt.Println(x)<span class="comment">//456</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义整型指针（存储整型数据的地址）</span></span><br><span class="line"><span class="comment">//默认赋值为空&lt;nil&gt;</span></span><br><span class="line"><span class="keyword">var</span> xPtr *<span class="keyword">int</span></span><br><span class="line">fmt.Println(<span class="string">"xPtr="</span>, xPtr)<span class="comment">//nil</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//aPtr指向x的地址</span></span><br><span class="line">xPtr = &amp;x</span><br><span class="line"></span><br><span class="line"><span class="comment">//将xPtr指向的地址中的值修改为789</span></span><br><span class="line">*xPtr = <span class="number">789</span></span><br><span class="line"></span><br><span class="line">fmt.Println(x)         <span class="comment">//789</span></span><br><span class="line">fmt.Println(xPtr)      <span class="comment">//0xc042052080</span></span><br><span class="line">fmt.Println(&amp;x)        <span class="comment">//0xc042052080</span></span><br><span class="line">fmt.Println(*xPtr)     <span class="comment">//789</span></span><br><span class="line">fmt.Println(*xPtr == x) <span class="comment">//true</span></span><br><span class="line">fmt.Println(xPtr == &amp;x) <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> y = <span class="number">456</span></span><br><span class="line">*xPtr = y</span><br><span class="line">fmt.Println(x)          <span class="comment">//456</span></span><br><span class="line">fmt.Println(xPtr)       <span class="comment">//没有变</span></span><br><span class="line">fmt.Println(&amp;x)         <span class="comment">//没有变</span></span><br><span class="line">fmt.Println(*xPtr)      <span class="comment">//456</span></span><br><span class="line">fmt.Println(*xPtr == y) <span class="comment">//true</span></span><br><span class="line">fmt.Println(x == y)     <span class="comment">//true</span></span><br><span class="line">fmt.Println(&amp;x == &amp;y)   <span class="comment">//false</span></span><br><span class="line">fmt.Println(xPtr == &amp;y) <span class="comment">//false</span></span><br><span class="line">fmt.Printf(<span class="string">"y的地址是%p\n"</span>,&amp;y)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"----------"</span>)</span><br><span class="line"><span class="comment">//xPtr指向y的地址</span></span><br><span class="line">xPtr = &amp;y</span><br><span class="line">y = <span class="number">789</span></span><br><span class="line">fmt.Println(x)      <span class="comment">//456</span></span><br><span class="line">fmt.Println(y)      <span class="comment">//789</span></span><br><span class="line">fmt.Println(*xPtr)<span class="comment">//789</span></span><br><span class="line">fmt.Println(&amp;x == xPtr) <span class="comment">//false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针是严格检测数据类型的</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main023</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">123</span></span><br><span class="line"><span class="keyword">var</span> intPtr *<span class="keyword">int</span></span><br><span class="line">intPtr = &amp;x</span><br><span class="line">fmt.Println(intPtr, *intPtr) <span class="comment">//0x...,123</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//var y = "你妹"</span></span><br><span class="line"><span class="comment">//intPtr = &amp;y//编译错误，【整型指针】无法赋值为【字符串的地址】</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指针的指针</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main024</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> x = <span class="number">123</span></span><br><span class="line"><span class="keyword">var</span> mPtr *<span class="keyword">int</span> = &amp;x</span><br><span class="line"></span><br><span class="line"><span class="comment">//var mmp **int</span></span><br><span class="line">mmPtr := &amp;mPtr</span><br><span class="line">fmt.Println(mmPtr)<span class="comment">//0xc042072018</span></span><br><span class="line">fmt.Printf(<span class="string">"mmPtr的类型是%T\n"</span>,mmPtr)<span class="comment">//mmPtr的类型是**int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印x的值</span></span><br><span class="line">fmt.Println(*mPtr)<span class="comment">//123</span></span><br><span class="line">fmt.Println(*(*mmPtr))<span class="comment">//123</span></span><br><span class="line">fmt.Println(**mmPtr)<span class="comment">//123</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//main021()</span></span><br><span class="line"><span class="comment">//main022()</span></span><br><span class="line"><span class="comment">//main023()</span></span><br><span class="line">main024()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang指针" scheme="https://xiaowuyoucy.github.io/tags/Golang%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/27/hello-world/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/27/hello-world/</id>
    <published>2019-11-27T08:08:58.620Z</published>
    <updated>2019-11-27T08:08:58.620Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Golang闭包函数</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/19/201911190628/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/19/201911190628/</id>
    <published>2019-11-18T22:28:00.000Z</published>
    <updated>2019-11-30T17:34:35.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="闭包函数"><a class="markdownIt-Anchor" href="#闭包函数"></a> 闭包函数</h1><p><strong>闭包函数概述</strong> 闭包函数：返回函数的函数 闭包的好处：【内层函数的状态】被保存在闭包中 不使用闭包，就要开<br>辟多个全局变量来保存函数以外的数据 如果说这个函数被多方调用，大家都需要各保存各的数据，那么此时就需要开辟多个全局变量 具体使用哪个全局变量，还要在函数内做判断——增大了重复的代码量，令代码看起来比较垃圾</p><p><strong>案例</strong>：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">李逵和武松的Study方法的逻辑是几乎一模一样的</span></span><br><span class="line"><span class="comment">然而为了分别保存二人的学习进度，需要开辟两个全局变量，函数内部需要使用两条分支结构才能完成业务逻辑；</span></span><br><span class="line"><span class="comment">如果是108将都来学习...</span></span><br><span class="line"><span class="comment">此时代码的可复用性很差！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> likuiProgress <span class="keyword">int</span> <span class="comment">//0</span></span><br><span class="line"><span class="keyword">var</span> wusongProgress <span class="keyword">int</span> <span class="comment">//0</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Study</span><span class="params">(name <span class="keyword">string</span>,hours <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s学习了%d小时\n"</span>,name,hours)</span><br><span class="line"><span class="keyword">if</span> name==<span class="string">"李逵"</span>&#123;</span><br><span class="line">likuiProgress += hours</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> name==<span class="string">"武松"</span>&#123;</span><br><span class="line">wusongProgress += hours</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main081</span><span class="params">()</span></span> &#123;</span><br><span class="line">Study(<span class="string">"李逵"</span>, <span class="number">5</span>)</span><br><span class="line">fmt.Printf(<span class="string">"李逵的学习进度是%d/10000\n"</span>,likuiProgress)</span><br><span class="line"></span><br><span class="line">Study(<span class="string">"武松"</span>, <span class="number">15</span>)</span><br><span class="line">fmt.Printf(<span class="string">"李逵的学习进度是%d/10000\n"</span>,wusongProgress)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">使用闭包函数优化Study</span></span><br><span class="line"><span class="comment">每个人有不同的学习进度，将这个进度保存在【各自的闭包】中</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">闭包函数：返回函数的函数</span></span><br><span class="line"><span class="comment">闭包函数的好处：使用同一份内层函数代码，创建出任意多个不同的函数对象，这些对象各自的状态都被保存在函数闭包（外层函数）中，各行其道互不干扰</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetStudyFunc</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="title">func</span><span class="params">(hours <span class="keyword">int</span>)</span> <span class="params">(progress <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用于保存内层函数的状态</span></span><br><span class="line"><span class="keyword">var</span> progress <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义内层函数</span></span><br><span class="line">studyFunc := <span class="function"><span class="keyword">func</span><span class="params">(hours <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"%s学习了%d小时\n"</span>,name,hours)</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新内层函数在闭包中的状态</span></span><br><span class="line">progress += hours</span><br><span class="line"><span class="keyword">return</span> progress</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"study的类型是%T\n"</span>, studyFunc)</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回内层函数</span></span><br><span class="line"><span class="keyword">return</span> studyFunc</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用闭包函数，得到三个【代码相同的不同函数对象】</span></span><br><span class="line">studyFunc1 := GetStudyFunc(<span class="string">"李逵"</span>)</span><br><span class="line">studyFunc2 := GetStudyFunc(<span class="string">"武松"</span>)</span><br><span class="line">studyFunc3 := GetStudyFunc(<span class="string">"鲁智深"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//交替执行这些内层函数，其状态的更新会被其函数闭包所保存</span></span><br><span class="line">lkProgress := studyFunc1(<span class="number">5</span>)</span><br><span class="line">lzsProgress := studyFunc3(<span class="number">17</span>)</span><br><span class="line">wsProgress := studyFunc2(<span class="number">15</span>)</span><br><span class="line">lkProgress = studyFunc1(<span class="number">3</span>)</span><br><span class="line">lzsProgress = studyFunc3(<span class="number">12</span>)</span><br><span class="line">lkProgress = studyFunc1(<span class="number">2</span>)</span><br><span class="line">wsProgress = studyFunc2(<span class="number">13</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果，三个函数的各自的状态没有互相影响</span></span><br><span class="line">fmt.Printf(<span class="string">"李逵的学习进度是%d/10000\n"</span>,lkProgress)</span><br><span class="line">fmt.Printf(<span class="string">"武松的学习进度是%d/10000\n"</span>,wsProgress)</span><br><span class="line">fmt.Printf(<span class="string">"鲁智深的学习进度是%d/10000\n"</span>,lzsProgress)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;闭包函数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#闭包函数&quot;&gt;&lt;/a&gt; 闭包函数&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;闭包函数概述&lt;/strong&gt; 闭包函数：返回函数的函数 闭包的好处：【内层函数的状态】被保存在闭包中 不使用闭包，
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang闭包函数" scheme="https://xiaowuyoucy.github.io/tags/Golang%E9%97%AD%E5%8C%85%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Golang匿名函数</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/19/201911190625/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/19/201911190625/</id>
    <published>2019-11-18T22:26:00.000Z</published>
    <updated>2019-11-18T22:27:43.510Z</updated>
    
    <content type="html"><![CDATA[<h1 id="匿名函数概述"><a class="markdownIt-Anchor" href="#匿名函数概述"></a> 匿名函数概述</h1><ul><li>匿名函数的主要作用是封装一段一次性执行的代码</li><li>它无所谓复用，所以无需起名，之所以进行封装的意义，在于使一段代码成为一个整体</li><li>defer延时执行一段代码，和go并发执行一段代码是匿名函数的常用场景</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//匿名函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//延时执行的匿名函数</span></span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"劳资延时·无名，劳资最后执行"</span>)</span><br><span class="line">&#125;()</span><br><span class="line"><span class="comment">//并发执行的匿名函数</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"劳资并发·无名，劳资并发执行"</span>)</span><br><span class="line">&#125;()</span><br><span class="line"><span class="comment">//一个带参的匿名函数</span></span><br><span class="line">ret := <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"劳资普通·无名，下面劳资睡一会"</span>)</span><br><span class="line">time.Sleep(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> a + b</span><br><span class="line">&#125;(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">fmt.Println(ret)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;匿名函数概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#匿名函数概述&quot;&gt;&lt;/a&gt; 匿名函数概述&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;匿名函数的主要作用是封装一段一次性执行的代码&lt;/li&gt;
&lt;li&gt;它无所谓复用，所以无需起名，之所以进行封装的
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang匿名函数" scheme="https://xiaowuyoucy.github.io/tags/Golang%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>函数</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/19/201911190615/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/19/201911190615/</id>
    <published>2019-11-18T22:15:00.000Z</published>
    <updated>2019-11-18T22:23:31.611Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数概述"><a class="markdownIt-Anchor" href="#函数概述"></a> 函数概述</h1><ul><li>函数是对一段能够重复使用的代码的封装</li><li>函数的参数定义了外界给函数输入的数据</li><li>函数的返回值定义了函数给外界输出的数据</li><li>Go语言函数支持不定长参数和多个返回值</li></ul><p><strong>@函数定义和调用</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sayHello</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"fuck off!"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line">sayHello()</span><br></pre></td></tr></table></figure><p><strong>@函数参数 无参函数</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add0</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"没参数，add你妹啊"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>带参函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add1</span><span class="params">(a <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"收到一个参数"</span>, a)</span><br><span class="line">fmt.Println(<span class="string">"一个参数，add你妹啊"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多个参数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多个参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addm1</span><span class="params">(a <span class="keyword">int</span>, b <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"加和是"</span>, a+b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//类型相同的参数被合写在一起了</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addm2</span><span class="params">(a, b <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"加和是"</span>, a+b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//类型不同的参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addm3</span><span class="params">(a, b <span class="keyword">int</span>, c <span class="keyword">float32</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"加和是"</span>, <span class="keyword">float32</span>(a)+<span class="keyword">float32</span>(b)+c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不定长参数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addx</span><span class="params">(x ...<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//参数的长度是 5</span></span><br><span class="line">fmt.Println(<span class="string">"参数的长度是"</span>, <span class="built_in">len</span>(x))</span><br><span class="line"><span class="comment">//参数的类型是[]int</span></span><br><span class="line">fmt.Printf(<span class="string">"参数的类型是%T\n"</span>, x)</span><br><span class="line"><span class="keyword">var</span> result = <span class="number">0</span></span><br><span class="line"><span class="comment">//遍历不定长参数</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> x &#123;</span><br><span class="line">fmt.Println(i, v)</span><br><span class="line">result += v</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加和是 15</span></span><br><span class="line">fmt.Println(<span class="string">"加和是"</span>, result)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>@函数返回值</strong> 无返回值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//无返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sub0</span><span class="params">(a, b <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"相减的结果是"</span>, a-b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有返回值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sub11</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"相减的结果是"</span>, a-b)</span><br><span class="line"><span class="keyword">return</span> a - b</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sub12</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="params">(ret <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"相减的结果是"</span>, a-b)</span><br><span class="line">ret = a - b</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多个返回值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多个返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">subm1</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="params">(<span class="keyword">int</span>, <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"相减的结果是"</span>, a-b)</span><br><span class="line"><span class="keyword">return</span> a - b, <span class="string">"你妹"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">subm2</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="params">(ret <span class="keyword">int</span>, remark <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"相减的结果是"</span>, a-b)</span><br><span class="line">ret = a - b</span><br><span class="line">remark = <span class="string">"你妹"</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;函数概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#函数概述&quot;&gt;&lt;/a&gt; 函数概述&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;函数是对一段能够重复使用的代码的封装&lt;/li&gt;
&lt;li&gt;函数的参数定义了外界给函数输入的数据&lt;/li&gt;
&lt;li&gt;函数的返
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang函数" scheme="https://xiaowuyoucy.github.io/tags/Golang%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Golang延时执行defer</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/19/201911190306/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/19/201911190306/</id>
    <published>2019-11-18T19:09:00.000Z</published>
    <updated>2019-11-18T19:21:46.056Z</updated>
    
    <content type="html"><![CDATA[<p><strong>defer概述</strong> defer xxx() 延时执行，将xxx放在函数的最后执行 多个defer xxx()时,所有defer倒序执行，即最早声明<br>的defer会最后执行</p><p><strong>用途</strong></p><ul><li>(数据库读写，文件读写，网络数据读写)</li><li>资源=数据库连接，打开的文件对象，网路连接</li><li>资源开销（CPU，内存，磁盘…）巨大</li><li>资源，随用随开，用完【即】关</li></ul><br><br><br><p><strong>场景</strong></p><ul><li><p>O只是场景之一</p></li><li><p>其它场景：消费完毕要买单，运动完要洗澡，自习结束要关灯…</p></li></ul><br><br><br><p><strong>读写数据库，并在程序的最后关闭数据库</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">demo41</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//随用随开，用完【即】关</span></span><br><span class="line">fmt.Println(<span class="string">"打开数据库"</span>)</span><br><span class="line"><span class="comment">//defer所唤起的函数将在函数结束前才执行</span></span><br><span class="line"><span class="keyword">defer</span> closeDatabase()</span><br><span class="line">fmt.Println(<span class="string">"愉快地读写数据"</span>)</span><br><span class="line">fmt.Println(<span class="string">"读写完毕"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><br><p><strong>多个defer时，最早defer的操作最后执行</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">demo42</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//打开数据库</span></span><br><span class="line">fmt.Println(<span class="string">"打开数据库"</span>)</span><br><span class="line"><span class="keyword">defer</span> closeDatabase()</span><br><span class="line"><span class="comment">//读入DB数据</span></span><br><span class="line">fmt.Println(<span class="string">"读入DB数据"</span>)</span><br><span class="line"><span class="comment">//打开文件</span></span><br><span class="line">fmt.Println(<span class="string">"打开文件"</span>)</span><br><span class="line"><span class="keyword">defer</span> closeFile()</span><br><span class="line"><span class="comment">//向文件中写出DB中的数据</span></span><br><span class="line">fmt.Println(<span class="string">"读入DB数据"</span>)</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line"><span class="comment">//继续操作数据库</span></span><br><span class="line">fmt.Println(<span class="string">"继续操作数据库"</span>)</span><br><span class="line"><span class="comment">//关闭数据库</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">closeDatabase</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"关闭数据库"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">closeFile</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"关闭文件"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><p><strong>其他defer案例：</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">xingzuoZhensuo</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> birthday <span class="keyword">string</span></span><br><span class="line">fmt.Println(<span class="string">"请输入您的生日，例如0823"</span>)</span><br><span class="line">fmt.Scan(&amp;birthday)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> birthday &gt;= <span class="string">"0823"</span> &amp;&amp; birthday &lt;= <span class="string">"0922"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下真乃神人也"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0923"</span> &amp;&amp; birthday &lt;= <span class="string">"1022"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是天秤座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"1023"</span> &amp;&amp; birthday &lt;= <span class="string">"1122"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是天蝎座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"1123"</span> &amp;&amp; birthday &lt;= <span class="string">"1222"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是射手座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (birthday &gt;= <span class="string">"1223"</span> &amp;&amp; birthday &lt;= <span class="string">"1231"</span>) || (birthday &gt;= <span class="string">"0101"</span> &amp;&amp; birthday &lt;= <span class="string">"0122"</span>) &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是摩羯座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0123"</span> &amp;&amp; birthday &lt;= <span class="string">"0222"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是水瓶座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (birthday &gt;= <span class="string">"0223"</span> &amp;&amp; birthday &lt;= <span class="string">"0229"</span>) || (birthday &gt;= <span class="string">"0301"</span> &amp;&amp; birthday &lt;= <span class="string">"0322"</span>) &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是双鱼座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0323"</span> &amp;&amp; birthday &lt;= <span class="string">"0422"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是白羊座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0423"</span> &amp;&amp; birthday &lt;= <span class="string">"0522"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是金牛座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0523"</span> &amp;&amp; birthday &lt;= <span class="string">"0622"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是双子座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0623"</span> &amp;&amp; birthday &lt;= <span class="string">"0722"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是巨蟹座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0723"</span> &amp;&amp; birthday &lt;= <span class="string">"0822"</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是狮子座"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下就是传说中的蛇夫座鸭！"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main071</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"亲爱的患者，欢迎来到我院！"</span>)</span><br><span class="line"><span class="comment">//挂起一个延时任务（在当前函数返回（结束）前执行）</span></span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"同志再见，我院永远欢迎你！"</span>)</span><br><span class="line"></span><br><span class="line">xingzuoZhensuo()</span><br><span class="line">fmt.Println(<span class="string">"事务A"</span>)</span><br><span class="line">fmt.Println(<span class="string">"事务B"</span>)</span><br><span class="line">fmt.Println(<span class="string">"事务C"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">·诊断完毕后连续输出“您的诊断已结束”,“请这边滚”，“我院永远欢迎你”</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"亲爱的患者，欢迎来到我院！"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多个defer时，执行顺序是倒置的*/</span></span><br><span class="line"><span class="comment">//第1个defer会倒数第1个执行</span></span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"我院永远欢迎你"</span>)</span><br><span class="line"><span class="comment">//第2个defer会倒数第2个执行</span></span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"请这边滚"</span>)</span><br><span class="line"><span class="comment">//第3个defer会倒数第3个执行</span></span><br><span class="line"><span class="keyword">defer</span> fmt.Println(<span class="string">"您的诊断已结束"</span>)</span><br><span class="line"></span><br><span class="line">xingzuoZhensuo()</span><br><span class="line">fmt.Println(<span class="string">"事务A"</span>)</span><br><span class="line">fmt.Println(<span class="string">"事务B"</span>)</span><br><span class="line">fmt.Println(<span class="string">"事务C"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;defer概述&lt;/strong&gt; defer xxx() 延时执行，将xxx放在函数的最后执行 多个defer xxx()时,所有defer倒序执行，即最早声明&lt;br&gt;
的defer会最后执行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用途&lt;/strong&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="延时执行defer" scheme="https://xiaowuyoucy.github.io/tags/%E5%BB%B6%E6%97%B6%E6%89%A7%E8%A1%8Cdefer/"/>
    
  </entry>
  
  <entry>
    <title>Golang的跳转语句（GOTO）</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/19/201911190123/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/19/201911190123/</id>
    <published>2019-11-18T17:25:00.000Z</published>
    <updated>2019-11-18T17:26:00.356Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">STUDYHARD:</span><br><span class="line">fmt.Println(<span class="string">"开始努力奋斗！"</span>)</span><br><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"努力奋斗了%d小时\n"</span>, i)</span><br><span class="line">time.Sleep(<span class="number">500</span> * time.Millisecond)</span><br><span class="line">i++</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> i &gt; <span class="number">10</span> &#123;</span><br><span class="line"><span class="comment">//跳出当前循环</span></span><br><span class="line"><span class="comment">//break</span></span><br><span class="line">fmt.Println(<span class="string">"恭喜你获得了组织颁发的奖状！"</span>)</span><br><span class="line"><span class="keyword">goto</span> TRYAGIN</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BONUS:</span><br><span class="line">fmt.Println(<span class="string">"循环外的世界"</span>)</span><br><span class="line">fmt.Println(<span class="string">"送你海景别野一套"</span>)</span><br><span class="line">fmt.Println(<span class="string">"送你满汉全席一套"</span>)</span><br><span class="line">fmt.Println(<span class="string">"送你我厂生产的女朋友一个"</span>)</span><br><span class="line"></span><br><span class="line">TRYAGIN:</span><br><span class="line"><span class="keyword">var</span> answer <span class="keyword">string</span></span><br><span class="line">fmt.Println(<span class="string">"要不要再玩一次呢？Y/N"</span>)</span><br><span class="line">fmt.Scan(&amp;answer)</span><br><span class="line"><span class="keyword">if</span> answer == <span class="string">"N"</span> &#123;</span><br><span class="line"><span class="keyword">goto</span> GAMEOVER</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> answer == <span class="string">"Y"</span> &#123;</span><br><span class="line"><span class="keyword">goto</span> STUDYHARD</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> answer == <span class="string">"FUCKOFF"</span>&#123;</span><br><span class="line"><span class="keyword">goto</span> BONUS</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GAMEOVER:</span><br><span class="line">fmt.Println(<span class="string">"GAME OVER"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="GOTO语句" scheme="https://xiaowuyoucy.github.io/tags/GOTO%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>Golang流程控制</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/18/201911182336/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/18/201911182336/</id>
    <published>2019-11-18T15:37:00.000Z</published>
    <updated>2019-11-18T16:01:40.381Z</updated>
    
    <content type="html"><![CDATA[<h1 id="if-else"><a class="markdownIt-Anchor" href="#if-else"></a> if else</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">字符串比大小</span></span><br><span class="line"><span class="comment">比首字符在字符集中出现的序号，首字符相同则比较第二个字符，以此类推</span></span><br><span class="line"><span class="comment">go的编译器默认使用UTF8字符集</span></span><br><span class="line"><span class="comment">在UTF8字符集中数字出现的顺序为：0123456789</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main031</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"0"</span>&gt;<span class="string">"9"</span>)</span><br><span class="line">fmt.Println(<span class="string">"012"</span>&gt;<span class="string">"011"</span>)</span><br><span class="line">fmt.Println(<span class="string">"0823"</span>&gt;<span class="string">"0423"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">根据用户输入的生日判断其星座：</span></span><br><span class="line"><span class="comment">①单分支：如果位于0823-0922之间（处女座），输出“阁下真乃神人也！”</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main032</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> birthday <span class="keyword">string</span></span><br><span class="line">fmt.Println(<span class="string">"请输入您的生日，例如0823"</span>)</span><br><span class="line">fmt.Scan(&amp;birthday)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> birthday &gt;= <span class="string">"0823"</span> &amp;&amp; birthday&lt;=<span class="string">"0922"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下真乃神人也"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">"诊断结束！"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">根据用户输入的生日判断其星座：</span></span><br><span class="line"><span class="comment">②双分支：如果位于0823-0922之间（处女座），输出“阁下乃神人也！”，否则输出“垃圾”</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main033</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> birthday <span class="keyword">string</span></span><br><span class="line">fmt.Println(<span class="string">"请输入您的生日，例如0823"</span>)</span><br><span class="line">fmt.Scan(&amp;birthday)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> birthday &gt; <span class="string">"0822"</span> &amp;&amp; birthday &lt; <span class="string">"0923"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下真乃神人也"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"乐色"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="else-if-多分支"><a class="markdownIt-Anchor" href="#else-if-多分支"></a> else if 多分支</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">根据用户输入的生日判断其星座：</span></span><br><span class="line"><span class="comment">③多分支：判断其具体星座</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main034</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> birthday <span class="keyword">string</span></span><br><span class="line">fmt.Println(<span class="string">"请输入您的生日，例如0823"</span>)</span><br><span class="line">fmt.Scan(&amp;birthday)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> birthday &gt;= <span class="string">"0823"</span> &amp;&amp; birthday &lt;= <span class="string">"0922"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下真乃神人也"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0923"</span> &amp;&amp; birthday &lt;= <span class="string">"1022"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是天秤座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"1023"</span> &amp;&amp; birthday &lt;= <span class="string">"1122"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是天蝎座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"1123"</span> &amp;&amp; birthday &lt;= <span class="string">"1222"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是射手座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (birthday &gt;= <span class="string">"1223"</span> &amp;&amp; birthday &lt;= <span class="string">"1231"</span>) || (birthday&gt;=<span class="string">"0101"</span> &amp;&amp; birthday&lt;=<span class="string">"0122"</span>)&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是摩羯座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0123"</span> &amp;&amp; birthday &lt;= <span class="string">"0222"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是水瓶座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (birthday &gt;= <span class="string">"0223"</span> &amp;&amp; birthday &lt;= <span class="string">"0229"</span>)||(birthday&gt;=<span class="string">"0301"</span> &amp;&amp; birthday&lt;=<span class="string">"0322"</span>)&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是双鱼座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0323"</span> &amp;&amp; birthday &lt;= <span class="string">"0422"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是白羊座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0423"</span> &amp;&amp; birthday &lt;= <span class="string">"0522"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是金牛座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0523"</span> &amp;&amp; birthday &lt;= <span class="string">"0622"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是双子座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0623"</span> &amp;&amp; birthday &lt;= <span class="string">"0722"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是巨蟹座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> birthday &gt;= <span class="string">"0723"</span> &amp;&amp; birthday &lt;= <span class="string">"0822"</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下是狮子座"</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">fmt.Println(<span class="string">"阁下就是传说中的蛇夫座鸭！"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="switch"><a class="markdownIt-Anchor" href="#switch"></a> SWITCH</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@星座诊所2(switch)</span></span><br><span class="line"><span class="comment">根据用户输入的出生月份猜测其星座：</span></span><br><span class="line"><span class="comment">·白羊（4） 金牛（5） 双子（6） 巨蟹（7） 狮子（8） 处女（9） 天平（10） 天蝎（11） 射手（12） 摩羯（1） 水瓶（2） 双鱼（3）</span></span><br><span class="line"><span class="comment">·使用单点case判断其星座；</span></span><br><span class="line"><span class="comment">·使用单点case集合判断其季节（春夏秋冬）</span></span><br><span class="line"><span class="comment">·使用自由条件case判断用户具体星座</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main041</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"请输入你的出生月份(1-12)"</span>)</span><br><span class="line"><span class="keyword">var</span> month <span class="keyword">int</span></span><br><span class="line">fmt.Scan(&amp;month)</span><br><span class="line">fmt.Printf(<span class="string">"month=%d"</span>, month)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">对month的可能取值，做单点判断</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">switch</span> month &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"摩羯"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"水瓶"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"双鱼"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"白羊"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"金牛"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"双子"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"巨蟹"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"狮子"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"处女"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"天平"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"天蝎"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">fmt.Printf(<span class="string">"你大概率是%s座\n"</span>, <span class="string">"射手"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//month的值没有落在上述任何一种情形中</span></span><br><span class="line"><span class="comment">//default是可选的</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"你就是传说中的蛇夫座"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">·使用单点case集合判断其季节（春夏秋冬）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main042</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"请输入你的出生月份(1-12)"</span>)</span><br><span class="line"><span class="keyword">var</span> month <span class="keyword">int</span></span><br><span class="line">fmt.Scan(&amp;month)</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> month &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">12</span>, <span class="number">1</span>, <span class="number">2</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在冬天"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在春天"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在夏天"</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在秋天"</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在火星"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">·使用自由条件case判断其季节（春夏秋冬）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main043</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"请输入你的出生月份(1-12)"</span>)</span><br><span class="line"><span class="keyword">var</span> month <span class="keyword">int</span></span><br><span class="line">fmt.Scan(&amp;month)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有明确指定switch的对象，case可以跟任意判断条件</span></span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">3</span> &amp;&amp; month &lt;= <span class="number">5</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在春天"</span>)</span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">6</span> &amp;&amp; month &lt;= <span class="number">8</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在夏天"</span>)</span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">9</span> &amp;&amp; month &lt;= <span class="number">11</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在秋天"</span>)</span><br><span class="line"><span class="keyword">case</span> month == <span class="number">12</span> || month == <span class="number">1</span> || month == <span class="number">2</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在冬天"</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在火星"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用fallthrough强制滚动到下一个分支并执行*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main044</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"请输入你的出生月份(1-12)"</span>)</span><br><span class="line"><span class="keyword">var</span> month <span class="keyword">int</span></span><br><span class="line">fmt.Scan(&amp;month)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有明确指定switch的对象，case可以跟任意判断条件</span></span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">3</span> &amp;&amp; month &lt;= <span class="number">5</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在春天"</span>)</span><br><span class="line"><span class="comment">//强制执行下一个分支条件</span></span><br><span class="line"><span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">6</span> &amp;&amp; month &lt;= <span class="number">8</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在夏天"</span>)</span><br><span class="line">fmt.Println(<span class="string">"我们出生在上半年"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> month &gt;= <span class="number">9</span> &amp;&amp; month &lt;= <span class="number">11</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在秋天"</span>)</span><br><span class="line"><span class="comment">//强制执行下一个分支条件</span></span><br><span class="line"><span class="keyword">fallthrough</span></span><br><span class="line"><span class="keyword">case</span> month == <span class="number">12</span> || month == <span class="number">1</span> || month == <span class="number">2</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在冬天"</span>)</span><br><span class="line">fmt.Println(<span class="string">"我们出生在下半年"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">"你出生在火星"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;if-else&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#if-else&quot;&gt;&lt;/a&gt; if else&lt;/h1&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang流程控制" scheme="https://xiaowuyoucy.github.io/tags/Golang%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>Golang类型转换及移位运算</title>
    <link href="https://xiaowuyoucy.github.io/2019/11/18/201911180045/"/>
    <id>https://xiaowuyoucy.github.io/2019/11/18/201911180045/</id>
    <published>2019-11-17T16:46:00.000Z</published>
    <updated>2019-11-17T17:24:35.343Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类型转换"><a class="markdownIt-Anchor" href="#类型转换"></a> 类型转换</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">类型转换强化</span></span><br><span class="line"><span class="comment">整型和浮点型可以直接强制转换</span></span><br><span class="line"><span class="comment">字符串和数值的转换用strconv.ParseInt和strconv.ParseFloat</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main024</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span> = <span class="number">123</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">float64</span> = <span class="number">456.78</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将整型转换为浮点型</span></span><br><span class="line">aFloat := <span class="keyword">float64</span>(a)</span><br><span class="line"><span class="comment">//%T类型占位符，%v是值占位符</span></span><br><span class="line">fmt.Printf(<span class="string">"aFloat的类型是%T,值是%v\n"</span>,aFloat,aFloat)</span><br><span class="line"></span><br><span class="line"><span class="comment">//浮点型转整型，小数部分扔掉</span></span><br><span class="line"><span class="comment">//bInt := int32(b)</span></span><br><span class="line">bInt := <span class="keyword">int</span>(b)</span><br><span class="line">fmt.Printf(<span class="string">"bInt的类型是%T,值是%v\n"</span>,bInt,bInt)</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串转整型</span></span><br><span class="line">resultInt, _ := strconv.ParseInt(<span class="string">"123"</span>, <span class="number">0</span>, <span class="number">64</span>)</span><br><span class="line">fmt.Printf(<span class="string">"resultInt的类型是%T,值是%v\n"</span>,resultInt,resultInt)</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串转浮点型</span></span><br><span class="line">resultFloat, _ := strconv.ParseFloat(<span class="string">"123.45"</span>, <span class="number">64</span>)</span><br><span class="line">fmt.Printf(<span class="string">"resultFloat的类型是%T,值是%v\n"</span>,resultFloat,resultFloat)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*移位运算强化*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//10111</span></span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">uint8</span> = <span class="number">23</span></span><br><span class="line">fmt.Println(a&gt;&gt;<span class="number">3</span>)<span class="comment">//2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//左移</span></span><br><span class="line">fmt.Println(a&lt;&lt;<span class="number">3</span>)<span class="comment">//184</span></span><br><span class="line"><span class="comment">//继续移动，从左侧溢出，当前无符号，最高位是数据位而非符号位</span></span><br><span class="line">fmt.Println(a&lt;&lt;<span class="number">5</span>)<span class="comment">//224</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义有符号8位整型</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">int8</span> = <span class="number">23</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//10111000,最高位为1，为负数，为补码，减一取反得其原码（原码到补码取反加一的逆向）</span></span><br><span class="line">fmt.Println(b&lt;&lt;<span class="number">3</span>)<span class="comment">//-72</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;类型转换&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#类型转换&quot;&gt;&lt;/a&gt; 类型转换&lt;/h1&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
      <category term="Golang" scheme="https://xiaowuyoucy.github.io/categories/Golang/"/>
    
    
      <category term="Golang类型转换及移位运算" scheme="https://xiaowuyoucy.github.io/tags/Golang%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E5%8F%8A%E7%A7%BB%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
</feed>
